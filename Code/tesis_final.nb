(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    831623,      16477]
NotebookOptionsPosition[    822738,      16323]
NotebookOutlinePosition[    823080,      16338]
CellTagsIndexPosition[    823037,      16335]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\[FilledSquare]Tesis final", "Title",
 CellChangeTimes->{{3.7951176018742914`*^9, 
  3.795117641581236*^9}},ExpressionUUID->"de065120-15fa-43dd-8bb5-\
10415e6c5965"],

Cell[CellGroupData[{

Cell["Inicializaci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.777400229667172*^9, 
  3.77740023163906*^9}},ExpressionUUID->"7973d6c5-dd25-4b0d-8242-\
e3423b56cdb1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"\"\<AdvancedMapping`\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Extra\>\"", ",", 
       "\"\<AdvancedMapping.wl\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", 
    RowBox[{"\"\<EconomicComputations`\>\"", ",", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<EconomicComputations.wl\>\""}], "}"}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Opciones", " ", "de", " ", "estilo"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smallFontSize", " ", "=", " ", "13"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bigFontSize", " ", "=", " ", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotSize", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
      "\"\<IndianRed\>\"", "]"}], ",", "Black", ",", "Blue", ",", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", "\"\<Olive\>\"",
       "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.725813801477882*^9, 3.725813842354185*^9}, 
   3.7258145952114487`*^9, {3.725815029462809*^9, 3.725815050374353*^9}, {
   3.725822160813527*^9, 3.725822210293992*^9}, {3.725823753066257*^9, 
   3.725823758353553*^9}, {3.7258238497826433`*^9, 3.7258238546235313`*^9}, {
   3.725826159542289*^9, 3.725826159775069*^9}, {3.725886137582262*^9, 
   3.725886137825506*^9}, {3.7258912353102493`*^9, 3.725891240101152*^9}, {
   3.725908856840219*^9, 3.725908857152266*^9}, {3.7259089115580063`*^9, 
   3.725908972319603*^9}, {3.7259090027497673`*^9, 3.725909005775334*^9}, {
   3.725909180222677*^9, 3.7259091821578503`*^9}, {3.725909857689686*^9, 
   3.7259098579284143`*^9}, {3.725911306756922*^9, 3.725911361342228*^9}, {
   3.725912152652165*^9, 3.725912229638928*^9}, {3.726161944526227*^9, 
   3.726161945773011*^9}, {3.726162117625463*^9, 3.726162117919694*^9}, {
   3.7261623472179117`*^9, 3.726162354684567*^9}, {3.726240902388068*^9, 
   3.726240902728302*^9}, {3.7262409758805933`*^9, 3.7262410033188047`*^9}, {
   3.726241262768165*^9, 3.726241304212583*^9}, {3.726241408073407*^9, 
   3.7262414175265408`*^9}, 3.726323552579049*^9, {3.7263273579102097`*^9, 
   3.726327359364676*^9}, {3.726327490478724*^9, 3.726327492005521*^9}, {
   3.726328254122326*^9, 3.726328257125023*^9}, {3.726328292868544*^9, 
   3.726328302032453*^9}, {3.7263291584760113`*^9, 3.726329172180461*^9}, {
   3.726329598747867*^9, 3.7263296020649557`*^9}, {3.7263307200371113`*^9, 
   3.726330776967119*^9}, {3.726331621514995*^9, 3.726331622870336*^9}, {
   3.726347600616104*^9, 3.726347608614952*^9}, {3.7263521315766897`*^9, 
   3.726352137598084*^9}, {3.726410318377204*^9, 3.726410319653459*^9}, 
   3.7264104024623423`*^9, {3.738611169349203*^9, 3.7386111782316427`*^9}, {
   3.738611222933153*^9, 3.738611250476118*^9}, {3.7566544178947763`*^9, 
   3.75665441991775*^9}, {3.756654453745466*^9, 3.756654487319433*^9}, 
   3.7566547895902443`*^9, {3.75665485095689*^9, 3.7566548610389843`*^9}, {
   3.761332937165599*^9, 3.761332962440831*^9}, {3.761332995433766*^9, 
   3.7613330062208347`*^9}, 3.77547795015276*^9, {3.777400243950224*^9, 
   3.7774002501351957`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"c91df5a4-1630-4ed6-957c-35f9f98e65fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cargar base de datos", "Chapter",
 CellChangeTimes->{{3.777400301087185*^9, 
  3.777400304329691*^9}},ExpressionUUID->"1e6d69f0-f274-44a3-a2e7-\
526c074dcf4c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<DJI_DAX_MXX_NIKKEI_dataset.mx\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"database", " ", "=", " ", 
   RowBox[{"Import", "[", "path", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"database", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<Name\>\""}], "]"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<DJIA\>\"", ",", "\"\<DAX\>\"", ",", "\"\<IPC\>\"", ",", 
     "\"\<Nikkei 225\>\""}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.725908928874539*^9, {3.7386112566008368`*^9, 3.7386112689098263`*^9}, {
   3.7564739455548563`*^9, 3.756473966482794*^9}, {3.756477138657824*^9, 
   3.7564771389575453`*^9}, {3.76133308942835*^9, 3.761333091876583*^9}, {
   3.771960534143981*^9, 3.771960545447304*^9}, {3.772036063276965*^9, 
   3.7720360665464077`*^9}, {3.772036241194306*^9, 3.77203625287162*^9}, {
   3.775477961165186*^9, 3.775477969288271*^9}, 3.7754780131425*^9, {
   3.777400341397171*^9, 3.777400351848933*^9}, {3.777400447901471*^9, 
   3.777400460342659*^9}, {3.777400507434965*^9, 3.777400507705071*^9}, {
   3.777400572427231*^9, 3.7774005725833693`*^9}, {3.777400609877466*^9, 
   3.777400611273203*^9}, {3.777745852325385*^9, 3.77774585359934*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"6adda3a4-1a12-472e-9066-7e404ae19ed0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fechas percentuales", "Chapter",
 CellChangeTimes->{{3.789443200667163*^9, 
  3.789443210655684*^9}},ExpressionUUID->"a89a7047-ce56-4831-a258-\
ab41f4cd8078"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DaysInYear", "[", "year_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"DateDifference", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"year", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"year", ",", " ", "12", ",", " ", "31"}], "}"}]}], "]"}], 
      "]"}], " ", "+", " ", "1"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"YearPercentual", "[", "date_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"QuantityMagnitude", "[", 
        RowBox[{"DateDifference", "[", 
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"date", "[", "\"\<Year\>\"", "]"}], ",", " ", "1", ",", 
             " ", "1"}], "}"}], "]"}], ",", " ", "date"}], "]"}], "]"}], " ", 
       "/", " ", 
       RowBox[{"DaysInYear", "[", 
        RowBox[{"date", "[", "\"\<Year\>\"", "]"}], "]"}]}], "]"}], " ", "+", 
     " ", 
     RowBox[{"date", "[", "\"\<Year\>\"", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DateFromYearPercentual", "[", "yearPercentual_", "]"}], " ", ":=",
    " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"year", ",", " ", "daysEllapsed", ",", " ", "date"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"year", " ", "=", " ", 
       RowBox[{"IntegerPart", "[", "yearPercentual", "]"}]}], ";", "\n", "\t", 
      RowBox[{"daysEllapsed", " ", "=", " ", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yearPercentual", " ", "-", " ", "year"}], ")"}], " ", "*", 
         " ", 
         RowBox[{"DaysInYear", "[", "year", "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"date", " ", "=", " ", 
       RowBox[{"DatePlus", "[", 
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"year", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}], ",", 
         " ", "daysEllapsed"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "date", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[189]:=",ExpressionUUID->"d7d4d34c-16d6-412b-9eef-7a563315d1af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ventana", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{"YearPercentual", ",", " ", 
       RowBox[{
        RowBox[{"database", "[", 
         RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"All", ",", "1"}], "}"}]}], "]"}], ",", "dias"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7892815868996296`*^9, 3.789281689411106*^9}, {
  3.7892818855588083`*^9, 3.78928190614105*^9}, {3.789282173712747*^9, 
  3.789282201740155*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"59a87de1-1006-4e22-a1b2-023b23ad10bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Volver las fechas percentuales a fechas normales", "Chapter",
 CellChangeTimes->{{3.883034826708522*^9, 
  3.8830348358123474`*^9}},ExpressionUUID->"610c0db5-b484-433d-b566-\
656fb6a8ed02"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FechasNormales", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "Ventana", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ventana", "=", 
       RowBox[{"MovingAverage", "[", 
        RowBox[{
         RowBox[{"MapAt", "[", 
          RowBox[{"YearPercentual", ",", " ", 
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", 
            "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", "1"}], "}"}]}], "]"}], ",", "dias"}], "]"}]}],
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7892846639915257`*^9, 3.789284668060342*^9}, {
   3.789284699844201*^9, 3.7892847018616123`*^9}, 3.7892847394020977`*^9, 
   3.789285017779029*^9, 3.7892850903547697`*^9, {3.789285134413516*^9, 
   3.789285136768691*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"6bac6e49-7dd0-4180-8c3b-9c7dc5bdc71d"],

Cell[CellGroupData[{

Cell["\<\
C\[OAcute]digo para tener MAV que automatice el proceso \
de\[LineSeparator]fechas percentuales y precios de cualquier mercado\
\>", "Section",
 CellChangeTimes->{{3.7894433997143126`*^9, 3.7894434556908503`*^9}, {
  3.789443493588357*^9, 
  3.789443498962065*^9}},ExpressionUUID->"83aad832-3c2a-4c70-8a68-\
fddc523d1d5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ventana", ",", "MAVDates", ",", "MAVPrices"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ventana", " ", "=", " ", 
       RowBox[{"MovingAverage", "[", 
        RowBox[{
         RowBox[{"MapAt", "[", 
          RowBox[{"YearPercentual", ",", " ", 
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", 
            "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", "1"}], "}"}]}], "]"}], ",", "dias"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MAVDates", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DateFromYearPercentual", "[", "#", "]"}], "&"}], ",", 
         RowBox[{"ventana", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MAVPrices", " ", "=", " ", 
       RowBox[{"ventana", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"MAVDates", ",", "MAVPrices"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.789418149395589*^9, 3.789418352517385*^9}, {
   3.78941839531767*^9, 3.789418430880646*^9}, {3.789418470937445*^9, 
   3.7894185937339287`*^9}, 3.789418633946477*^9, 3.78941869168484*^9, {
   3.789429422825156*^9, 3.7894294429524975`*^9}, {3.7894295213793187`*^9, 
   3.789429533006941*^9}, {3.789429921188178*^9, 3.7894299241171255`*^9}, {
   3.7894299915061903`*^9, 3.789429993760111*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"54d1f456-6a35-427e-8613-d04d5f975422"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Retornos de los precios a partir de cualquier MAV sobre cualquier mercado\
\>", "Section",
 CellChangeTimes->{{3.789443516999552*^9, 
  3.78944353717072*^9}},ExpressionUUID->"1d2094a7-668d-4e0b-844f-\
436eaf51c1bc"],

Cell["\<\
En la siguiente ventana de inicializaci\[OAcute]n se tiene que se pueden \
calcular los retornos de los precios para los MAV de cualquier mercado y en \
cualquier ventana de tiempo \
\>", "Text",
 CellChangeTimes->{{3.789430092342678*^9, 
  3.789430124072943*^9}},ExpressionUUID->"2e5c4d4a-cba7-427f-993d-\
d3c759396a8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MAVReturns", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ventana", ",", "MAVDates", ",", "MAVPrices", ",", "MAVDatePrice", ",", 
       "ReturnLogs", ",", "DatesLogReturn"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ventana", " ", "=", " ", 
       RowBox[{"MovingAverage", "[", 
        RowBox[{
         RowBox[{"MapAt", "[", 
          RowBox[{"YearPercentual", ",", " ", 
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", 
            "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", "1"}], "}"}]}], "]"}], ",", "dias"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MAVDates", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DateFromYearPercentual", "[", "#", "]"}], "&"}], ",", 
         RowBox[{"ventana", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MAVPrices", " ", "=", " ", 
       RowBox[{"ventana", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MAVDatePrice", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"MAVDates", ",", "MAVPrices"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ReturnLogs", " ", "=", " ", 
       RowBox[{
        RowBox[{"MAVDatePrice", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Returns"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"DatesLogReturn", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"MAVDatePrice", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"DatesLogReturn", ",", "ReturnLogs"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.789428966782215*^9, 3.7894291867089014`*^9}, {
   3.789429219891918*^9, 3.789429311925146*^9}, {3.7894296342986255`*^9, 
   3.7894296605928836`*^9}, {3.7894297083692527`*^9, 3.78942974428507*^9}, {
   3.789429775273594*^9, 3.789429790550208*^9}, 3.7894298820078135`*^9},
 CellLabel->
  "In[195]:=",ExpressionUUID->"9db116f2-956d-48ef-a629-bb0266b3195f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Valores estandarizados y discretizados para calcular la entrop\[IAcute]a\
\>", "Section",
 CellChangeTimes->{{3.7894303972349925`*^9, 3.7894304264393272`*^9}, {
  3.7894435561725707`*^9, 
  3.789443558837902*^9}},ExpressionUUID->"8b90e369-4428-4247-8ac0-\
84c08c9dc687"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DiscretizeByQuartiles", "[", "returns_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cuartailsStandardize", ",", "intervStandardize", ",", 
       "discreStatesStandarizados", ",", "rulesStandarized"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cuartailsStandardize", " ", "=", " ", 
       RowBox[{"Quantile", "[", 
        RowBox[{
         RowBox[{"Standardize", "[", "returns", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"3", "/", "4"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intervStandardize", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "\[Infinity]"}], "}"}], ",", "cuartailsStandardize", 
           ",", 
           RowBox[{"{", "\[Infinity]", "}"}]}], "]"}], ",", "2", ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"discreStatesStandarizados", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "intervStandardize", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rulesStandarized", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x_", "/;", 
            RowBox[{"IntervalMemberQ", "[", 
             RowBox[{
              RowBox[{"Interval", "[", "#1", "]"}], ",", "x"}], "]"}]}], 
           "\[Rule]", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"intervStandardize", ",", "discreStatesStandarizados"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Standardize", "[", "returns", "]"}], "/.", " ", 
       "rulesStandarized"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7785148467820044`*^9, 3.7785149287159452`*^9}, 
   3.778514999357168*^9, {3.778959672395166*^9, 3.7789596840238314`*^9}, {
   3.7789597305964947`*^9, 3.7789597359248*^9}, {3.779494898948044*^9, 
   3.7794949823778152`*^9}, {3.779495019850959*^9, 3.7794950269133625`*^9}, {
   3.779495310759598*^9, 3.779495407319121*^9}, {3.7794954485474787`*^9, 
   3.7794954575139914`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"b660d0da-cb09-4a04-8f18-515f95459ca6"],

Cell[BoxData[
 RowBox[{"DiscretizeByQuartiles", "["}]], "Input",
 CellChangeTimes->{{3.883035452154052*^9, 3.883035467504026*^9}, {
  3.8830355017403784`*^9, 3.883035503375518*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[197]:=",ExpressionUUID->"0080865a-de98-48b8-8ec1-17355de5f154"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ahora calcularemos la entrop\[IAcute]a de los mercados a partir de un MAV \
dada una ventana temporal \
\>", "Section",
 CellChangeTimes->{{3.7894306403765306`*^9, 3.7894306621985316`*^9}, {
   3.78943886999662*^9, 3.789438901572476*^9}, 
   3.7917450344847207`*^9},ExpressionUUID->"6ebdd0c2-c2e8-44d8-bcec-\
9575209e51de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MarketEntropyMAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ventana", ",", "MAVDates", ",", "MAVPrices", ",", "DatesLogReturn", 
       ",", "MAVDatePrice", ",", "discretoConFechas", ",", "parts", ",", 
       "resultado"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ventana", " ", "=", " ", 
       RowBox[{"MovingAverage", "[", 
        RowBox[{
         RowBox[{"MapAt", "[", 
          RowBox[{"YearPercentual", ",", " ", 
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", 
            "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", "1"}], "}"}]}], "]"}], ",", "dias"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MAVDates", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DateFromYearPercentual", "[", "#", "]"}], "&"}], ",", 
         RowBox[{"ventana", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MAVPrices", " ", "=", " ", 
       RowBox[{"ventana", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MAVDatePrice", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"MAVDates", ",", "MAVPrices"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"DatesLogReturn", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"MAVDatePrice", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"discretoConFechas", " ", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"DatesLogReturn", ",", 
          RowBox[{"DiscretizeByQuartiles", "[", 
           RowBox[{
            RowBox[{"MAVReturns", "[", 
             RowBox[{"market", ",", "dias"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"parts", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{"discretoConFechas", ",", "dias", ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"resultado", "  ", "=", " ", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"N", "[", 
             RowBox[{"Entropy", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "&"}], ",", "\[IndentingNewLine]", 
         "parts"}], "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotMarketEntropyMAV", "[", 
   RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"MarketEntropyMAV", "[", 
     RowBox[{"market", ",", "dias"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{
      RowBox[{"database", "[", 
       RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}]}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.778960303026236*^9, 3.7789603251695023`*^9}, {
   3.7789603697930546`*^9, 3.7789604635854197`*^9}, {3.7789605336604276`*^9, 
   3.778960543303979*^9}, {3.7794970078266644`*^9, 3.779497009896783*^9}, {
   3.7894306862744102`*^9, 3.7894307029083233`*^9}, {3.7894310161962204`*^9, 
   3.7894310415655584`*^9}, {3.7894310857165785`*^9, 3.789431086058909*^9}, {
   3.789431131237912*^9, 3.7894311388970437`*^9}, {3.789431211333993*^9, 
   3.789431213722985*^9}, {3.789431278380558*^9, 3.789431302201591*^9}, {
   3.7894313566212063`*^9, 3.7894313572304463`*^9}, {3.7894313921510205`*^9, 
   3.7894314100197706`*^9}, {3.7894348133564076`*^9, 
   3.7894348376993556`*^9}, {3.789434980722664*^9, 3.7894351704342585`*^9}, {
   3.7894352041731153`*^9, 3.7894352061948633`*^9}, 3.789436050233781*^9, {
   3.7894361780329437`*^9, 3.789436181973237*^9}, {3.7894362256431923`*^9, 
   3.7894362274422927`*^9}, {3.7894362582863703`*^9, 3.78943633575001*^9}, 
   3.7894363671319404`*^9, {3.789437171390175*^9, 3.789437178109167*^9}, {
   3.7894372532002373`*^9, 3.7894372600851593`*^9}, {3.7894374353464975`*^9, 
   3.789437435832698*^9}, {3.789437541024515*^9, 3.789437543109093*^9}, {
   3.789437965275388*^9, 3.7894380008837833`*^9}, {3.7894380389572344`*^9, 
   3.7894380541962776`*^9}, {3.7917447414083853`*^9, 
   3.7917447616182456`*^9}, {3.7954738584303827`*^9, 3.795473893896775*^9}, 
   3.7954740684485717`*^9},
 CellLabel->
  "In[197]:=",ExpressionUUID->"f9a50034-3ccd-4f2a-b580-b0c5c782d9da"],

Cell["\<\
Cabe desatacar que las graficas para 50 \[PlusMinus]10 d\[IAcute]as de todos \
los mercados est\[AAcute] en MXX_MAV.nb \
\>", "Text",
 CellChangeTimes->{{3.7951185617574167`*^9, 3.7951185751761985`*^9}, {
  3.7951188116426015`*^9, 
  3.795118839080789*^9}},ExpressionUUID->"7105d391-4569-4c1b-be2d-\
05ef6bc997e2"],

Cell[TextData[{
 StyleBox["Comparaci\[OAcute]n con caminante aleatorio", "Title"],
 "\nSe procede a comparar el resultado de la entrop\[IAcute]a con el \
resultado de una distribuci\[OAcute]n gaussiana."
}], "Text",
 CellChangeTimes->{{3.7792041119319754`*^9, 3.7792041343522577`*^9}, {
  3.779204165035013*^9, 3.779204180388891*^9}, {3.779499313105469*^9, 
  3.779499315320673*^9}},ExpressionUUID->"29ea92cd-76f5-4cb2-be3f-\
f518ea710052"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Ahora se procede a comparar la \
ENTROP\[CapitalIAcute]A de los \[LineSeparator]mercados (todos) con el \
\"ruido\" del mercado \[LineSeparator]eficiente y su histograma respectivo",
 FontColor->RGBColor[1, 0, 0]]], "Subtitle",
 CellChangeTimes->{{3.779204185908207*^9, 3.7792044608679333`*^9}, {
   3.7794894928904486`*^9, 3.7794895078352747`*^9}, {3.779494468152404*^9, 
   3.7794944977410955`*^9}, 3.779494748473437*^9, {3.779496201987573*^9, 
   3.7794962271750135`*^9}, {3.77949629756604*^9, 3.7794963272107353`*^9}, {
   3.7794964201880536`*^9, 3.779496424027273*^9}, {3.7795027470981565`*^9, 
   3.7795028012458506`*^9}, {3.779503217080176*^9, 3.779503217360976*^9}, {
   3.77950368766881*^9, 3.779503707371644*^9}, {3.779503914337205*^9, 
   3.7795039883113356`*^9}, {3.7795048864765015`*^9, 
   3.7795050005127006`*^9}, {3.779505667398263*^9, 3.779505668287465*^9}, {
   3.7795058136797185`*^9, 3.77950589501826*^9}, {3.7795059302587214`*^9, 
   3.7795059628315783`*^9}, {3.779506017353674*^9, 3.779506091438203*^9}, {
   3.779506167457135*^9, 3.7795061677847357`*^9}, {3.7795063190737996`*^9, 
   3.7795064254191847`*^9}, {3.779507070090309*^9, 3.7795070707923107`*^9}, {
   3.7795282386422577`*^9, 3.779528301837968*^9}, {3.7795283410096364`*^9, 
   3.7795284941395035`*^9}, {3.779529507706471*^9, 3.779529509547274*^9}, {
   3.7795301457374725`*^9, 3.779530173879922*^9}, {3.7795355498016953`*^9, 
   3.7795355664625244`*^9}, {3.77954869042426*^9, 3.779548691347313*^9}, {
   3.7855484826184263`*^9, 3.7855485008542633`*^9}, 3.785548592328965*^9, 
   3.78554880244057*^9, 3.7855489137112827`*^9, 3.785548981512101*^9, 
   3.785549015183543*^9, 3.7855494388847384`*^9, 3.785549570509647*^9, {
   3.785549842194289*^9, 3.7855498503300486`*^9}, {3.7855499260560627`*^9, 
   3.785549930483451*^9}, {3.7855501192855673`*^9, 3.785550191033288*^9}, {
   3.785550337761964*^9, 3.7855503394627304`*^9}, {3.791040441126084*^9, 
   3.7910404450943837`*^9}},ExpressionUUID->"a7227bb1-f59c-4399-a59b-\
ea98a0d51251"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MarketCompareEntropyMAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimuladoMAV", ",", "MercadoEficienteConFechasMAV", ",", 
       "MercadoPreciosSimulados", ",", "MercadoConPrecioSimuladoYFechas", ",",
        "MercadoPorcentuales", ",", "MercadoConFechasYPreciosMAV", ",", 
       "Particion", ",", "SimulatedEntropy", ",", "EntropiaEficienteYReal", 
       ",", "Histograma"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimuladoMAV", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechasMAV", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoSimuladoMAV"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoPreciosSimulados", " ", "=", " ", 
       RowBox[{
        RowBox[{"Accumulate", "[", 
         RowBox[{"MercadoEficienteConFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"Min", "[", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"MercadoEficienteConFechasMAV", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoConPrecioSimuladoYFechas", " ", "=", "  ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoPreciosSimulados"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoPorcentuales", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", "MercadoConPrecioSimuladoYFechas", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoConFechasYPreciosMAV", "=", 
       RowBox[{"MapAt", "[", 
        RowBox[{"DateFromYearPercentual", ",", 
         RowBox[{"MovingAverage", "[", 
          RowBox[{"MercadoPorcentuales", ",", "dias"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Particion", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MercadoConFechasYPreciosMAV", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"DiscretizeByQuartiles", "[", 
             RowBox[{"MercadoConFechasYPreciosMAV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
          ",", "dias", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SimulatedEntropy", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"Entropy", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
           "}"}], "&"}], ",", "Particion"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"EntropiaEficienteYReal", "=", 
       RowBox[{"DateListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SimulatedEntropy", ",", 
           RowBox[{"MarketEntropyMAV", "[", 
            RowBox[{"market", ",", "dias"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
           RowBox[{"database", "[", 
            RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}]}],
          ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Mercado eficiente\>\"", " ", ",", "\"\<Datos reales\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.5"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Histograma", " ", "=", " ", 
       RowBox[{"Histogram", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"Entropy", ",", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"DiscretizeByQuartiles", "[", 
                RowBox[{
                 RowBox[{"MercadoConFechasYPreciosMAV", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Returns"}],
                 "]"}], ",", "dias", ",", "1"}], "]"}]}], "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"Entropy", ",", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"DiscretizeByQuartiles", "[", 
                RowBox[{
                 RowBox[{"MAVReturns", "[", 
                  RowBox[{"market", ",", "dias"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", "dias",
                ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}], 
           "\"\<Entrop\[IAcute]as\>\""}]}], " ", ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"FontSize", "\[Rule]", "16"}]}], ",", 
         RowBox[{"ChartStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"ChartLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Mercado eficiente\>\"", ",", "\"\<Datos reales\>\""}],
            "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"EntropiaEficienteYReal", " ", "Histograma"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Este", " ", "es", " ", "el", " ", "bueno", " ", "y", " ", "arroja", " ", 
    "la", " ", "grafica", " ", "y", " ", "el", " ", "histograma"}], 
   "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7904513747402344`*^9, 3.790451507136115*^9}, {
   3.790451544582879*^9, 3.790451579571065*^9}, {3.7904516192790356`*^9, 
   3.7904516194720283`*^9}, {3.7904516532484818`*^9, 3.79045174713853*^9}, {
   3.7904517950272164`*^9, 3.790451937175264*^9}, {3.7904520187400656`*^9, 
   3.790452035663289*^9}, {3.790452074638708*^9, 3.7904522329868383`*^9}, {
   3.790452263327956*^9, 3.7904522890957594`*^9}, 3.7904523224609118`*^9, {
   3.7904523611441402`*^9, 3.790452417732205*^9}, {3.7904527177623577`*^9, 
   3.790452725337929*^9}, {3.7904527734870157`*^9, 3.790452933808673*^9}, {
   3.7904532135728645`*^9, 3.7904532328324456`*^9}, {3.7904532994377995`*^9, 
   3.790453494317563*^9}, {3.790453567037198*^9, 3.790453567278327*^9}, {
   3.790453685434414*^9, 3.790453686246975*^9}, {3.7904537659818974`*^9, 
   3.7904537749069777`*^9}, {3.790963647072892*^9, 3.7909636543893723`*^9}, {
   3.7909637440201464`*^9, 3.7909637500243473`*^9}, {3.790967401649288*^9, 
   3.790967409732024*^9}, 3.7909676441194873`*^9, {3.7909676899037724`*^9, 
   3.7909677605558615`*^9}, {3.790967796629022*^9, 3.790967835193326*^9}, {
   3.790967882098257*^9, 3.7909678825247884`*^9}, 3.7909681840880938`*^9, {
   3.7910280995557995`*^9, 3.791028110135516*^9}, {3.7910282148638654`*^9, 
   3.791028225790062*^9}, {3.791028276392214*^9, 3.7910283356553817`*^9}, {
   3.791028468798399*^9, 3.7910284782570176`*^9}, {3.7910285826544466`*^9, 
   3.791028598465564*^9}, {3.7910287359813423`*^9, 3.7910287429767165`*^9}, {
   3.791028777432098*^9, 3.791028778381979*^9}, {3.7910288177339*^9, 
   3.791028829791155*^9}, {3.791028897760151*^9, 3.791028908875638*^9}, 
   3.7910289527459793`*^9, {3.7910290389686546`*^9, 3.7910290486034317`*^9}, {
   3.791029159740633*^9, 3.791029168130887*^9}, {3.79103161814156*^9, 
   3.791031622568623*^9}, {3.7910324954637136`*^9, 3.7910325128772955`*^9}, {
   3.7910327067492557`*^9, 3.791032710187331*^9}, {3.7910328597472363`*^9, 
   3.7910328655194836`*^9}, {3.791033277137991*^9, 3.7910332929612813`*^9}, {
   3.791745082887376*^9, 3.791745090329276*^9}, 3.7917451717377367`*^9, {
   3.7917453229704156`*^9, 3.791745348226368*^9}, 3.791745803239777*^9, {
   3.7917809632931786`*^9, 3.7917809797411385`*^9}, {3.7930738499362726`*^9, 
   3.7930738557887917`*^9}, {3.7930741712803407`*^9, 3.793074175974185*^9}, {
   3.7954739130665884`*^9, 3.795473923320506*^9}, {3.7954764565730357`*^9, 
   3.795476476971652*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"ff64b9bc-8d20-47ec-b28a-29e1a05dad47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", "]"}], ",", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"MAVReturns", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.883045473680251*^9, {3.8830455764013057`*^9, 3.883045579988695*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"85a6856f-9063-4842-a7ac-698c4e49f218"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.30933926879898554`"}], ",", "0.4192194292498268`", 
           ",", "0.8951317335611215`", ",", "1.1743250028227663`", ",", 
           "0.18897428477894113`", ",", 
           RowBox[{"-", "0.14917954505622455`"}], ",", "0.8984017005889612`", 
           ",", 
           RowBox[{"-", "0.1597946944370516`"}], ",", 
           TemplateBox[{"6450"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"-", "0.7922274003415175`"}], ",", 
           RowBox[{"-", "0.5872172766934631`"}], ",", 
           RowBox[{"-", "0.3822543137606576`"}], ",", 
           RowBox[{"-", "0.536505494327767`"}], ",", 
           RowBox[{"-", "0.45747102846894183`"}], ",", "0.7862293769229324`", 
           ",", 
           RowBox[{"-", "0.916423489007162`"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{70., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{84., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 200, 29423228699515003360, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{69., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 200, 29423228699515003360, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{132., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 200, 29423228699515003360, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{112., {20., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29423228699515003360 === $SessionID, 
   Out[200], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8830455859925165`*^9, 3.883047391841853*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"2bc02f85-0163-43c0-9772-8fda00303cd9"]
}, Open  ]],

Cell["\<\
Y si se quiere que sean sin los histogramas, entonces se tiene la siguiente \
celda de inicializaci\[OAcute]n\[LineSeparator]que describe lo mismo pero sin \
historamas.\
\>", "Text",
 CellChangeTimes->{{3.791699263483778*^9, 
  3.791699302846043*^9}},ExpressionUUID->"6e76cc18-9cd5-47a4-908d-\
83af16dab245"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MarketCompareEntropyNoHistMAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimuladoMAV", ",", "MercadoEficienteConFechasMAV", ",", 
       "MercadoPreciosSimulados", ",", "MercadoConPrecioSimuladoYFechas", ",",
        "MercadoPorcentuales", ",", "MercadoConFechasYPreciosMAV", ",", 
       "Particion", ",", "SimulatedEntropy", ",", "EntropiaEficienteYReal", 
       ",", "Histograma"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimuladoMAV", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechasMAV", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoSimuladoMAV"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoPreciosSimulados", " ", "=", " ", 
       RowBox[{
        RowBox[{"Accumulate", "[", 
         RowBox[{"MercadoEficienteConFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"Min", "[", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"MercadoEficienteConFechasMAV", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoConPrecioSimuladoYFechas", " ", "=", "  ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoPreciosSimulados"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoPorcentuales", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", "MercadoConPrecioSimuladoYFechas", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoConFechasYPreciosMAV", "=", 
       RowBox[{"MapAt", "[", 
        RowBox[{"DateFromYearPercentual", ",", 
         RowBox[{"MovingAverage", "[", 
          RowBox[{"MercadoPorcentuales", ",", "dias"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Particion", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MercadoConFechasYPreciosMAV", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"DiscretizeByQuartiles", "[", 
             RowBox[{"MercadoConFechasYPreciosMAV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
          ",", "dias", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SimulatedEntropy", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"Entropy", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
           "}"}], "&"}], ",", "Particion"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"EntropiaEficienteYReal", "=", 
       RowBox[{"DateListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SimulatedEntropy", ",", 
           RowBox[{"MarketEntropyMAV", "[", 
            RowBox[{"market", ",", "dias"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
           RowBox[{"database", "[", 
            RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}]}],
          ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Mercado eficiente\>\"", " ", ",", "\"\<Datos reales\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.5"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "EntropiaEficienteYReal"}]}], " ", "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Este", " ", "no", " ", "arroja", " ", "el", " ", "histograma", " ", 
    "cosa", " ", "que", " ", "s\[IAcute]", " ", "hace", " ", "el", " ", 
    "EntropyMarket", " ", "ordinario"}], "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7904513747402344`*^9, 3.790451507136115*^9}, {
   3.790451544582879*^9, 3.790451579571065*^9}, {3.7904516192790356`*^9, 
   3.7904516194720283`*^9}, {3.7904516532484818`*^9, 3.79045174713853*^9}, {
   3.7904517950272164`*^9, 3.790451937175264*^9}, {3.7904520187400656`*^9, 
   3.790452035663289*^9}, {3.790452074638708*^9, 3.7904522329868383`*^9}, {
   3.790452263327956*^9, 3.7904522890957594`*^9}, 3.7904523224609118`*^9, {
   3.7904523611441402`*^9, 3.790452417732205*^9}, {3.7904527177623577`*^9, 
   3.790452725337929*^9}, {3.7904527734870157`*^9, 3.790452933808673*^9}, {
   3.7904532135728645`*^9, 3.7904532328324456`*^9}, {3.7904532994377995`*^9, 
   3.790453494317563*^9}, {3.790453567037198*^9, 3.790453567278327*^9}, {
   3.790453685434414*^9, 3.790453686246975*^9}, {3.7904537659818974`*^9, 
   3.7904537749069777`*^9}, {3.790963647072892*^9, 3.7909636543893723`*^9}, {
   3.7909637440201464`*^9, 3.7909637500243473`*^9}, {3.790967401649288*^9, 
   3.790967409732024*^9}, 3.7909676441194873`*^9, {3.7909676899037724`*^9, 
   3.7909677605558615`*^9}, {3.790967796629022*^9, 3.790967835193326*^9}, {
   3.790967882098257*^9, 3.7909678825247884`*^9}, 3.7909681840880938`*^9, {
   3.7910280995557995`*^9, 3.791028110135516*^9}, {3.7910282148638654`*^9, 
   3.791028225790062*^9}, {3.791028276392214*^9, 3.7910283356553817`*^9}, {
   3.791028468798399*^9, 3.7910284782570176`*^9}, {3.7910285826544466`*^9, 
   3.791028598465564*^9}, {3.7910287359813423`*^9, 3.7910287429767165`*^9}, {
   3.791028777432098*^9, 3.791028778381979*^9}, {3.7910288177339*^9, 
   3.791028829791155*^9}, {3.791028897760151*^9, 3.791028908875638*^9}, 
   3.7910289527459793`*^9, {3.7910290389686546`*^9, 3.7910290486034317`*^9}, {
   3.791029159740633*^9, 3.791029168130887*^9}, {3.79103161814156*^9, 
   3.791031622568623*^9}, {3.7910324954637136`*^9, 3.7910325128772955`*^9}, {
   3.7910327067492557`*^9, 3.791032710187331*^9}, {3.7910328597472363`*^9, 
   3.7910328655194836`*^9}, {3.791033277137991*^9, 3.7910332929612813`*^9}, {
   3.7916993382338505`*^9, 3.7916994024692783`*^9}, {3.791699591167761*^9, 
   3.7916995919581547`*^9}, {3.791781490001608*^9, 3.791781493057846*^9}, {
   3.7928993806952944`*^9, 3.7928993810879774`*^9}, {3.795473930717348*^9, 
   3.795473932554467*^9}, {3.7954768700900326`*^9, 3.7954769083148727`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"9c9658e0-530f-4371-82eb-f18014fc6525"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Minimizar la entrop\[IAcute]a", "Title",
 CellChangeTimes->{
  3.785569554343855*^9, {3.7855955160336027`*^9, 3.785595544979012*^9}, {
   3.7894871766468782`*^9, 
   3.7894871855589743`*^9}},ExpressionUUID->"fc8293b6-52c2-4bd5-9fa6-\
23154e29ac5c"],

Cell["\<\
Se tienen dos criterios:
1. A partir de thresholds de la entropia sin MAV\[LineSeparator]2. Selecci\
\[OAcute]n de todos los puntos en que la entrop\[IAcute]a simulada y la real \
de los \[LineSeparator]mercados tras ser filtrados por un MAV.\
\>", "Subsection",
 CellChangeTimes->{{3.7917438654857454`*^9, 
  3.7917440057492313`*^9}},ExpressionUUID->"f41a721c-68e8-4bac-95d5-\
887fdb0dc804"],

Cell[CellGroupData[{

Cell["1. A partir de thresholds de la entrop\[IAcute]a sin MAV", "Section",
 CellChangeTimes->{
  3.785569553021499*^9, {3.7855955473773093`*^9, 3.785595652530161*^9}, {
   3.785595700949978*^9, 3.785595724989862*^9}, 3.78561042034904*^9, {
   3.791744018400591*^9, 3.7917440238214607`*^9}, {3.7919032279453373`*^9, 
   3.791903232940433*^9}},ExpressionUUID->"fde31feb-1cd2-46bc-9ae0-\
e937defee260"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MarketEntropy", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"discretoConFechas", ",", "parts", ",", "resultado"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"discretoConFechas", " ", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"database", "[", 
              RowBox[{"[", "market", "]"}], "]"}], "[", 
             RowBox[{"[", "\"\<Dates\>\"", "]"}], "]"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", 
          RowBox[{"DiscretizeByQuartiles", "[", 
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Returns\>\"", 
            "]"}], "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"parts", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{"discretoConFechas", ",", "dias", ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"resultado", "  ", "=", " ", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"N", "[", 
             RowBox[{"Entropy", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "&"}], ",", "\[IndentingNewLine]", 
         "parts"}], "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotMarketEntropy", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"MarketEntropy", "[", 
      RowBox[{"market", ",", "dias"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.5"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"database", "[", 
        RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7917994358841867`*^9, 3.791799498199812*^9}, {
   3.791799556192205*^9, 3.7917995575530977`*^9}, {3.7917997581831713`*^9, 
   3.7917997865718164`*^9}, {3.791799834864733*^9, 3.791799848499454*^9}, {
   3.7917998793726215`*^9, 3.791799930951241*^9}, 3.7917999683857293`*^9, {
   3.7918001151671576`*^9, 3.791800115902175*^9}, 3.7918001826550817`*^9, {
   3.791800278869448*^9, 3.7918002804707212`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"4ca392ef-fa29-4d5c-8e39-6297e4d05241"],

Cell["\<\
Ahora si vamos a obtener los puntos de minima entropia  a partir de del \
criterio 1.\
\>", "Text",
 CellChangeTimes->{{3.7918965490844417`*^9, 
  3.791896582596258*^9}},ExpressionUUID->"08e5381b-7430-49d4-834e-\
977c4ccb4ef7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinEntropyMarket", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimulado", ",", "MercadoEficienteConFechas", ",", "Particion", 
       ",", "SimulatedEntropy", ",", "Techo", ",", "MercadoNoGaussiano", ",", 
       "BuscarPrecio", ",", "Rastreador"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimulado", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MarketEntropy", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechas", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "MercadoSimulado"}],
          "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Particion", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MercadoEficienteConFechas", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"DiscretizeByQuartiles", "[", 
             RowBox[{"MercadoEficienteConFechas", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
          ",", "dias", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SimulatedEntropy", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"Entropy", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
           "}"}], "&"}], ",", "Particion"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Techo", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"Quantile", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Entropy", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "&"}],
             ",", "Particion"}], "]"}], ",", "0.05"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoNoGaussiano", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"MarketEntropy", "[", 
          RowBox[{"market", ",", "dias"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], " ", "<", " ", "Techo"}], " ", 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BuscarPrecio", "[", 
        RowBox[{"datedPrices_", ",", "date_"}], "]"}], ":=", 
       RowBox[{"FirstCase", "[", 
        RowBox[{"datedPrices", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"date", ",", "p_"}], "}"}], "\[RuleDelayed]", "p"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "La", " ", "siguiente", " ", "linea", " ", "de", " ", "codigo", " ", 
        "nos", " ", "da", " ", "todas", " ", "las", " ", "fechas", " ", "en", 
        " ", "que", " ", "se", " ", "tuvo", " ", "minima", " ", "entropia", 
        " ", "y", " ", "su", " ", "precio"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Rastreador", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"BuscarPrecio", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"database", "[", 
                RowBox[{"[", "market", "]"}], "]"}], "[", 
               "\"\<DatedPrices\>\"", "]"}], ",", "#"}], "]"}]}], "}"}], 
          "&"}], ",", 
         RowBox[{"MercadoNoGaussiano", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.791898968787858*^9, 3.791899012406635*^9}, {
   3.791899107450384*^9, 3.7918991719654684`*^9}, {3.7918992439214306`*^9, 
   3.7918992791348906`*^9}, {3.7918993133015814`*^9, 3.791899315620632*^9}, {
   3.7918993819732723`*^9, 3.7918994473168435`*^9}, {3.7918994859123325`*^9, 
   3.79189949371574*^9}, {3.7918995336512656`*^9, 3.7918995763721256`*^9}, 
   3.79189965055049*^9, {3.7918997218769207`*^9, 3.7918997259235053`*^9}, {
   3.791902161560544*^9, 3.7919022218226523`*^9}, {3.7919023787065935`*^9, 
   3.791902399910509*^9}, {3.7919024373976383`*^9, 3.791902475663387*^9}, {
   3.7919026132130394`*^9, 3.791902643040775*^9}, {3.7919026871553288`*^9, 
   3.79190268797515*^9}, {3.7919027635384474`*^9, 3.7919027742048407`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"4e56329a-21cc-49ce-9014-44e85c06616d"],

Cell[BoxData[
 TemplateBox[{
  "Part","pkspec1",
   "\"The expression \\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{\\\"\\\\\\\"Name\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"DJIA\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"Dates\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{FrameBox[GridBox[{{DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEExpressions\\\", \\\"DateObjectIcon\\\"], Rule[ImageSizeCache, List[15.`, \
List[3.`, 12.`]]]], StyleBox[RowBox[{StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \
RowBox[{\\\"\\\\\\\"Fr\\\\\\\"\\\", \\\"\[Ellipsis]\\\", \\\"\\\\\\\"91\\\\\\\
\"\\\"}]}], \\\"Text\\\", Rule[FontFamily, \\\"Arial\\\"], Rule[FontSize, \
11], Rule[FontWeight, Bold], Rule[FontColor, Hue[0.55`, 0.32`, 0.38`]], \
Rule[ShowStringCharacters, False]]}}, Rule[AutoDelete, False], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Baseline]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.3`]]]]], Rule[BaselinePosition, List[1, 2]]], Rule[Background, \
Hue[0.11`, 0, 0.97`]], Rule[FrameMargins, List[List[7, 7], List[3, 3]]], \
Rule[FrameStyle, Hue[0.57`, 0, 0.82`]], Rule[RoundingRadius, 4], \
Rule[BaselinePosition, Baseline], Rule[BaseStyle, List[Rule[FontFamily, \
\\\"Courier\\\"]]]], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"6464\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
FrameBox[GridBox[{{DynamicBox[FEPrivate`FrontEndResource[\\\"FEExpressions\\\"\
, \\\"DateObjectIcon\\\"], Rule[ImageSizeCache, List[15.`, List[3.`, \
12.`]]]], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}}, Rule[AutoDelete, False], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Baseline]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.3`]]]]], \
Rule[BaselinePosition, List[1, 2]]], Rule[Background, Hue[0.11`, 0, 0.97`]], \
Rule[FrameMargins, List[List[7, 7], List[3, 3]]], Rule[FrameStyle, Hue[0.57`, \
0, 0.82`]], Rule[RoundingRadius, 4], Rule[BaselinePosition, Baseline], \
Rule[BaseStyle, List[Rule[FontFamily, \\\"Courier\\\"]]]]}], \\\"}\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"DatedVelocityTrendReturns\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Fri 8 \
Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"8\\\"]], \\\"}\\\"]], \\\",\\\", \\\"\\\\\\\"Day\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\\\", \
Rule[Editable, False]], \\\",\\\", \\\"0.003509456358541385`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Wed \
13 Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"13\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\
\\\", Rule[Editable, False]], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.0013562366945301108`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Thu \
14 Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"14\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\
\\\", Rule[Editable, False]], \\\",\\\", \\\"0.005168621124332695`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3269\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Tue \
30 May 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\", \\\"5\
\\\", \\\",\\\", \\\"30\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\
\\\", Rule[Editable, False]], \\\",\\\", \\\"0.005881255374161398`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Fri 2 \
Jun 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\", \\\"6\
\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\",\\\", \\\"\\\\\\\"Day\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", RowBox[List[\\\
\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]], \\\",\\\", RowBox[{\\\"-\\\", \\\"0.010412040702147962`\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}]}]}], \\\"\[RightAssociation]\\\"}]\\) cannot be \
used as a part specification.\"",2,205,119,29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8830474061825542`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"45d24d6c-9aa2-4cb9-ac11-f0a3b187c93e"],

Cell[BoxData[
 TemplateBox[{
  "Part","pspec1",
   "\"Part specification \\!\\(\\*RowBox[{\\\"\\\\\\\"Dates\\\\\\\"\\\"}]\\) \
is not applicable.\"",2,205,120,29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883047406357093*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"d861556b-d6bf-439e-9044-d4b4841ce966"],

Cell[BoxData[
 TemplateBox[{
  "Part","pkspec1",
   "\"The expression \\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{\\\"\\\\\\\"Name\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"DJIA\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"Dates\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{FrameBox[GridBox[{{DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEExpressions\\\", \\\"DateObjectIcon\\\"], Rule[ImageSizeCache, List[15.`, \
List[3.`, 12.`]]]], StyleBox[RowBox[{StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \
RowBox[{\\\"\\\\\\\"Fr\\\\\\\"\\\", \\\"\[Ellipsis]\\\", \\\"\\\\\\\"91\\\\\\\
\"\\\"}]}], \\\"Text\\\", Rule[FontFamily, \\\"Arial\\\"], Rule[FontSize, \
11], Rule[FontWeight, Bold], Rule[FontColor, Hue[0.55`, 0.32`, 0.38`]], \
Rule[ShowStringCharacters, False]]}}, Rule[AutoDelete, False], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Baseline]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.3`]]]]], Rule[BaselinePosition, List[1, 2]]], Rule[Background, \
Hue[0.11`, 0, 0.97`]], Rule[FrameMargins, List[List[7, 7], List[3, 3]]], \
Rule[FrameStyle, Hue[0.57`, 0, 0.82`]], Rule[RoundingRadius, 4], \
Rule[BaselinePosition, Baseline], Rule[BaseStyle, List[Rule[FontFamily, \
\\\"Courier\\\"]]]], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"6464\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
FrameBox[GridBox[{{DynamicBox[FEPrivate`FrontEndResource[\\\"FEExpressions\\\"\
, \\\"DateObjectIcon\\\"], Rule[ImageSizeCache, List[15.`, List[3.`, \
12.`]]]], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}}, Rule[AutoDelete, False], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Baseline]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.3`]]]]], \
Rule[BaselinePosition, List[1, 2]]], Rule[Background, Hue[0.11`, 0, 0.97`]], \
Rule[FrameMargins, List[List[7, 7], List[3, 3]]], Rule[FrameStyle, Hue[0.57`, \
0, 0.82`]], Rule[RoundingRadius, 4], Rule[BaselinePosition, Baseline], \
Rule[BaseStyle, List[Rule[FontFamily, \\\"Courier\\\"]]]]}], \\\"}\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"DatedVelocityTrendReturns\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Fri 8 \
Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"8\\\"]], \\\"}\\\"]], \\\",\\\", \\\"\\\\\\\"Day\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\\\", \
Rule[Editable, False]], \\\",\\\", \\\"0.003509456358541385`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Wed \
13 Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"13\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\
\\\", Rule[Editable, False]], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.0013562366945301108`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Thu \
14 Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"14\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\
\\\", Rule[Editable, False]], \\\",\\\", \\\"0.005168621124332695`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3269\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Tue \
30 May 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\", \\\"5\
\\\", \\\",\\\", \\\"30\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\
\\\", Rule[Editable, False]], \\\",\\\", \\\"0.005881255374161398`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Fri 2 \
Jun 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\", \\\"6\
\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\",\\\", \\\"\\\\\\\"Day\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", RowBox[List[\\\
\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]], \\\",\\\", RowBox[{\\\"-\\\", \\\"0.010412040702147962`\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}]}]}], \\\"\[RightAssociation]\\\"}]\\) cannot be \
used as a part specification.\"",2,205,121,29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883047420859998*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"eeb91336-4d2a-47c1-83ec-4ccb9fdac898"],

Cell[BoxData[
 TemplateBox[{
  "Standardize","vectmat",
   "\"The first argument is expected to be a vector or matrix.\"",2,205,122,
   29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8830474209824667`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"2734c850-f0ee-470d-80e5-77d88a824eff"],

Cell[BoxData[
 TemplateBox[{
  "Join","heads",
   "\"Heads \\!\\(\\*RowBox[{\\\"List\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"Quantile\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"",2,205,123,29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8830474210672398`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"40ffa06f-06af-4b3b-beab-f7dafbe68ffd"],

Cell[BoxData[
 TemplateBox[{
  "Join","heads",
   "\"Heads \\!\\(\\*RowBox[{\\\"List\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"Quantile\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"",2,205,124,29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8830474211784506`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"4192a01d-12c3-431f-8394-83d62267e447"],

Cell[BoxData[
 TemplateBox[{
  "Join","heads",
   "\"Heads \\!\\(\\*RowBox[{\\\"Quantile\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"List\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"",2,205,125,29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8830474212827473`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"0b236993-5d06-4426-a408-579c57af11b3"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Join\\\", \\\"::\\\", \
\\\"heads\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,205,126,29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8830474213854723`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"35d85a1f-cb5b-4f3e-b396-e0f228bd88f8"],

Cell[BoxData[
 TemplateBox[{
  "MapThread","mptd",
   "\"Object \\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"Quantile\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"Standardize\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\",\\\", FractionBox[\\\"1\\\", \
\\\"2\\\"], \\\",\\\", FractionBox[\\\"3\\\", \\\"4\\\"]}], \\\"}\\\"}]}], \\\
\"]\\\"}], \\\",\\\", RowBox[{\\\"Quantile\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"Standardize\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{\\\"\\\\\\\"Name\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"DJIA\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"Dates\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"DatedTrendReturns\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"DatedVelocityTrendReturns\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Fri 8 \
Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"8\\\"]], \\\"}\\\"]], \\\",\\\", \\\"\\\\\\\"Day\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\\\", \
Rule[Editable, False]], \\\",\\\", \\\"0.003509456358541385`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Wed \
13 Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"13\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\
\\\", Rule[Editable, False]], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.0013562366945301108`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3271\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Fri 2 \
Jun 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\", \\\"6\
\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\",\\\", \\\"\\\\\\\"Day\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", RowBox[List[\\\
\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]], \\\",\\\", RowBox[{\\\"-\\\", \\\"0.010412040702147962`\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}]}]}], \\\"\[RightAssociation]\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"[\\\", \\\"\\\\\\\"Returns\\\\\\\"\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\[Infinity]\\\", \\\"}\\\"}]}], \\\"]\\\"}]\\) at position {2, \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)} in \\!\\(\\*RowBox[{\\\"MapThread\\\", \\\"[\
\\\", RowBox[{RowBox[{RowBox[{RowBox[{\\\"x_\\\", \\\"/;\\\", \
RowBox[{\\\"IntervalMemberQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Interval\\\", \
\\\"[\\\", \\\"#1\\\", \\\"]\\\"}], \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}], \\\
\"\[Rule]\\\", \\\"#2\\\"}], \\\"&\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Quantile\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Standardize\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\",\\\", FractionBox[\\\"1\\\", \
\\\"2\\\"], \\\",\\\", FractionBox[\\\"3\\\", \\\"4\\\"]}], \\\"}\\\"}]}], \\\
\"]\\\"}], \\\",\\\", RowBox[{\\\"Quantile\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"Standardize\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\",\\\", FractionBox[\\\"1\\\", \
\\\"2\\\"], \\\",\\\", FractionBox[\\\"3\\\", \\\"4\\\"]}], \\\"}\\\"}]}], \\\
\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"\[Infinity]\\\", \\\"}\\\"}]}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\"}], \\\"}\\\"}]}], \\\"}\
\\\"}]}], \\\"]\\\"}]\\) has only \\!\\(\\*RowBox[{\\\"0\\\"}]\\) of required \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) dimensions.\"",2,205,127,29423228699515003360,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8830476971419077`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"308a7f96-42c5-47f7-93cf-bfbfff957bdf"],

Cell[BoxData[
 TemplateBox[{
  "Standardize","vectmat",
   "\"The first argument is expected to be a vector or matrix.\"",2,205,128,
   29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883047697236687*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"97a654a4-dabe-4ecd-8e76-85142ac4a83b"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"MapThread\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"x_\\\", \\\"/;\\\", \
RowBox[{\\\"IntervalMemberQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Interval\\\", \
\\\"[\\\", RowBox[{\\\"Slot\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}]}], \\\"\[Rule]\\\", \\\"#2\\\"}], \\\"&\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"Quantile\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"Standardize\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\"\[LeftDoubleBracket]\\\", RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{\\\"\\\\\\\"Name\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"DJIA\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"8\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"DatedVelocityTrendReturns\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Fri 8 \
Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"8\\\"]], \\\"}\\\"]], \\\",\\\", \\\"\\\\\\\"Day\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\\\", \
Rule[Editable, False]], \\\",\\\", \\\"0.003509456358541385`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Wed \
13 Nov 1991\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1991\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"13\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", RowBox[List[\\\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\
\\\", Rule[Editable, False]], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.0013562366945301108`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3271\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Fri 2 \
Jun 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\", \\\"6\
\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\",\\\", \\\"\\\\\\\"Day\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", RowBox[List[\\\
\"-\\\", \\\"6.`\\\"]]]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]], \\\",\\\", RowBox[{\\\"-\\\", \\\"0.010412040702147962`\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}]}]}], \\\"\[RightAssociation]\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"[\\\", \\\"\\\\\\\"Returns\\\\\\\"\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\
\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"\[Infinity]\\\", \\\
\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing.\"",2,205,129,29423228699515003360,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8830477258162203`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[205]:=",ExpressionUUID->"1749556e-3f90-46b8-9ab3-be48c8f8c6a6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinEntropyMarketReturns", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimulado", ",", "MercadoEficienteConFechas", ",", "Particion", 
       ",", "SimulatedEntropy", ",", "Techo", ",", "MercadoNoGaussiano", ",", 
       "BuscarPrecio", ",", "Rastreador", ",", "MinEntropyMarketReturns", ",",
        "Var"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimulado", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MarketEntropy", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechas", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "MercadoSimulado"}],
          "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Particion", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MercadoEficienteConFechas", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"DiscretizeByQuartiles", "[", 
             RowBox[{"MercadoEficienteConFechas", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
          ",", "dias", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SimulatedEntropy", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"Entropy", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
           "}"}], "&"}], ",", "Particion"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Techo", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"Quantile", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Entropy", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "&"}],
             ",", "Particion"}], "]"}], ",", "0.05"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoNoGaussiano", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"MarketEntropy", "[", 
          RowBox[{"market", ",", "dias"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], " ", "<", " ", "Techo"}], " ", 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BuscarPrecio", "[", 
        RowBox[{"datedPrices_", ",", "date_"}], "]"}], ":=", 
       RowBox[{"FirstCase", "[", 
        RowBox[{"datedPrices", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"date", ",", "p_"}], "}"}], "\[RuleDelayed]", "p"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "La", " ", "siguiente", " ", "linea", " ", "de", " ", "codigo", " ", 
        "nos", " ", "da", " ", "todas", " ", "las", " ", "fechas", " ", "en", 
        " ", "que", " ", "se", " ", "tuvo", " ", "minima", " ", "entropia", 
        " ", "y", " ", "el", " ", "retorno", " ", "de", " ", "su", " ", 
        "precio"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Var", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"MercadoNoGaussiano", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"BuscarPrecio", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"database", "[", 
                    RowBox[{"[", "market", "]"}], "]"}], "[", 
                    "\"\<DatedPrices\>\"", "]"}], ",", "#"}], "]"}]}], "}"}], 
               "&"}], ",", "\[IndentingNewLine]", 
              RowBox[{"MercadoNoGaussiano", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Returns"}]}], 
         "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"Ese", " ", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "y", " ", 
       RowBox[{"ese", " ", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "son", " ", "porque", 
       " ", "primero", " ", "busca", " ", "las", " ", "fechas", " ", "de", 
       " ", "la", " ", "columna", " ", "uno"}], ",", " ", 
      RowBox[{
      "una", " ", "vez", " ", "que", " ", "encunetra", " ", "las", " ", 
       "fechas"}], ",", " ", 
      RowBox[{"a", " ", "cada", " ", "elemento", " ", "encontrado"}], ",", 
      " ", 
      RowBox[{
      "le", " ", "calcular\[AAcute]", " ", "su", " ", "retorno", " ", "y", 
       " ", "por", " ", "ello", " ", "se", " ", "necesita", " ", "invocar", 
       " ", "a", " ", "la", " ", 
       RowBox[{"columna", " ", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7919003923787007`*^9, 3.791900424505641*^9}, {
   3.791900486442786*^9, 3.7919005018330965`*^9}, {3.7919005581363497`*^9, 
   3.7919007662552705`*^9}, {3.7919008447941914`*^9, 3.791900864901207*^9}, {
   3.7919009421337423`*^9, 3.791900980729607*^9}, {3.79190105450472*^9, 
   3.7919011100489264`*^9}, {3.791901158447341*^9, 3.7919011618056536`*^9}, {
   3.7919012605207644`*^9, 3.791901265057762*^9}, {3.7919013811934586`*^9, 
   3.791901391335329*^9}, 3.791901425040634*^9, 3.791901534506467*^9, {
   3.7919018274673443`*^9, 3.7919018478216524`*^9}, {3.7919018955450687`*^9, 
   3.7919019128147745`*^9}, {3.7919020323239555`*^9, 3.7919020407946253`*^9}, 
   3.79190273999041*^9, {3.791902785871877*^9, 3.7919028193364515`*^9}, {
   3.7929076084372635`*^9, 3.7929077094470224`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"f0fb565e-d2c8-4577-99eb-769c481f6dac"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Ahora todo junto SIN MAV",
 FontColor->RGBColor[0, 1, 0]]], "Subsection",
 CellChangeTimes->{{3.7954778169432545`*^9, 
  3.795477827917672*^9}},ExpressionUUID->"0ba61bb2-abf2-4ae0-af1a-\
ccda4b8681a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ComparativeMarketEntropyThreshold", "[", 
     RowBox[{"market_", ",", "dias_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "MercadoSimulado", ",", "MercadoEficienteConFechas", ",", "Particion", 
        ",", "SimulatedEntropy", ",", "EntropiaEficienteYReal", ",", "Techo", 
        ",", "Histograma", ",", "MercadoNoGaussiano", ",", 
        "CantidadNoGaussiana", ",", "BuscarPrecio", ",", 
        "PlotMinEntropyMarket"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MercadoSimulado", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", "]"}], ",", 
          RowBox[{"Length", "[", 
           RowBox[{
            RowBox[{"MarketEntropy", "[", 
             RowBox[{"market", ",", "dias"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MercadoEficienteConFechas", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"MAVReturns", "[", 
             RowBox[{"market", ",", "dias"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           "MercadoSimulado"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Particion", " ", "=", " ", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"MercadoEficienteConFechas", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"DiscretizeByQuartiles", "[", 
              RowBox[{"MercadoEficienteConFechas", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
           "]"}], ",", "dias", ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SimulatedEntropy", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Last", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"Entropy", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
            "}"}], "&"}], ",", "Particion"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Techo", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{"Quantile", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"Entropy", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
              "&"}], ",", "Particion"}], "]"}], ",", "0.05"}], "]"}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"EntropiaEficienteYReal", " ", "=", " ", 
        RowBox[{"DateListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"SimulatedEntropy", ",", 
            RowBox[{"MarketEntropy", "[", 
             RowBox[{"market", ",", "dias"}], "]"}]}], "}"}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "Techo", "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", 
            "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Mercado eficiente\>\"", " ", ",", "\"\<Datos reales\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0.9", ",", "1.5"}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Histograma", " ", "=", " ", 
        RowBox[{"Histogram", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"Entropy", ",", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                "DiscretizeByQuartiles", "[", "MercadoSimulado", "]"}], ",", 
                "dias", ",", "1"}], "]"}]}], "]"}], ",", 
            RowBox[{"Map", "[", 
             RowBox[{"Entropy", ",", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"DiscretizeByQuartiles", "[", 
                 RowBox[{
                  RowBox[{"database", "[", 
                   RowBox[{"[", "market", "]"}], "]"}], "[", 
                  "\"\<Returns\>\"", "]"}], "]"}], ",", "dias", ",", "1"}], 
               "]"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{
            RowBox[{
             RowBox[{"database", "[", 
              RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", 
             "]"}], "\"\<Entrop\[IAcute]as\>\""}]}], " ", ",", 
          RowBox[{"BaseStyle", "\[Rule]", 
           RowBox[{"FontSize", "\[Rule]", "16"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], 
            "}"}]}], ",", 
          RowBox[{"ChartLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Mercado eficiente\>\"", ",", "\"\<Datos reales\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MercadoNoGaussiano", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"MarketEntropy", "[", 
           RowBox[{"market", ",", "dias"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "#", "]"}], " ", "<", " ", "Techo"}], " ", 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"CantidadNoGaussiana", " ", "=", " ", 
        RowBox[{"N", "[", 
         FractionBox[
          RowBox[{"Length", "[", 
           RowBox[{"MercadoNoGaussiano", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], 
          RowBox[{"Length", "[", 
           RowBox[{
            RowBox[{"MarketEntropy", "[", 
             RowBox[{"market", ",", "dias"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Ahora", " ", "con", " ", "la", " ", "siguiente", " ", "linea", " ", 
         "de", " ", "codigo", " ", "se", " ", "tienen", " ", "que", " ", 
         "buscar", " ", "las", " ", "fechas", " ", "en", " ", "que", " ", 
         "la", " ", "entrop\[IAcute]a", " ", "fue", " ", "minima"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BuscarPrecio", "[", 
         RowBox[{"datedPrices_", ",", "date_"}], "]"}], ":=", 
        RowBox[{"FirstCase", "[", 
         RowBox[{"datedPrices", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"date", ",", "p_"}], "}"}], "\[RuleDelayed]", "p"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"PlotMinEntropyMarket", " ", "=", " ", 
        RowBox[{"DateListPlot", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"BuscarPrecio", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"database", "[", 
                   RowBox[{"[", "market", "]"}], "]"}], "[", 
                  "\"\<DatedPrices\>\"", "]"}], ",", "#"}], "]"}]}], "}"}], 
             "&"}], ",", 
            RowBox[{"MercadoNoGaussiano", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{
            RowBox[{
             RowBox[{"database", "[", 
              RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}],
             " ", "\"\< precios m\[IAcute]nimas entrop\[IAcute]as\>\""}]}], 
          ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
       "EntropiaEficienteYReal", " ", "Histograma", " ", 
        "PlotMinEntropyMarket", " ", "CantidadNoGaussiana", "*", "100", "  ", 
        "\"\<% de los precios no se comporta Gaussianamente\>\""}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.791800460301524*^9, 3.79180053354858*^9}, {
   3.7918006360736*^9, 3.7918006806827602`*^9}, {3.791800732521495*^9, 
   3.7918007432348523`*^9}, {3.7918007891814957`*^9, 
   3.7918008088115067`*^9}, {3.791810731660534*^9, 3.791810732737381*^9}, {
   3.791810766359928*^9, 3.7918107679383273`*^9}, {3.791810811734475*^9, 
   3.791810828623843*^9}, {3.7918108827500668`*^9, 3.7918108929904633`*^9}, 
   3.791811130874178*^9, 3.791811220675888*^9, {3.791811324434653*^9, 
   3.7918113438726544`*^9}, {3.7918116813098764`*^9, 
   3.7918116818681307`*^9}, {3.791811716135503*^9, 3.791811717997121*^9}, {
   3.791811789040127*^9, 3.791811846141572*^9}, {3.791811881320344*^9, 
   3.791811896577546*^9}, 3.7918119602271113`*^9, 3.791812152592388*^9, {
   3.7918122689899645`*^9, 3.7918122780814223`*^9}, 3.791812361316518*^9, {
   3.7918124022844906`*^9, 3.791812409860263*^9}, {3.791812944268712*^9, 
   3.791812976557892*^9}, {3.7918130081701107`*^9, 3.7918130704665785`*^9}, {
   3.791813139750077*^9, 3.7918132074489555`*^9}, {3.7918132534421687`*^9, 
   3.791813287257541*^9}, {3.791813491152947*^9, 3.791813493369466*^9}, 
   3.791813922739145*^9, {3.791814009154666*^9, 3.7918140483164635`*^9}, 
   3.791894599121708*^9, 3.791894844698906*^9, {3.791894918152873*^9, 
   3.791894964077566*^9}, {3.7918951438216085`*^9, 3.7918951506012216`*^9}, {
   3.791895308513262*^9, 3.791895433112281*^9}, {3.7918955777158384`*^9, 
   3.7918956821237793`*^9}, {3.7918957377182226`*^9, 3.7918957920655613`*^9}, 
   3.7918958224051876`*^9, {3.791895871470617*^9, 3.791895903876078*^9}, {
   3.7918961200187273`*^9, 3.791896167529045*^9}, {3.7918964484985514`*^9, 
   3.791896476280573*^9}, {3.7918967084165936`*^9, 3.791896714056019*^9}, {
   3.791896760789389*^9, 3.791896784926792*^9}, {3.791896829847826*^9, 
   3.7918968651417475`*^9}, {3.7918969409238343`*^9, 3.791896981552741*^9}, {
   3.791897054401504*^9, 3.7918970697932367`*^9}, {3.7918973513200426`*^9, 
   3.7918973992631435`*^9}, {3.791897432558724*^9, 3.7918974337538795`*^9}, {
   3.7918974891326237`*^9, 3.7918975165579357`*^9}, 3.791897549398085*^9, 
   3.791897586423015*^9, {3.7918976467284517`*^9, 3.7918976632292647`*^9}, {
   3.7918977111723104`*^9, 3.791897748563759*^9}, {3.791897785610734*^9, 
   3.79189784480189*^9}, {3.7918978910862637`*^9, 3.7918979806472363`*^9}, {
   3.7918980864334664`*^9, 3.79189820096867*^9}, {3.7918982389102144`*^9, 
   3.7918982812400684`*^9}, {3.7918983445424857`*^9, 3.791898381230453*^9}, {
   3.792994430227225*^9, 3.7929944309094353`*^9}, {3.7954775968387156`*^9, 
   3.795477597546158*^9}, {3.795478075464842*^9, 3.795478081093508*^9}, {
   3.7954784880209465`*^9, 3.795478490877735*^9}, {3.795478725225582*^9, 
   3.795478725600495*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"0342e0ba-3427-4de8-ae8c-fc84a2263588"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"ComparativeMarketEntropyThreshold", "[", 
   RowBox[{"4", ",", "50"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.795476396985953*^9, 3.7954764144261637`*^9}, {
  3.79547703117076*^9, 3.7954770555812235`*^9}, {3.7954770909809484`*^9, 
  3.795477100809263*^9}, {3.7954778041003513`*^9, 3.7954778043522053`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"07fa5955-5266-4bae-b7a0-07e31bc238a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.4540017`", ",", 
   RowBox[{
   "23.134927001443927`", 
    " ", "\<\"% de los precios no se comporta Gaussianamente\"\>", " ", 
    GraphicsBox[{{}, {{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxVnHn8DdUbxydClnIlZYnGvnMRIjSI7K49slySUpYrlL2xb8WVfR9ky3Zl
Xxv7zrXvmsi+XUu2lN+v5/3MH/nn6/16zpz5zHOe85w755w52dt0rv9ZEsMw
ZiczjH///v9fYPTcyxX//Y878Jj1/z/WOp8vCUcuKdvnhJ1X5ym/evxfTrjL
tXynw/+y/cEvsHU8/i97Y5WNoWIPbPZ5hLB1zS9fUDjeboXWt0iuN8b43FY4
uMHnLsLhy8r2P8LRtCuVs0t95ihlN5VwaK3PWbnfeFfv3437ucoG94tW2KL1
7Re21m9V+ycHxT9/+NzwkPjntW3KVcQeXrPN1yMc/d239znwL7uptyu3EXui
pM/ppT57pbK9VOyxCz7PE/Ze2aHl35PygRI+ZxG2WvhcV8rHz/rcUe5vJN+p
9T3YL/4NKhtnhcPNfD4lHB3k831hM+ku5fxSX6iwsn1/n+hv4vN0KR/r75c/
IuW9Rb59seiNFNit9vLib6fhbr99xR7v53Ne2muhsptL2jN41Ofvhd16e7R9
5wgneisbDYiPeT4XJj7iyvZD4vmZspvtiPi3514tn0TYmqNsn5HyzmPf/q3Y
49n3KS8Te9hRdlOK3X2obA1BX7b9ysvRV13Z3SQc26Vs/yTs3fPt3N+qekDt
haT+SETZfSR2466y9QP+ynRQ9TVCX2Vl92/iv6Oy/UjYneiXvykcevOQ2lcI
25aycV449qXPq8kH43y+Ixz41eeFtHf5uNZ3WTj+ubL7Bvp/VDYS5IONPpdG
/5X4f/Qm2h5W+wBhc7TPE9G/TtnehP5LytZ09L96RO1r6P/fK7vThCOrla3d
6PeUDfJXPNVRvX4E8VpS2W2Ff1coW93Rm+KY8s/oLa5szEZvc2W7J/c/eFXt
Lakvf9Ir2JtJvnYbKFvVhRN9ld0SwrE8L2v5u0elfULKxkPhQG9lKxXjwSHf
XkfYqJNM7R2Egz2U3WHC4dm+/Rvh6H7f3hd9j5SNmcKh7sm1/Bhhe6ay3QO9
e3zuKOw98LmxcCBbCuWGjFfTlI35wvGdPndHb5ZXtHwy9FZRdq/L8ye2+fa9
wuYd3/5cOJQxpfIK4VgHZeO4sHVT2Z4pHMmQSp+P8s4HPk8VjrdXtmcLG+OU
3YPC0ddTa/3occsp26fQ28638zzmmNT/0R/aoOxeoX3bptH7/4zeUcr2GPSu
VXanofeib0d/sPWrer8pwuGRyvZk9K569T/P6/6m7K5Eb8rX1I4+e5jP+C/2
i7Ixivg8p+y2Qn+KtMrJuL5gOr3/L+SD9Zn1+hXkx/Dbfn8gP45Qdt8Qdlb6
PJH8fUHZ2ChspMyq9jPC0aHK1i3Gm+XKRimxJ84q2zFhM3k2tXcVDgWV7XrC
3lJlawvPd9ovn6B9kr6j5XfSPoXf+U/8OU2UraO0zwm//EjaxzC1PNdHCyhb
YdqnobI9GH/+7Zc3uF+3iqrnbfrXDGUrN/1rt7Kbj/zwQNkuRP/vUknL3+F+
U5XtG8TDjkr/aW8z4du7Er+ZKyt3Ih4mKVvYA9t8+1j8dVvZxe5U/FDrb4R/
XGU7I/65oWwRX9E3qih/hd4KynZL/HPV56bEa7qqWj4p+t5XNl5FXztlNy/6
or49C/3/tY+0viD9v4yy9TZ6P1U2aqD3B2W3GHrX+OWr4a9wNeVP0DtC2Z6B
3pW+fQl6L/hs094tqmv5vvhvqLIxBL3Lla3P0Xvuv/Zg8hqqj/ZyBykbn9Le
S32uQnufVrZVf9Ka/2kvu7Cy1QR/Lq75n3i1Tvjlae+IUUvvXx29DZUN2it8
1Lfnw39/K9t50Ju3tpZ/Qn+up2zF6c99fPtx4dgz336I/pyrjt9/+f1Yt85/
8ofVU9m6SD6a49tPk29y1FU9i4WDtZTdQeQfR9mqzO/Jvb69LPmleki5pbDd
Vdnujd7pysYs9O7y7WPQe9/nH8iPkXrK6I9PUTYuoXeHb1+H3ru+fYNwOFN9
tQ/DnxOV3aH4c6vPndB/y+c+6H+zgT4v/ohZyu5q/Pmrz4fx53WfH6A/fUO9
Hr3x8g39/ET7X1F2K9P+gUbKHxCvZZXtd4nXz5Qt+mNotF++EvHYprE+fxni
8XufiTdntbKblv5SsonW9zf+auVzavQNVzbeQt8KZfsh/jyv7Hr4Z8jH/vhK
+8aU3R2079mP/9P+VrKmyu3wz0BlqyW/v5f6zPtU8JSyu4HxNkkz5bnC0ULK
xlLeZxYpWyHa97iyzXhpv/Cvr4X+/J/o9QXR30DZzUz7HvGZeHeeK1vp0J+n
udZ/Dv31lI0l6O+t7GJ3n/rlL/I+lrOF8mr011F2x/C+2EPZasH74myfJzPf
kb2l3m84vz9q+rxYONJd2cU/zkxluz16Y2OV+b0WPKPsHiIeB4xTzsDvvSXK
9pv8nj7p8x/kz5fGK18if9rK1jri9Wef+b0XOebzCeL1H2WX94V4vgn6PEX4
/Txf2crCeH9Y2S7H7/2/fHsD3kdyT9T6umCfMVk5hP6sU7Q818e6KBuXGa+m
+vbz+Oe9pcrXZX4q3EbZNU7I/TyfXxc2Uy/z40U4VFLZzSFst1K2n0p9seHL
/lOf9UpM9dwRe6S4z0eFneYxP98Lx4coWzuEjeV++dXC0aLL1d5e2G2qbHzB
fNtAZfdDYXOpX761cOiUXz6PsNf4F7VXEA70V7avMt+3yLdf5/3uuG9Pi/4X
ysZT3pf6rVA784XhBcrGItr7iLLL70H3uW//jPbOs1LvN4v3u7nKRi/a95DP
bXm/e+qXL8n7Xa5Vyv3QX2eVP97z+3O/bx/P78/HPleCp6z1+zvPs13Z2oDe
Suv+ozda7KaWL4b9E2UrF88zWNlIjb6Bt9Q+j/70xctXsf/D/N33yZUHyHyW
t1rZrcl8yO/K9lvMN6ROoeWbMj9W0ueAsLFS2X5dOHjBZ+YDw6+8AlvMl0WL
KxtjxO42V7avM3931uerzNcVTamch/m6psrGReHAIN9+Xco7SVIpM38YL+Tz
ASmfyJ9auZSw2VDZyMj9+/ncTNhe4JdvJBw74nN1YateGi3/k9wv0tvnI+iZ
6/Nw5juf+dxEnj/a41XlbfhjtrL9WDix37fTPuZj356M+Zjsr6l/P2N+a6bP
i2nPvcr2eNrzoc9jmb/Jllbbn/kmp5qyzn8GdylbbZjvvueXn0l7Zgko98He
N7PW/5znm69s5WH+7rDPGZlvmpHVjweJT3OP8pp0wnbWbMLWrO+J349g9/se
wlb/UsL2zQN7/+X4Czi8rIDM/xoFSmt9/4g92BD2ihUVDveDw6N37hG9C5RP
HRU2874Hp60hHKoHe4c7Cdu9YfOgIfeLzYWdFF3E7h1S+/O8wpE6ZXie/j3l
/k4P2PzsvNjjs2G7xVBh40AZfZ7WwsHHWr5KQtjtXpb7Tf5O6kvMhMPJnwib
e2GrwHbRF3qo5XfdZH482/twU0c4MB321qcUtnbBRhP8F7mnnLId+rOUQ0/z
X/B/Fdiq2A//boeNsCX1uRnLc7+rraR/JCqV1+dLwnx+x/Lqr3H486ZylXXC
XoYK+Cf1KPRaykmKyPXWl7AztK/YI+NgL/MF4iH9B5TPQflg+Q/8/MJ6w+dq
nz6Q9YYxsFc2pbC7AQ4/OS9st7Ww15tBfhgFmxsj5Ku1sH1xBfnqkpZf3knY
aV0RvafTCcdHwvbKp1K/sRoO160i9qAHWyNWojdVJfXXRPw5DHY3b8GfK2An
0y3h0HnYesB6iZ2iMvVfuUm+LVZZ4zsH/oyp/dBo/HlGeVILYeflD+E8w4in
ugPQM5f3Pe+l6ejJMJX55xewN6Uy+SX/DI2/65IvzOewdYn58lCemdQ3+CDz
4yHYsVcyP94Ltg9EyW9P1d50KPlt+R9cv6PZTvG/cZX6t9zaLv5eANs1U+0Q
f+a9pv1xhNjNOOz0zCxsHbhO+XejW6X+x7CTuCrsZL/B8+5vv03qrwnb494W
Nr5Re7+FUt7NdlPb745wotpNjYdjwlbkFtdnbSPXR6Yob7oj7GyHw3fhcMfb
Gm8/CEcnwk7kG2F3y23NPyXleRI3YbfQdmH7yzva374Ujo2Djes7hb3NsLPu
JfFX4DrsduiOf9LfVf+NFzY23tV8U0rKB6/AVvpMwqFLCepvP4zyre5z/eVW
wsHhsHfmAfpTPND6Yjz/+WzX5PpvH4q/4ineEbYHjBI2isNWiZJSPtgcNvbk
xF9DYPPyUOHEyyb26ymFzaKwWeeW1BdqCv//9VvYHqjl92SX8rElsBPIJmwV
yn6N8epX4qUxHP54L/w0J5w2KfGTMxf1DT+2RfTOhq3shcUe3g8784sIu2Zu
9Ez/VDhRAzYepxGOPYDDT+YIW1/nob4Rg/BPlrzX6O/vUn9n2O0ORyfD4fem
C5sZ8+GPuQ3wR6V8qu+y6LU7KP+8WDg2ATZKdxP2XDi8c5Zw5IP82I0nrjx/
e9jqmkTs8bGwvWiJ2I3NcPhQb+HgNdg8uEA4ES1A+RaV5HpzAxzu3Ew4dBl2
Et+hN21Bba9fhQOjCmr7Dhe21sLecvRFLqq9UjKxO2kKUX+eo2KPl4LN3KnF
Hl4FW1syC0d/U27N87kpC1NfTeyJEsrlPanPbAmb5x4Je8mLoHcX/gwUK6Lt
0Qe9nxTR9uqAfwfDdpun+O/lotiLDsF/RYqqfZhw+GPlSvg3OqCoPn9pYXex
2vdNFQ4VDPI8L9UWthspz2osHPsuqO01GP0LYSfFHeHAMeWPcuDP+sVUfw/a
vw/s/vO+sDG/mLZfI/rHYdj79Bb+/kvtu17gz57F8U+5m8TDT8qjnhEPB4tr
vEwkHp4U1/78Jf5sXpP6gpc2y/2T1ULf6LG/yv2LwuaOJcLhprW0v7cSjg6E
jfynhM0ktfX61/Bfodrq73/EbjdW7pYZ/9lavt0GsXs/w1aNVcKR/HW0/30u
7DSAvV69heN962g+rE/5zg2wF4vjzzvKY07hz4wNtf2+wp+VlLN/Tfx2gO2V
HYnfCQ21PXfT39s34vmzbdwqeso1pvw48mO8HWw2b8R4OAZ2eg4UDvTsCGfq
Rn6u3EXzw0bGs46wWeVNxudbsFWxknB49gLuX3KujC/R/bD9FRz5+mee915E
2JkGG051YaPvKh0vgvJ7IfoXbN7pLuzmXq35rItwoi7sLv5C2Oy1WuMvKuzl
WKPPs5bfH7Vht8Kvwta3sHFygXBk1hr1z0xhZ98aHR92CgdrrNX23CIc7gZ7
Z+ahdwZsvPUNenfD1tjB6L2vdnOHsN1lHXpq3RGOTYW9ykl2if4dymdeFw4k
lMvmE7Yyr0ffkKBwfBJsLq0hbGxbr/FcWjh4W8t/3Eo4/NYGtRcSjlbcoO1T
Xdh0N6je3MKhG1p+5JvC9hsbsU/k/rEKyu4L/P8F7FwtIXYn3Sb0PTfR+/4m
7Y+3pbzRzrcn8Hd0k/bnJ/jztc2a71+R6xPvwcb1+bT/p5s1P00QDv2g3HMv
/l6jHL9MPJT6VfPHHuIhDDt50R8Z8av2n0zoXwm7/dKh/wJshIvhzxaujufo
jw51Ve8+9C+H7a3riYezsDt+PPqTb9H2KUk8DFJ+r4X0D2/pFu0P0/j9d3qL
5qMFwlbSrZpfutHfCsPO0x/pX4th+6LD78ETsHXjB35/G9vQs6of/bcAbHW1
+b14FDZf68v9+2ynfIZz9OdnsLHwsHA81w70rN/H/evCTtO13L8nHH4ym/vP
2aHjwzjhRPad8LTWwmatnToe5kLPNzs1H+YXth3lcdTnTdxD/XWT0t5bYWfd
Ne53fS/6/8xJe6Xfp/FTk/b5HPaS9iV+ruzTfNOR9gnsh1tGiPeysDfnB+73
2X6Nj2nE12i1DxxGfLc5gL612MPfH9Dx3EHPatgJrCE+Sh6k/E7yT6jVQfVn
DH3DYW/bQvStUE43B33nD+p4Tv+IND+Efz87QL4bckjLnxCOx2D7JvnKOHtI
x6Nn6E8W5/maPMZfS+Ka77Gbp+Lqr+TkjySHdbxPRv4odFjz10n8tQi2GjzF
X8dh79kt9L5Q+4is9Mf8R7S/5qc/NoDd/eXpj0eUuzcivz3X8pnqC7t5jnL/
K+3IJyHYmV+S/Ncbtsv/hT+fKvd9ifyc8xjPn78C+bkObKWaRX7uofaFD4Qj
s5VP3ic/Zz/O/asmyM81Yff4q7tFf3e1j36C/pnKy1KK3d0D2+dfEg5VO6Hj
cX1h+2vY+La5cGya2rN/JeztPKH9paxw4J7ypprCTueTmh9SCccnw94Y6je2
n1R/VxAO3oHNPh3Rn/EU9zemCScmwE5kibC5Re1rpqL/Jmzvm4n+DKd1POqF
/g9gM9leYWszbJQOMr937bTmu+LCzutndPxKx/xeOdj7tAXze5+rvUld5vPS
noWrLxVOlPGZ+Umz7VkdX1cwv5jmHPcL5ZP5tkDpc6rvhdit1rD9sDzzdyNh
d8Yk5u9WndPxYSDzo++e1/zxJfN3Lc9rfzouHB2m9nsbhb1lF6jvQk3uf0Z5
xofC1su/oadKKeYHByjnLiRsLIHdbG9w/5PKm38S/eGXPO5XdhvzswU99e8u
/PEzbLw1mfnZY57mW+ZH7X9ge0B+qT+W73ftv++iv/7vqi8d/jkM//8HE/75
S+13Msj8Vjz3RW2/nMLBXsrPmG90n1zUePxGOJHjkuabL4XN2pe0//dhPvZb
5YjN/Nks5aFzmd80/9D2/JH52Bp/6Pg5mPm4bnC48xLm42Zo+cu5Wf/YrfbR
o5kv/Oiyxuti5je7KOdfz/zhjss6nu9j/jBxWdvLY36w0xXq68F8pDcJdk7n
ZX5zG2ylT8P6yO0r6s8fhCNvXVX/ZJP5e2PCVc13rYSDrnLsHfav34DthhWY
/195U/vrt+x3H3oLfTsesj97Oew0ScV6yTsPuP5YErGHqj9Qf01jPavqQ+p7
nIf6I+Z1qW/jOtbHpsDhu6xXBXbA9vmO3L9yduxPVrMe8WNO7PtOUv9G2Pp9
O+WvwN6cp+gN5LpO/3+T+dH3YbvbK6yvrIPDL3KyfnIJ9rp8wPrJq7kp/35t
nvc92K3VmfnTNrA3dhDrQx5sDGW+NJA6D/W/x/qOVRK2t+r+4law+edc1oeG
q70886/BV/JSX5nlrP8Uh81a29HfHA7nO4X+IbBX4gj6Y1q+OxxYmg/7l/fR
cwp2L8fwT//8+LML33cEF8HO5JE8f78CXN+L+eLQAtiezvcT9hE43Pgs88fP
1b6B/dpenoLomXaV558L26lfZn/EIeVcBt9vPIWd0xnZL5GrEPrGpmF/Rx3Y
7p2U/R37laenZX/HI9j8nv3lZvbC6D/zFP01YcPLwv6O7sq7crC/4yFslWA/
upWtCPY1L9BfDbbfuET7fQ272eD4NNjMgP5olaLYm5dEb2fYyN8YvZPVXqcX
erfDzvVufB9QKYg92WC+D+gAO7sGoXcibNfux36ULcrF+T4hchP2Mm/Dn18W
o71O7MGf42DvGd8nhDfDTopi6L+mHE6N/teLq//j+HMMbEQt4mGDstmVeLgM
O3nZH++lLaH9h/gLlIXtJNvw51rYyKT+vAi7q3ZSf8uS8P4k+GcYbOR9nect
Vor2q/wn9X0Cu0tPU99g2HxOvAbSVKZ8sXr4rxRs/9iB+sJw+De+PzF+0/Kt
1+G/lB9y/6sb8V8J2L65G/+1gK30cfw39EPtv7RHKHkV9F1YSDwGq2g+4XuQ
WDPYq8f3WN4g2Eo3kPZfpuUnsp/JKVxV+8ta+lMT2OmJXmMAbBbZjP7FsNty
H/pPqL3cGuKz4UfY+x0nPr+DvQJH0b/wI40PB/1HYSNlFP1/6/UbD+HPedXQ
V28veuOweXkiep9V03xAPBq5q2u8sR8tOgc2rvO9mXsA9vqPQ+9j5SkR9Oao
wf0HV0dvLdh74BGPe2GrwUXi4c8amn/Jr9Y7Nbl+s36fUR02UkwgvroqPx5H
/rxfU/MR40P47VqaX4eQv6vW0vacRf6OwOF55PfElFra3+kvdqbaXJ/0C/pT
5doa7/Qvr6PyVca7wCTYrTCC78W2qv3kMdZDrTo63qzn98JXyoteY/z8oyP3
21Kc9d20nbAPGMPv1R9g460wv6d/76T5ojG/H9N01v56iN+PpeBwu8e8n6yE
nQC//wO/wV7Odfz+TxnBHs3G7/8ScHhtNd5fWkS0/1/j/epcRPXy/hlO3kXz
c0ver4JddDzm/SwxCDaqt+Z9JOnXOh6FeR8p/LWOV3+gtwnshA6jdwBs1ZiB
3sVavlwq3kcKdIV3fMP7VCPYLbmW96nv1L50K7/HF8LWgzz496japz3Cn/W7
oS9rFbGH+sBG6d/5PT4P9u5NFY7Fu2k8VeN95plefz4Zv8d7dld/leV9ao5y
jVboP9Bd22cJ71NP4HCegrxP5PgGe5n6wq4Dh6u67JfY+432z+7sl/gTtscN
Rv8731K+89fCdnXY3Jie3+e71V6U94HI2z3w3z9p+D1eFTY7XeL9JwJbsyK8
L1TuqfE9kveFjj3V/j7vC5PUvmgR7y9v9tL2OMn7i9VL/cX+isBXvfT5xvK+
ML6X5uvj6PtVy2/aQX+p0Jv6DrI/IvhFb42vBey3uNRH42UC+vKN0fJ3mV9p
oHznb+bD+sJW9neZD5qv3HqP2GOHYS8d84lW6EfuN7KbzN9Hev2o8XV8m/jv
J9hY+JT1oIM/an67yPrFU7WXLsD61Kyx8J6uW0XvvrHaXnOFzUdjNR5YjwqZ
47T9n7E+NQO2901gfW2P2k3WX60HcPjje6wHZh1P+b6spzkfKb/x+ybx5044
fOXZhn85nFD7zR1ij2aeoM+bEv0fKv8+m/WrThO0fpf1oLcm8vy1DrCeWlF5
xiTRF+gAe2Nas341ATbsbaxPvjEJXrMR/30wSfvfu6z/tJ+k/e0v1gPHTtL8
/xbrgZuUiw1lfbLcZO2Pc/FnO9h+90PWA6OTNT/kQ/96LZ/qLVlP8/5Q3ntF
2Plhio5PFdG7Zopen4r1y4uwt7wZ65dppnK/HA7+GzFVy7djPXgl7MTWSP3m
b8qZPpT1sFDKadr/HordLqE84LZw4Bc4PITnsc4p3/2M9k8+Hf9nu0H7B6dr
/3uFeG2mfDcD/jwN2w1v4c+kM+AkG9FfWLnSEfQ3UZ5+G38P8O078acxE39c
Skm8NoLd72ej9zvYcPehdyFsb01H++dzKD8+A+1fH3Z21WZ9tO4s9I9eyPpo
T9j+iviJzZml8Zda4s87oFyyMXqe6PXtWI+PO7O5/mEn2nPfbO2Pup7/Jxyu
24T11HfmEB/p0+OP6bDbwcQfu9W+tz/teR/25pynPd/+SfNdV7HHqsKGVVHs
1o6fdDxPIhy5q5yuL+upmeZqfP/Memrlufq8WdHfSTlNWdZ7b8Hesy1Sn/vm
PI2nMcIJC3YS7VgP/mqe9r9X0T9+ntb/Peu96edTPkV24UAF5URK1nN/hM3m
meg/G+ervz8VDr6/gPsXrCoc/kx5wHnyz2jYiXQSdtctUD2DhROXFmj+frJR
/NlmIf7LHxeOfb9Q46OtsLda+b3ccn3g94U6PmQXtlL/rPETFY4P/1nH64hc
b6xUXlteOHgBdv/sJRx+ZZHmw5ToL75I+3MysZvLlVMslXwbOrtI22OUsJ1s
sfZX1V90scZDNvQ3hZ2Pxkj9kVOLVV9G/JtkiY5vtFe80BL1by5ho8kS1Uv7
uC9gb1tq4jf/Uq1vHPHbEHb/GU3+7AdbBS6QPxfAZp/T7JfIu0zz55v073qw
M5T9B5Hey7R/1SUfzV2m+SEF/e+Q2m++yfp+nZjm21qs7/eIaf+yWN+fDVv9
96B/f0z9y/4I8zFsvjaAfNB9uY7HnRifZio3qUI+2At7vdIzPj2ErVmZsHdc
iX+WDcNedo2Ot/PR23eTPn+ObaJ3/iYdD2oIm3k263ifRTgU2qzx2FU4MMy8
Ifbcb/P74xfYq1eA9cpzcLhdYdYLP8mOfdu7rBcOhp2mx+T3SvS02puxX874
J+cN8u1S9iPUzwWXTsF+uzjsVmD/Vyh3bvSc20p+rQu7jfrjz56wEf6L/Tw5
8sD5t8v1Ti3Y3NhNOP4NbPXvKBzLWgW9gU/4ffOR8tM4+atK1Rvkxxj5tzMc
TjuI8Wqy2vu2YrzappyE8d69reUPHSReJ3yEvpPs54m5sNWV8ca7oXaH/TyB
DNXw3zPGH2cs7O5vQrxugu2HrzNeXYPNKtQffL069af/E73lYK/LA+J1PWz/
TfyZl2Enb1bGt7Q1qK8c/cEuo1ylM/o/9e1LiMeLsFdsFO2Rpib1b62I/lKw
W5L9W8ZI2FoRpH+lrEX5ke/Qv0rA1par6G0Bh9fSH8xhyu2mkB9+qaV6ZtGe
wdo8z+kD5IdPYOPxUvLDYNgex++1yDItHyffOKfV3o34CH5cB85RB38OgN2W
5WnvE7BZ5LLkm4RRV+PBY//Sd7C7uSi/TxbCxvVR6D0Km3V6Ek916+HPsovJ
hwfrafkrPO8T2Pl8JfGVoz4cnYN/jZZw7ORW0bcAtiv9LZw4ArszYPNvOLzs
T+FQ3lbcf2BGyQ/eXNiueU/sgXgr9dcRYeuZcoqVwpFcYa7v9YZc79SB3Qtt
hYMHYPNOSDj8GLZGsP8pmr216p0l7NaEvTk7hBPdYevGbmH7Iez+cxC91dpo
PllBfuvaRuvfJWxNb6P54QfheJZPKZ9tjLBRFbbGkp+CEdiofgm9U2Dzsy3o
3Q47u5aTbyu3xZ93N5NvO7bV/sHz2BPbqt7CwrEtsHkwPfpvwk4Z9tdGvvwM
Pdl5X0sUm6D5aiX7L5rDdsMtvG8OUV50lnzedCL6vU9Zrx+oPLwI+wuWTNT+
sJvyzyej/0k59hv0mqLtsYv9BnOnaPxVZr/BIdh8/oz9G0+Vl45lv0TOqZQP
LuL9ePZUHW+2sl9iv9rXHeb9+NFUv7+xf8mcxvOnCrO+X2Oa5te/Wb/fozwk
G/NLD6apPtbr41mnU9+xq6zvV4PDk4own/M17PQcxvp9Qjl0gfmmzDO4Pmsz
1sM7w+FTrJfbk2GvcibmlzLO1P7bXzjSATYvt0OPO1PzdynhaHuH9ljThf0P
Y2EnU27W5zc5mn91ff4a7B0OMF/Ubpb2z+3MF0VhtxAc2DBLx7uHzAcdm6/j
2RjOu+qzgOsHpOL8qp4L8XeDmXxvMn4p5XcepP5fYWPhauajKiyDrdeY3/li
mebH4awP/7hM+0dX5lc2aflvWzO/cnWZxg/nU7mfxTR++Z4lMTqm4+WHrL+u
h91a+fh+4w+118Buv7ac+s1GfH/2O2wOHsn3Z6l/Ub18/+ElW6n59U3mi4LK
+fl+x2oG2xebMV80SPmNinyPknQV9Sc7zfMUhp2hJuvLTeBwD76HivZX+64f
2U+w+pb6+5K0R9S7pePZWton1W2tn+9pQsNho73H9yorbmv/5fuw2Hk4PC8l
7ZnijuaPZMKB4rB3Zg3zyWeU5zzme7xkd9H3UYLva4re1fH7jHC46V3Nb0HO
Rzt5V8fzhnyvliSBvpT9hUOFEtp/RvP9WmPlNgPQa8PmqHqsF7/Q660ynOeW
/x568t7i+6AG97Q/TUV/Xzhc1MV/ee5rvmJ93Q3BzvxpfO/YSzm+mu8d597X
/K7fWx7S6wveZP2+xwO9XyH0zX6g+bko+vYrZ+oi7Dx6oPmlKev33R9Sv9OP
9fuZsDktxPlze9Tevomw+0Dtd4rh36x/av828d+0PzX+y+K/nT5Pob0TyoXW
0t5ZHlH/WzPQX0W5CeXj2x6p/xeznnDnkY5/W9Gf8THx8ekJ9FeCncl83xrt
8FjzeR72E2R4Qvltel7eB7Db6BXhWHvY2NOa/QRj1T7eY3/A60+5/4N5rGe0
e6rjw1i+rx0De+n+4vvaDU/VX7/wvWiZZ9jrneV70U9he+sEvqca9UzzQ3v0
rn2m4/EE/HvxmfZHzvcLtP5Lx4eUrMeMhK0bR2n/VbD9d3far+xbN6W+5hbn
AbRV/l7PT1kHh7/gfBKvdEZh5zTnRQTawOFft3B+ggebO55x/sTwTDcZH4tw
/sQK2OvagPMnzsNmpx7cP0Vm6rsW4byBIbDdAo7FlAt24fv9M7AT4fyYQLIs
wlYXztuxisLh9zjfJr5EeSbndRinYLcK9QWTvE19PRdyvksh5eur0d8YtpP8
wPkdx5WPDcQ+LTv1tfyT59sJm7n/4fkSsH0+HectZMlB/Xve4Pv1ycrfcv6C
tw0296fl+/A7ag9Tn5UxJ/Y0Sfj+vhLslPmL59ui9lrPeL6bsJXe4fky5BI2
JnLeUfQD2Nx8Ff3tlXfcJh6uwfb9a7TP67mx99lN+5SDrcObaZ92sL2S83UC
Y+DwaD1vKm0e1f+A9ikDe83q8719W+WXWvO9/ag8Gn/V+H6+VF783WcO7dFa
+c5W9I6E7YZn0LsKNhzOo4v9pvb7r3EeQMt81J/iJ/T9Ahvtq6LvnLLH+UPR
wfk13jgPyV0Gm43wT+K08nHaw3y5gNafjfMpisDe+gK070nY7Mf5e9ZLBbF/
yXlZkYKw+7w452c1Unv2AOcpFC6DngecR5JYBLsHV7I+faKMxtsu1qeNslw/
hvMp7QKw89jg/JSGsNWgDee7HFX7LpvzU/6G7UqN6f9536f8lu6cn1IPtm/3
5XyfPnB452zOH3qmfKgC58/UKcf16zlfyOypnHkR573MgcPtOD/Jy14eXkZ+
CdSCnXhJ+sc3sHG6LPHetQLlFxSk/abDdk3Oy3J3wd6DtrTfPZ/bE99TPqC+
Mt2pb3ZN/Hu5A+vpZi3tX3wva9aEw2u/JH93h73lMcbDPbBZ513221WrzfU1
ajK+fA0bpT9h/9k02Cxyh/FwZ231x2zGm3uwO74o413nOtiHsN/OnaycvBnj
zTbYvJyB8eZOHc2vQ9CbsS787gzKt6uHf9dwHqV9GTYix9gvkLY+5T/kvEuv
DOxO47yCQFs4nJHrrVGwV6IR+8NKN+D5c85jf0Nr2K0whf00j77FXpH9XF6a
7+BZ+xmPSsPG5weI19aw/fUR4nUk7FS/TzymstFz5S7nTb0Le7NS0r4t1f4O
5ylFh6n9Bud5hYr1537579F/PoG9bdQfG9xfxzfYW6blq/+C3jOwM/Fn9CwZ
wPOMyEG+PgmbhQLoeWkgPP4F/eNn5eac9xW+MULHlxvofWMkfPEY53t1nAQ/
5Hwz69fJ+HfzR5zXcx0OV+N8Myf9FOyrOH8q+CNs//QeejbC4W9Kk+9fncbz
5B101PofwE68Gg==
          "]]}}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6]}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6]}, {}}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{2.9053728*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{2.8401408*^9, 
           FormBox[
            StyleBox["\"1990\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {2.9979072*^9, 
           FormBox[
            StyleBox["\"1995\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.1556736*^9, 
           FormBox[
            StyleBox["\"2000\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.3135264*^9, 
           FormBox[
            StyleBox["\"2005\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.4712928*^9, 
           FormBox[
            StyleBox["\"2010\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.6290592*^9, 
           FormBox[
            StyleBox["\"2015\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.7868256*^9, 
           FormBox[
            StyleBox["\"2020\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}}, {{2.8401408*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {2.9979072*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.1556736*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.3135264*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.4712928*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.6290592*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.7868256*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
       RowBox[{
        "\"Nikkei 225\"", " ", 
         "\" precios m\[IAcute]nimas entrop\[IAcute]as\""}], TraditionalForm],
     PlotRange->{{2.9053728*^9, 3.705696*^9}, {0, 22667.}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}], " ", 
    TemplateBox[{GraphicsBox[{{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.69342]]], 
          RGBColor[
          0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
             Directive[
              Opacity[0.5], 
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.69342]]], 
               RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798]]], {{
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.215, 0.}, {1.22, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.23, 0.}, {1.235, 7}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                  TagBoxNote -> "7"], 
                 StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.24, 0.}, {1.245, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.245, 0.}, {1.25, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.25, 0.}, {1.255, 2}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                  TagBoxNote -> "2"], 
                 StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                 Style[2, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.255, 0.}, {1.26, 8}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 8]& , 
                  TagBoxNote -> "8"], 
                 StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
                 Style[8, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.26, 0.}, {1.265, 13}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 13]& , 
                  TagBoxNote -> "13"], 
                 StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
                 Style[13, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.265, 0.}, {1.27, 6}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 6]& , 
                  TagBoxNote -> "6"], 
                 StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                 Style[6, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.27, 0.}, {1.275, 9}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 9]& , 
                  TagBoxNote -> "9"], 
                 StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                 Style[9, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.275, 0.}, {1.28, 17}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 17]& , 
                  TagBoxNote -> "17"], 
                 StyleBox["17", {}, StripOnInput -> False]], Annotation[#, 
                 Style[17, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.28, 0.}, {1.285, 36}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 36]& , 
                  TagBoxNote -> "36"], 
                 StyleBox["36", {}, StripOnInput -> False]], Annotation[#, 
                 Style[36, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.285, 0.}, {1.29, 32}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 32]& , 
                  TagBoxNote -> "32"], 
                 StyleBox["32", {}, StripOnInput -> False]], Annotation[#, 
                 Style[32, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.29, 0.}, {1.295, 7}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                  TagBoxNote -> "7"], 
                 StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.295, 0.}, {1.3, 61}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 61]& , 
                  TagBoxNote -> "61"], 
                 StyleBox["61", {}, StripOnInput -> False]], Annotation[#, 
                 Style[61, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.3, 0.}, {1.305, 53}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 53]& , 
                  TagBoxNote -> "53"], 
                 StyleBox["53", {}, StripOnInput -> False]], Annotation[#, 
                 Style[53, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.305, 0.}, {1.31, 74}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 74]& , 
                  TagBoxNote -> "74"], 
                 StyleBox["74", {}, StripOnInput -> False]], Annotation[#, 
                 Style[74, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.31, 0.}, {1.315, 75}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 75]& , 
                  TagBoxNote -> "75"], 
                 StyleBox["75", {}, StripOnInput -> False]], Annotation[#, 
                 Style[75, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.315, 0.}, {1.32, 123}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 123]& , 
                  TagBoxNote -> "123"], 
                 StyleBox["123", {}, StripOnInput -> False]], Annotation[#, 
                 Style[123, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.32, 0.}, {1.325, 86}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 86]& , 
                  TagBoxNote -> "86"], 
                 StyleBox["86", {}, StripOnInput -> False]], Annotation[#, 
                 Style[86, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.325, 0.}, {1.33, 169}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 169]& , 
                  TagBoxNote -> "169"], 
                 StyleBox["169", {}, StripOnInput -> False]], Annotation[#, 
                 Style[169, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.33, 0.}, {1.335, 223}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 223]& , 
                  TagBoxNote -> "223"], 
                 StyleBox["223", {}, StripOnInput -> False]], Annotation[#, 
                 Style[223, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.335, 0.}, {1.34, 179}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 179]& , 
                  TagBoxNote -> "179"], 
                 StyleBox["179", {}, StripOnInput -> False]], Annotation[#, 
                 Style[179, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.34, 0.}, {1.345, 405}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 405]& , 
                  TagBoxNote -> "405"], 
                 StyleBox["405", {}, StripOnInput -> False]], Annotation[#, 
                 Style[405, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.345, 0.}, {1.35, 380}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 380]& , 
                  TagBoxNote -> "380"], 
                 StyleBox["380", {}, StripOnInput -> False]], Annotation[#, 
                 Style[380, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.35, 0.}, {1.355, 391}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 391]& , 
                  TagBoxNote -> "391"], 
                 StyleBox["391", {}, StripOnInput -> False]], Annotation[#, 
                 Style[391, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.355, 0.}, {1.36, 483}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 483]& , 
                  TagBoxNote -> "483"], 
                 StyleBox["483", {}, StripOnInput -> False]], Annotation[#, 
                 Style[483, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.36, 0.}, {1.365, 682}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 682]& , 
                  TagBoxNote -> "682"], 
                 StyleBox["682", {}, StripOnInput -> False]], Annotation[#, 
                 Style[682, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.365, 0.}, {1.37, 635}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 635]& , 
                  TagBoxNote -> "635"], 
                 StyleBox["635", {}, StripOnInput -> False]], Annotation[#, 
                 Style[635, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.37, 0.}, {1.375, 596}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 596]& , 
                  TagBoxNote -> "596"], 
                 StyleBox["596", {}, StripOnInput -> False]], Annotation[#, 
                 Style[596, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.375, 0.}, {1.38, 880}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 880]& , 
                  TagBoxNote -> "880"], 
                 StyleBox["880", {}, StripOnInput -> False]], Annotation[#, 
                 Style[880, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.38, 0.}, {1.385, 455}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 455]& , 
                  TagBoxNote -> "455"], 
                 StyleBox["455", {}, StripOnInput -> False]], Annotation[#, 
                 Style[455, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.385, 0.}, {1.39, 94}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 94]& , 
                  TagBoxNote -> "94"], 
                 StyleBox["94", {}, StripOnInput -> False]], Annotation[#, 
                 Style[94, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
             Directive[
              Opacity[0.5], 
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.69342]]], 
               RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051]]], {{
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.94, 0.}, {0.945, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.945, 0.}, {0.95, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.95, 0.}, {0.955, 3}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                  TagBoxNote -> "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.955, 0.}, {0.96, 3}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                  TagBoxNote -> "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.96, 0.}, {0.965, 4}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                  TagBoxNote -> "4"], 
                 StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                 Style[4, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.995, 0.}, {1., 6}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 6]& , 
                  TagBoxNote -> "6"], 
                 StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                 Style[6, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.005, 0.}, {1.01, 2}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                  TagBoxNote -> "2"], 
                 StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                 Style[2, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.01, 0.}, {1.015, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{1.045, 0.}, {1.05, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.055, 0.}, {1.06, 4}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                  TagBoxNote -> "4"], 
                 StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                 Style[4, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.075, 0.}, {1.08, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.08, 0.}, {1.085, 3}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                  TagBoxNote -> "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.085, 0.}, {1.09, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.09, 0.}, {1.095, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.11, 0.}, {1.115, 3}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                  TagBoxNote -> "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.115, 0.}, {1.12, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.125, 0.}, {1.13, 3}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                  TagBoxNote -> "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.13, 0.}, {1.135, 7}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                  TagBoxNote -> "7"], 
                 StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.14, 0.}, {1.145, 3}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                  TagBoxNote -> "3"], 
                 StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.15, 0.}, {1.155, 9}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 9]& , 
                  TagBoxNote -> "9"], 
                 StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                 Style[9, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.16, 0.}, {1.165, 14}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 14]& , 
                  TagBoxNote -> "14"], 
                 StyleBox["14", {}, StripOnInput -> False]], Annotation[#, 
                 Style[14, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.165, 0.}, {1.17, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                  TagBoxNote -> "1"], 
                 StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                 Style[1, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{1.17, 0.}, {1.175, 6}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 6]& , 
                  TagBoxNote -> "6"], 
                 StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                 Style[6, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.175, 0.}, {1.18, 6}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 6]& , 
                  TagBoxNote -> "6"], 
                 StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                 Style[6, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.18, 0.}, {1.185, 2}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                  TagBoxNote -> "2"], 
                 StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                 Style[2, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.185, 0.}, {1.19, 16}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 16]& , 
                  TagBoxNote -> "16"], 
                 StyleBox["16", {}, StripOnInput -> False]], Annotation[#, 
                 Style[16, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.19, 0.}, {1.195, 16}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 16]& , 
                  TagBoxNote -> "16"], 
                 StyleBox["16", {}, StripOnInput -> False]], Annotation[#, 
                 Style[16, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.195, 0.}, {1.2, 9}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 9]& , 
                  TagBoxNote -> "9"], 
                 StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                 Style[9, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.2, 0.}, {1.205, 11}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 11]& , 
                  TagBoxNote -> "11"], 
                 StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
                 Style[11, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.205, 0.}, {1.21, 24}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 24]& , 
                  TagBoxNote -> "24"], 
                 StyleBox["24", {}, StripOnInput -> False]], Annotation[#, 
                 Style[24, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.21, 0.}, {1.215, 42}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 42]& , 
                  TagBoxNote -> "42"], 
                 StyleBox["42", {}, StripOnInput -> False]], Annotation[#, 
                 Style[42, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.215, 0.}, {1.22, 25}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 25]& , 
                  TagBoxNote -> "25"], 
                 StyleBox["25", {}, StripOnInput -> False]], Annotation[#, 
                 Style[25, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.22, 0.}, {1.225, 17}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 17]& , 
                  TagBoxNote -> "17"], 
                 StyleBox["17", {}, StripOnInput -> False]], Annotation[#, 
                 Style[17, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.225, 0.}, {1.23, 40}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 40]& , 
                  TagBoxNote -> "40"], 
                 StyleBox["40", {}, StripOnInput -> False]], Annotation[#, 
                 Style[40, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.23, 0.}, {1.235, 36}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 36]& , 
                  TagBoxNote -> "36"], 
                 StyleBox["36", {}, StripOnInput -> False]], Annotation[#, 
                 Style[36, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.235, 0.}, {1.24, 56}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 56]& , 
                  TagBoxNote -> "56"], 
                 StyleBox["56", {}, StripOnInput -> False]], Annotation[#, 
                 Style[56, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.24, 0.}, {1.245, 49}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 49]& , 
                  TagBoxNote -> "49"], 
                 StyleBox["49", {}, StripOnInput -> False]], Annotation[#, 
                 Style[49, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.245, 0.}, {1.25, 62}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 62]& , 
                  TagBoxNote -> "62"], 
                 StyleBox["62", {}, StripOnInput -> False]], Annotation[#, 
                 Style[62, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.25, 0.}, {1.255, 27}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 27]& , 
                  TagBoxNote -> "27"], 
                 StyleBox["27", {}, StripOnInput -> False]], Annotation[#, 
                 Style[27, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.255, 0.}, {1.26, 108}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 108]& , 
                  TagBoxNote -> "108"], 
                 StyleBox["108", {}, StripOnInput -> False]], Annotation[#, 
                 Style[108, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.26, 0.}, {1.265, 47}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 47]& , 
                  TagBoxNote -> "47"], 
                 StyleBox["47", {}, StripOnInput -> False]], Annotation[#, 
                 Style[47, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.265, 0.}, {1.27, 49}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 49]& , 
                  TagBoxNote -> "49"], 
                 StyleBox["49", {}, StripOnInput -> False]], Annotation[#, 
                 Style[49, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.27, 0.}, {1.275, 57}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 57]& , 
                  TagBoxNote -> "57"], 
                 StyleBox["57", {}, StripOnInput -> False]], Annotation[#, 
                 Style[57, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.275, 0.}, {1.28, 57}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 57]& , 
                  TagBoxNote -> "57"], 
                 StyleBox["57", {}, StripOnInput -> False]], Annotation[#, 
                 Style[57, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.28, 0.}, {1.285, 111}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 111]& , 
                  TagBoxNote -> "111"], 
                 StyleBox["111", {}, StripOnInput -> False]], Annotation[#, 
                 Style[111, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.285, 0.}, {1.29, 68}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 68]& , 
                  TagBoxNote -> "68"], 
                 StyleBox["68", {}, StripOnInput -> False]], Annotation[#, 
                 Style[68, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.29, 0.}, {1.295, 48}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 48]& , 
                  TagBoxNote -> "48"], 
                 StyleBox["48", {}, StripOnInput -> False]], Annotation[#, 
                 Style[48, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.295, 0.}, {1.3, 164}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 164]& , 
                  TagBoxNote -> "164"], 
                 StyleBox["164", {}, StripOnInput -> False]], Annotation[#, 
                 Style[164, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.3, 0.}, {1.305, 123}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 123]& , 
                  TagBoxNote -> "123"], 
                 StyleBox["123", {}, StripOnInput -> False]], Annotation[#, 
                 Style[123, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.305, 0.}, {1.31, 130}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 130]& , 
                  TagBoxNote -> "130"], 
                 StyleBox["130", {}, StripOnInput -> False]], Annotation[#, 
                 Style[130, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.31, 0.}, {1.315, 112}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 112]& , 
                  TagBoxNote -> "112"], 
                 StyleBox["112", {}, StripOnInput -> False]], Annotation[#, 
                 Style[112, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.315, 0.}, {1.32, 173}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 173]& , 
                  TagBoxNote -> "173"], 
                 StyleBox["173", {}, StripOnInput -> False]], Annotation[#, 
                 Style[173, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.32, 0.}, {1.325, 106}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 106]& , 
                  TagBoxNote -> "106"], 
                 StyleBox["106", {}, StripOnInput -> False]], Annotation[#, 
                 Style[106, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.325, 0.}, {1.33, 182}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 182]& , 
                  TagBoxNote -> "182"], 
                 StyleBox["182", {}, StripOnInput -> False]], Annotation[#, 
                 Style[182, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.33, 0.}, {1.335, 233}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 233]& , 
                  TagBoxNote -> "233"], 
                 StyleBox["233", {}, StripOnInput -> False]], Annotation[#, 
                 Style[233, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.335, 0.}, {1.34, 177}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 177]& , 
                  TagBoxNote -> "177"], 
                 StyleBox["177", {}, StripOnInput -> False]], Annotation[#, 
                 Style[177, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.34, 0.}, {1.345, 354}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 354]& , 
                  TagBoxNote -> "354"], 
                 StyleBox["354", {}, StripOnInput -> False]], Annotation[#, 
                 Style[354, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.345, 0.}, {1.35, 313}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 313]& , 
                  TagBoxNote -> "313"], 
                 StyleBox["313", {}, StripOnInput -> False]], Annotation[#, 
                 Style[313, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.35, 0.}, {1.355, 339}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 339]& , 
                  TagBoxNote -> "339"], 
                 StyleBox["339", {}, StripOnInput -> False]], Annotation[#, 
                 Style[339, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.355, 0.}, {1.36, 381}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 381]& , 
                  TagBoxNote -> "381"], 
                 StyleBox["381", {}, StripOnInput -> False]], Annotation[#, 
                 Style[381, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.36, 0.}, {1.365, 576}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 576]& , 
                  TagBoxNote -> "576"], 
                 StyleBox["576", {}, StripOnInput -> False]], Annotation[#, 
                 Style[576, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.365, 0.}, {1.37, 403}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 403]& , 
                  TagBoxNote -> "403"], 
                 StyleBox["403", {}, StripOnInput -> False]], Annotation[#, 
                 Style[403, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.37, 0.}, {1.375, 489}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 489]& , 
                  TagBoxNote -> "489"], 
                 StyleBox["489", {}, StripOnInput -> False]], Annotation[#, 
                 Style[489, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.375, 0.}, {1.38, 619}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 619]& , 
                  TagBoxNote -> "619"], 
                 StyleBox["619", {}, StripOnInput -> False]], Annotation[#, 
                 Style[619, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.38, 0.}, {1.385, 256}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 256]& , 
                  TagBoxNote -> "256"], 
                 StyleBox["256", {}, StripOnInput -> False]], Annotation[#, 
                 Style[256, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.385, 0.}, {1.39, 41}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 41]& , 
                  TagBoxNote -> "41"], 
                 StyleBox["41", {}, StripOnInput -> False]], Annotation[#, 
                 Style[41, {}], 
                 "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
        Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0.9309999999999999, 0.}, BaseStyle -> (FontSize -> 16),
         FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotLabel -> FormBox[
          RowBox[{"\"Entrop\[IAcute]as\"", " ", "\"Nikkei 225\""}], 
          TraditionalForm], PlotRange -> {{0.94, 1.39}, {All, All}}, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"Mercado eficiente\"", "\"Datos reales\""}, 
         "SwatchLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.69342]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.69342]]], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.69342`", "]"}]}], "]"}], "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                  RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
G8nyDbKRpxnjmUbNEJ9I68j6j2awb1bO5vh9t35z5otWN2e8cKk548NsLRjP
1CWrK1rQ/77QgvF35pbMF9VuiXybvrQl869nKRcztkL+NlSjFdpr/cjOKZ/X
Zhr8c/fWYX3ftcL8Uqu2pn/YuzX8Ie84WXrdGvdT0qj+/ijVqLkuXljfnmR3
rs/ehApz+/8vv/lSRT5ZS9UG7HRrg/yrMLsN8qPyoTbIjxrJ2zJ/XK4t8p3S
DMqVA2QrSTvm40uTxT99Llz4cJFaa8P67qXcjPQ5cL4llGwPudy+PcbL2EW5
/bA950OxDmClTQfqu70D8svu/Q7cXwt35P7aqiP0d7Z0hH8u3O3IeLzAn5y/
zf9kvnMTWbr1J+aPnq8T/cEmnegPbqA8dL0T/B8zd2fmOxt2hj8kryWrVzoz
PsjRhfarXhf6V6vI+kWym7Ur7ZdC1pZ3xe+Z57syf5y5G/OztcjGkm7U9wxZ
kroj/lGqd8f8shZ153w92R3zPZSuB+RalR60B/N7YD4Kx3vQHvzRk/agYk/s
794csnSErKfU6A9E+JzrSGTCVdXC+nbV6A/YGvZH7SnZKdsL+6XQuRfmpzyd
bET1Yn4ucW/6rx3JitEb46vv6c35kLAP8/Ul+mD+a/+QzZ1k50Ef5muL9uX5
gtqX+dptfaGfd68v9ispXj/m61v2w3yxxvdjvvYOORSnP+aTJpOdMf1hf4RN
/WFv1J8HgI28A2CP7cYDcL4kradcuTaA9izXQNh/twFZHDGQ+9tlsvnvQM7n
eoOeROyZGhrvdg/399BB1H8l2f5C9rIMxvXKoMGMH5YNZn7sHFnMNATxQ6gm
2TTJzukhuF7OMBTxlFptKOOdPkM5P06QpTdkvfIwzC9LGwa5eGwY7h96RdZS
Dwc73YfT/5kzHPNTfT6c/lqKEczndyFLM0cwnx9DtpLqYLGTjutD03T6a/so
d8SRsAdCqZHoD3XKSJ7v7R6J9eD9PgosFSfrk0bRX98xiv56gtHM1xQhm3+R
na2jkQ+Sfx2D+EMtOAb5SXucz2+6vp9Q6KewvhZZiT0WrOf3Odnf/RMUqxFe
b6N9liNPKKHw/cSNPhfOGX/C8+j/4ikt1rgnEQOv3Ty2J5wvMfP4PKvPwV/u
Zg7358hx8O/kdePo7/wg2znHs/5g+HjEY8rq8YzXLo1Hf7jZJoDFuhMYr60g
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
aTvlyv2hWF9WoWHw18QJw3j+tYVyM85wnn/Jw6nf2OHwr9RNw7F+7J9HQO7l
JSujRvA88RrZFXTG/w3J2gid50eXycJ3slpvJPtzKNlzyNLXkYyv64ziedeg
UZCL58laptHoD7PmaOZTloxm/HJmNOa3kWEM9j+72hjmVxeNQXypnPR5abK3
oZr/q79IOxbsVh6L8//QfLJ2zOdgfXTqcVF4/6GHzwnvjjBi/+99/zlk+znZ
SzE+Kvj9BaUrWZ85Hvq7MeMZbyebwPxvJ7I5bQL8ZSFqAs6T5MR/0b/q8Bfy
l/aUv+AvS4//gn+jJPyb+dS2f0PuTiKHHrC9lmAi7u+0ngh/XvibLG+biPMo
49dJON+wC/q8KHnxcvtnhP3X8WRls88r30R9G9k77G/H/sfvz+jr89vfC/uD
+X1OO27/rXHfwv72mH/w+9pGsnmDLOSdzP5tPBnndca6ycyvXmV7KdcUsNKA
bK0mu5emwN8OZTeigvWBWl2fg+9zDDGwfwmOgf1K/mJgPzRqT4XcHjgV9TLS
ObLycSrrcWpMA7v9pnE/PU3W3k3DfuFUnQ4W+kzH/qKeIBuvyV6lGYgnJW0G
8iX60RmwH9bLGfC3xQozwdpsnwPfzzQPzcT1zjOfg9+TDc0Cq11m0V4dIHvR
bK+UmQ3W/yS7e2dz/39C1krO4f7ffg7zg7vncP9/NIf5y2Jzuf+3mUv7v2Mu
64lcslV4Huy922oe8y1b53G/usv2ToH5zLe0mM96Eots3CJ7+RawnqQpWd9A
tq4vYP1LnoXc/xuRNX0h63WukIUfZLX+IvbvMLK9ahH79xtZybaY/Tt4Mft3
+WLsp6HPi5nPymzifmYtk/vtUpP1RmfJhrSE+lYnS4uXwB9XTpGtdEvh77pV
yGLvpVi/2nGy6S3F/idUWobr5Z7LmD+eu4z54xfLmD9OuZznGd2W09+etZz+
1lOymHwF53O5Fezf6St4vrF/BfxfOclKxANq6ZXwh21jJfrP20OWIlcy/i6x
ivFsu1X0v3ator/4cBXyd2bR1Yy/VbK8nazeX43r7UJrmD9uuYb1OxPW0P7e
WQN7ZcVZi/ESm5NDY9di/MybZOfnddS3yTrGs6PWQV9jPdt7wnrmN3Kvx/31
EWRrDduL39dzPuTYwHzB0A3Mx6zcwHz9RbKadSPYqLOR9YjLNuL3pPNkPdMm
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
si5W5fpqTxanVEX8qD2qivVn/l6N8XfbaswXTKpG/8mtxv0ofnWw1Jqs/EW2
7lZH/7lxa0AealED+5M2rgbzGbd8Dr6/E7sm/DM5P9kYXRP+mr2BLMWqBVby
1KI/rdeivmtrcb//UQu/p+Wsjfs5w8jCarJ8qTbiBSNbHbCtkKUVZOVCHcQL
VmYFcreWgv4KLSVrZ9nekeqChRp1qW+/uuzfU3Xp/7+ti/UnVa2H+a/0JusL
6qE/Xa8e/CUxTX3ItZ5kc259jI/wsj7XW6oG9K/Lk+1ZDdDes8lK8obUtxzZ
nd4Q61U80BDrJxTdkPtZ6UZgp2MjPK+8txHmuxpJtks0Rv977Rpzf5tM1h82
hr7Wb02ob5smnM8TyeZ9shOvKVgo3BTzRZ1ANrY0xXzz4jTD80oFmjE/M5Zs
bSK7N5vBXobyNYd/pTUhO+ub07+53pz5gtwt0D9GQ7I9ogXzBVdaIF5Svrdg
vFWvJdgdSg5dbMn48GtL3M+p04rx7OBWzNeebwX7aHxqBX/Iq9k6Ovj3uaUB
reHv6mcot97/n/z/n8+J1VXY+1BfFb+vLSI7b1TMTyFdG8xPtVcbzof5ZO8V
WfqjLfIjeo+2zN/PIYsvyKGU7TA/zK7t4A87MymXn7bDfFGTtYd/bnfyOfh+
0jSfg+8nRZH1xB3AbocOuF40yNpjspmwI1ho15H52386Qn/jQUesRzvBn9zf
VLK+jWzd+xPXi4U60d9t2Qn2zNzcifH37U4Yf1nuTPvVrDPWu72xM+ObG53x
+0reLswPNCa768jiNbKWqyvYbNCV+ZfhXbG+5MtkI3s3+ud1ydLKbjy/c7ox
X5ilO+1VbXJoWXfGO+e6M7+ZsQfGW6jZA3LVJNvvejD/nb4n9evTk/mhhT3p
377uCXskptWig+8/apqG/JxzVGP+6pXG9V6hF/rf6E72DpGl571o/0O92X8z
ejM/f5CsJe0DNsv0oT2a1gfzS95HNsS+zA+3J0tTyPqjvhzv3/tx/bTth98P
TeqH+WO6/dh/Rfqjf+XW/Zn/29qf+9FdyqWCA8BKC7JlDUC8KMYeCA7lJ5uj
ByK+cjZQLscahPureQbRn9IHwb54awfRX/0xiPY952Dkv91hg9FeXE3Wvg2G
v2tmG0J/dcgQxgMrKFcvkO3MQ7kf1SIrS8n62aHYb1xpGPejGsPwfNriYbje
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
2yF728jKc7Jerh7YfVuwlB8JttTD9bUnbG+WqU//cFJ9xF/Rh2TjYX3EY3bJ
Bgn8r3C8YPl/hRsEy98Lu0d2tYbwt+IxDXE+bZ1gqZ7WuU32izRKyPXH6ijB
8v/I3id7MTks2DhR7+yRqdlLfZvMt40QLOfb3qU8uCa4YeryWX7wkv3N1yQh
5+vMoYKlfJ7zDjlKkNU8TcH2YLK3nKxcbQp/X8/5BtgdILhZ7RXT9ybju8AV
LK3HaVfITo1miFf8vs0gV78mG5cES/lQr2pzyEOLrCxojnjF+qM5/B83Uwv4
o3GPFvA/tbktMP85v7egf5i+JVjtRjZmtcR85J0jh2laMV/VuRXyLdZ0cnCa
HCutwWaH1oh3nank6ARZfdYa9tdua8I+hZvJyq8m7LNVug3j7dZtkH+MN1Ku
HSM7JdrS/o9ri+ehrm+L+cu+2xb+ilesHf3rMe3QXv+gHd6ne4scFG6P96+N
JJvvCZbWx/wb5KhAB7AxvAPj7dXk8L8OjLfzdUQ8bL3ZEfN7sK8j8wH/ks06
nXC8M6gTjo/2dmK89U8nXN9+vTPY698Z+qLs6Yzz65fJbvUuzK/1IWtfkc0/
u9DeV+nK/F+vrri+sbMr/An7Ijms1I3+Sg+ytaMb/A/3t26YT4J03XE9rWt3
2AdzZnfEQ/7Z7ojXotQ9GL926sHxOq0H8hvex2RF6Yn5XS9PdqeQg4964vza
U7JZthfet9OGHG3qxfx62Av6YJeyGH+3smD/lI0W81k/k6375KB5b8azY3vj
fOYRsnOnN/Q7atqH+evRZGNtH8bfN/vAHoaF+rK/tmD5/9VryMF1to/z90P/
zWH9EE84q/pxPSCFrObtD7aHkL0VZOXf/ji/nmsA2B04gPnMpWTtb7KpDsT5
/X5kdTfZ+Gsgn2e1QYy/epP1XYMQv1kR2c08mPmXnmRt3mDGixfIfoYhjBe7
D2H+ZfYQ9vf8EIynMO2bnF+7vIn4x5pBDs6Q41RDqV8dh0LuOEO53nKSrD4f
iv7Z7YYxvn17GPNZx4eh//qTYRjvrjmc+eJJw3G89gvl5sPh6L/fcgTscTSe
rG4YgfnDvjcC9sPTbLRXxtqQ6+vI7m2b+a0iIzmfNRkJe2i+PxL5DOfQSMQz
UcFRYLXRKNh3+12y9/0ozhfXBEvr03r90ZgPrKGC5f/7BJTHidGYr8y6YxiP
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
Yz5Qmp1hvemYM5hP3MNnsN4X3CJrTc6CzZFk/yA5unGW9TgNz3E9dvg5rm8e
OMf9ZNfIer7z3P/05nnW56w8j/lNS5xnfWzu37i+Oeg39ncZ2fiHbOf4nfvJ
+v+O9UTF/Z3r8ZfJbrYLXN/uc4HPd9EF1Nc6f7K9n+Ui652si7hfY/5FzPfe
xYsY32HGP+iP9PgDz9ea8wfX439j+zhdxHrHrhHrd2dG1K+zEf2RNH+C7U5k
bxpZOS1Y2i+tK5fAbvtL0O9gyiXor3aCbD69xPriNn9xfeWtv+iPhn/B/7Ef
/cX8dKvLrCeaeJn56Z8vMz99nxw3v0L/edwVnM85cgX+hn/nCuufiv7N9cHR
ZHstObxJVgr/w/7a/7Aeeg05vv4P4+0CV/F8nWFkf9VV2Oto/1XWv+b9F/Gy
bfyLetVwxb+wf8o+spUrgfZubXIwMMF4e2+C9dB/J9jfmimsf+2Xwnr+3SmY
/+y/yN4L/7F+q89/OJ++8D/Mv25EDjJfA2u9rmE93JxHufPFNVw/ynCd9fKV
rqM/9uzrjK/866zXTHeD620Vb6D+1OpyA/FssJ0cn7mB85kVYsSfTseY+c1t
MfqnnopxP8bzGPfrtbtJf+btmxhf+nGy9YTtA/MWxl886Rbej7bpFp/vw1s4
n1/yNuyNOuE27JGxgezdY/tQu4PxqY+9Q/9r3R36X7fJcZG7YHPUXeSnnPfJ
UXwX51cL3WO9xgiy9+495me/v8f9fvnv017Uv8/6knfIcXCf+aI8D8BO3Qe0
v8sfcDx894D1hzkfMl9U6yHyPcrShxiP+jds72Z/hPMFNcja4kfIN5tfP0K+
ws/6GBxVfYzjjQWPWb/z5WPWZ2R6wvXX156gvsya+wT1Y+7n5Dj9U9abvUp2
Zj3F+aJzT/n9gbTPuF7YmexNf8Z87Jln3N+b6jnrjTs8x/HB1Of0b08+R77a
fEa531ZJQX5zsmApn2n8KljeL/9YsPw8W6dKgb84SbBUH6N/SLn7QLDsz7RI
jetp4wVL/XOOkv27guX/0TRLk4L3P0awZE+8w4Kl77OGtwTL+eImaSG3RgqW
/697kKwVTJci5+vMhoKl/XH+asHy/rkDZCNf+hT8n7KeYOl/mOFKwfL6a0Kw
tF/cyp0hRf6/ZjBIsLx/dhnl5j8ZcLyTIyPOH/XPiP4YewRL6yf2ZcHS+kpY
PRNY6Sv4leKpB024/3/jZesrwXuLJt5LbSXzFX8KnlD63OEFTZL9q5I5Rd7/
a84nOzszo/9Rxiwp8vfv1MqCj91o9Pnz58n+zREsfT/O2yFY+v6ckj4r5FZX
sjtTcOf9M3s+W5fs31myluYFsNNJ8PW9j2vOWZN839PI6ukXcH67fDb0x2uf
jc9vK+X6CcHS9/HcstnFeL3w25z2o5Pvu012PB9tM9kMBUvrXX4pFRy1UvH8
jI1k+2fB0vp5WDxHiry+rbQQLH8PwSO7R8jBHbL2Rk6wOZrs/yhY/v7lTcFy
PVvjXGDbFizvP11DVm7kgv7qBXJD7g4TLH3fMViVG/qh/Zcb+mHmzZOC9UJD
sLSfNlqRB+3VfXmg/3auvGCvtmB/zJwGNa8kx8MyyvW9ZOtvwap/0P9zfXI8
1MwHjvsJlvYXm7spd/4iR9Xyp9S71W3e7raHkuO3T37I7V2UexFZqVIA96/3
KoDn435BDi4UwPjSKhXE+DK7k32fHJ0viOONioVwfrtLIdivcHsh9E85Wwjv
x6pQGHK3Y2HI422Ua6fITrkiYL8dWf1IsLSebBwXLK0ne2WKgkOTrG8qivFr
/UIOShbDeNYmCJb2Z5sbimE8+/cES/5ApGnUr7Ea5PY6DfNteJusFC0OtkYJ
luPX9wXL9eQxWStUAv6FM6IE5P67guXvH19neyN/SbA3lBy+I1jKd+kplFt5
SqVgv8ZgcrycrH0nWMoXOTlLg/1aZHWpYLle/xuyl70MOKxRBtdT+pGtr8nu
pTK4Xly1LPvbuyyf75dl4W/5fwiW8glRphfhnxk9X6T/N5cc/k5WMpSDf2h1
Eyz/z3MWOfisHPxFLW15HG++Uh7986eTo0/IRqqXUpCPfYnsdXgJ/q6yjayf
FCzvP36xAjhoW4H6tkWwvJ/3V7LzuAL8zaj1yyn4ftokwVI8aR8jew/YXmn5
Skq9VmX7jrifzAfo4wXL/0daL1hafwjuCpb228bFKornf3TeguJbkvPDmIqQ
Ox8I7pm3bsacl5Lzwy3B0v931CK6mJ+LfFNj2Yzk/DBSsLT+4b0nWF5/iQXX
bFTxh5+KJvtb8FXcjzv8VfQ/WC1Yyrdo1yg381XC8/XfFCzv714pWF7vSJDt
3JVT5PxAOKgyxruyXLC8PvxPZepbjtdoH/qTNVewvJ/rMuV+tipgtW8V2rNF
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
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxU3Xf4ztb/+PHUqlGkVtWM0Wq1iL3J26Zo7M1tb2JvYm9ilNKW2FtjVG2x
N7e9uY33Qom9+Z2vfK7rl6d/XI/rJLnP+9wnZ7zOSe4cbXrWbZ9AkqQmGSXp
//4X/+Tpy6Kjzr+udmn0juflhbVtwk/f5qo9cM5nG3eF3Qzpf27ofradcnl0
1PZ5FWc+vPHZ4eLCCxqMuZu4xIv/c2iL8J3jHfSYQp9tRWg3+YroqAr/Tk1Y
bcRne0VopRXt3KDlQiujo6TdQ9UzHT5bay5cqUirvza0/mxj3EocLyVeFR2V
7cfYmhv6frZagA41oa3RtLuO1n9eHR31tuqei3eWfrbZkHZM4Qrly/22ZMdn
R1YLJ1lcp+Ddh37+LwhP0ioua5Pw5efyrLcmOqpa1UJnH9z/nB4eRksrhSV9
U9qfzvv5Pyt879iqYvY1P//vaW/w2uioSK3LfxZ745fnsrU4Xz9Nm29oJ9e6
6KiMf29tvG+DX76LhWv82X9KxsV++Z4QPlSo7/5fJ362/VK4UNleVUce8POv
rI+OGlzES1zBz491dD3Kx33GdC/r37BS7W9cT+8tPHzD3oVrdvnl6dFyZgfW
Kgtv/C289+QsP789aXueg79HzbgBDlUQXj2++qe1ffz8dxOeHXNu7F8F/PzP
+b/jy84etdOv754r3DjD5sSzvc/3g1l+I+x0Fr45Ysup5sn8/M9iurxbuETt
JEW0+f79Fyes568VU76tf3912BQd9ejRrcL33jz7XB9mCHsH68/rW+RzurpD
ePnrXzdlG/LZoWjh5EWmKYeKf7aVerP4e5yEB6ev+GxlmnCnhEXG75302fpW
4SI/Jp/wMM7P71f/REep0Yd1rbif32LCvWfOnZaqvv/9JtsCS0W2oHzVlltQ
nu514SJF9hWttdovryT/Il0pSOvNhK0EWs6cQ/z6OZbpcqKt+Dwtv3Cn6imr
Rw7633dj2h5Fh9cKf/9n2RRpVvnf90/bYKuBsBEnjfnU38//COHtM7Txke5+
/lcJHyu7aWb1YX7+zwunm9Q/RfFf/Pun7nZRnzP22HPuf+U3VLjIhIczqtX1
879CeE6fPYlu5PLzf4Y23m1n+Q7egc9Xl+5g/k/R1mvazbkT1hcJJ5nfZnbW
U375Ht+J+8d5sRPlG8m+C+fLNWj7iHCNvPf2rtzkl+9TpktZdyNdrbqb+e+1
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
YKYvhvrglC+Gvy/SmTbiaDtNcThcpjjmb1LH4ri+OoPpbuoSsFdSODi/bcd0
fVoJ5n8rLRcvifGR1rok0o3JJXE9+x/hvPGNJudr4ef/Fh1qWQq2JgjL1e58
ne1bP/8bhQP7SbzrpVDeypelOX4ZK/zVvLJNmrTxy/fv0hj/yFdpLVEZ3D9G
/jKsH+vKoL6pl4QD8ZjQF2WRbv1UFvXPbUDr54UfFol/dHy7X74fy+J+c34o
x/uzLi0PEw7E1+13wsH1pe/KxwTjx5JOq4PLo76HlgoH99Pl1GKC8Willobz
9QFMNxfRznFhxW204mCUX741ojDeM/pGYTxoLxAOrBeGj0RhPiY9o61eFTDf
cv8QDqxHegcrYP6leLSeqSIc+b0i5ufyfuHVm82dTdt8tvYfbUdVwvGqWwmf
H7pfCeM7K11lpLvlKuN8M1b4Tp8BW7t7/vz76yoxUSVufNw3PdaPD5Sm5Q5V
cLxmMT2cqiquL5WsynhBW+Hg+vLUqpi/W//SeqgabE4Snj39TN/16fz8bha+
Pm31jgKJ/PzepI0W1WF7PB3eQEvXaTVJDVHfoz8OLzLgc3zEHUN762nlinCN
K6n6F+n52XrCX2Az3y+4vrxWeHO69HuqJfXL8yJtSDWZ3/o1EY8JnauJ+mF9
qInyd/PUwvfl1aGVobTzlo7krg3Lv9LaoNr4PGMJ06Wcv8JqTeEeivcoZR6/
ftq0e4zWq+uw2Uf4zzyby5s5/fnDX3TksM78PqVtow4cnl8H50sHhRP06fni
dDp/vvOYDn1bF8d7c+sif8o+pusP6yLeYmaoFxPcv+No9XB9bY/w5fWL08V+
8Msznul22vo4P1y2PtKtmPr4fFduwO+/VAPcr0p7puvTaa1NQ9iYQttbaLVo
IzjUirYm0u6mRsiPd0P46bq4UUMa+vVxXGM44ghvlkZL3ZL73+814UL/bSpw
XPPzm7gJHB4tfGjxr/0OXfDr43rhGluyVem40M/vZeHvHxl901b385ugKWz9
3JTxyzXC7urLw9ds8svrAtPNT0x3fmwGR+oJt9mz4Xj1jn55nqXt93T4++a4
vlSnOeKT6hDafdMc83kvVwvEA5TaLTD/1gfS5uIWmK/LOVrifO0X2uhH2wtb
Mt5xtCXm86FqrTC+tXq3wvze/VN4dc7BCbu38scDh2jlifDidM+0mn480ekZ
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
SUzXNtPhQltxvNRiK+ZH6vitnD9c28r5TdNtvP/HbMP55vpt+Dzn8jaWb4Lt
SDdG0vaa7fi+wheYLkk7YDXvDq53rdzBeOFZWvmwA3+PnmcnysOss5P7+8I7
MR7U3u7EeM/IvQu2a+9CexseuIvx+hy7ef//shuf5/WjFXs357d/7WH5Hd7D
789wkd/QfBf7Y6wDLp5HcB+56G/17nvR3phz96I9c/buZfvzgJYz7MPx9mw6
vJuW4vehfqhp9/P+Kbuf9/MOWonZj/tflw9wfljqAPPfjunaXdpIeZDz2+IH
Ob9tfRDzM2nKQa5fFDmE/shreQjzR2XiIcTP9U2HuD5Y8DDXi5vT2rjD7D+d
w4wHX6XVJkcY3xh9BPXFWneE+2Mv0d4XR3l/m0dRf53VR5n/80e5H+8Trf14
DO1heMUx7mc7ewz5Vd8f43rB98cRL7V0WjlNm7lOcL2o1gmuDww4wfj1S6bb
yknGW2ucZHyg30nGNxaexN/nZj3F/XdVT3H+1fsU+9M/T3H/w6FTqF9y5dMo
f60nbcw7zXjXfjr832nEH0Pdwti/bc0J8/kdN4x4nnefVtKf4f74WWfwfUZ2
ncH4T45jupbmLOLFRpmziAeo0XQo9TmOl+7Q5lfn2V8WO4/yj4TOMz+TaTvZ
Ba63FaallhcwHlYnXGB8eCPtqRfRnirNaH3sRfx95t+0c4XHa40vwcaoS2g/
7bWXMF8PX6SlLy6j/lkjaHfVZba35y6jPiofL7O9/eEK4+/LafkMrb27wvX7
764yHvfrVbZfp66y/XpNWzmvMT5b8xrWr7z+TDdfXGO8MPt1jqeq03Lf62y/
FjA9nOUG1zOq3sD3o/aiQ3/cQP9rHbyB9lapdBPxMb3HTT6/9zvt7KMjD4UD
76M0ut6C7d/o8J5bOF+6fwv7Z92ZEYwfvJ0RHK/ERpjfr28jfmKWvo34iLyd
1u7dxvWMVHcQP7NL0OE2d1B+odt3GP9KcRfHu0Vpr9VdnK9MYrqT9B7Gc5FC
tNziHuJ/2njhwPugjA3CjTNsTjzbXy8RDRj2L6tNo3G90JhoXM9aT7uXhRPE
5Xg9X/fLt1EMbI6knTUxOD9yQfjmiC2nmv/v9z+k2Ngo+6xes9b/nqcZLvzD
jy/PlJX88l0pnKR1Nen+Kj//55iufqBDeeJwPW9ZHNKVcByup79lupk7HnZq
09rJeJSn8Soe+6ntHPfh8C/CJWonKaLN9/PfX1hqUn//ov/9fmy2B7BXTThn
jgS/vQj7+2H7CAd+707/6wGeT41kfsjnpao8RLpmPOTzlvNp+8BDPJ8Z6v4f
0q25tLuX9h4IV0qQN8UB248fdnmEdGf2IzwPGdn9CM+LyvFM19I+xvOS0k5a
jXmM58tCsofny6xStLKN1u96fL4r5ROkO8XpSOsnfF4u8gTjDTv5UxwfLkJL
rZ7i89SJtPvlM9gr+AzP2ynNn2E9Ux9Hm84z7E+WCzxHutbkOdKN0cKB9+3b
6+hQwxewZb7g/ufVL7D/2Tv/Av258ol2hr1E/DyyQjjwPkL5LNO19y8Zj/n+
FY6Xlr3i/unTr5Cf0JtXzH+u14gXu7Vo/QRtvnyN+LOjvGH+a7xButzvDeLN
4axv0b9K1d5iPqr2fov+OfQn7ex/h/GPVuE90o1u7xmfmPMe47Ow+x79ifTg
Pfozd9YHpHu7PmB8qMR94H7RNB/hiPWRz9/s+Mj14mjaSP2J8dSSnzif2kqH
7tDWV1Ic4lPFhIPxiZBw8PdIbwkH32ed7Is4vB++sHDwfX8thYPrXxOEA/tz
pIIJYLWZcHD/zVjh4P7cv2klf0IcrzcWDszHzVHCwXjAWqZHLgoH198bJML1
7BGJcHx4lXBgfi+dp9WPwsH14qGJ4xCfWp4Y6coZWn8nHPx9g++SxOH3k5fS
2inh4H7418LB3yfN+WUc4ms1hYP7B47T1osv8f272ZPCSl/aeSocqE+RLMni
MN+qmgz503olQ/6MP4SD75vJlBxWKwkHn9/oIRy4X63faXcfrUeliMPzhV2F
g8/P/5YCf09kDy3fT4H6b3f6Kg7v/5wpHBgPSruEg+vFsXTo65SwN104+Pvl
21PiftDvCQfft5oqFeq/U4I2btN2itRwuCjtJpVhr5CM+q+0EA7Mf/XxdCTx
17h/ZPVrpGtNmW6Moe31X+P+UvOlQX5CjWhrZBrcb+4a2rsgHIwH1U+L+ucM
pyMr06L+yufS4vvXPtDhIelgablwMH4RpkNv0/H+yp0+Dv3BElo/SZuv0qM8
nRwZ8P1EfqGNYxlQnvbzDGh/wtm+iUM8szqt9qHdJ8LB/fGZM8JKFVo3aHN+
Rny+/O23sFbxWxxvdP8W7Z89Vzi4nrWXDmmZYKsL7c7OhPbP250J7YsSnwnt
g9MxMxyZkRnfn7yT1mJoQ86Cz5Om0+q2LOiPQneFg/shU2aNw36O4rS+hTYj
woH5sJM8Wxx+D7KIcOB9wnIr2r4h7C5ds0294c+nvsweF5xfSYVotblwYD4S
GiccnF8lUnC8UkB4tZPw4HT/9zH1JsKB52nN0cKB522ddUzXfs4BGw2FA8/b
2qZw8P0Qq4WD+yMvCAffV1QvJ9LdYbS3IifGN8pZ4eB+yfc5Od4ZnCsuGD+R
l9Haadp4kwvlbefKzfJdTIdO0NZL4eDvsyvfxQXny14N4cD81nnG9EjW73G+
XI3Wen+P46XMeWC1ch4cH+qZB9+HNS8Pv/+MP8B6hR9QX8xuwlvDi3+46P9+
rzNHOG/DU4k2+u8XirjC1zccW7DUf5+QUf5H8feVGlrSqOGXX+cfkR6eJVyz
393VJf71n5fdzXQ1Tvj+9XdlliX1y8vKGxecnys7hAPzZz1aOPC8tJn6J6TL
04QDz1trW4WD76e6Q9tf/RwXfF9UuJhw4Pd6Q/8IB943Zd0SrvQmyekHnfzn
jZPlg73CtNIyH64XSZIf6XLB/Li+1kw48L4rYywtJSoQF3w/lppfOPi8fGOm
W6OEA+/bctfS+k9qXNQPsf0f7Cjil2cD2hkhPPC7K0cmV/W//1W0fF448PvO
dt2CccHffw4PpaUVBXG8eqYgrhd6R3uDCsVF7cx2/48EIb8+LKX1U7T5Wjiw
X8vJWTguuJ9KWyQcWG81jtP2i8Joz8PZi8BSjSLoL6wjtPuU9rIUhZWqRdH/
6L2Kon+UMxVDf6tVoo0etP17MYyf1G+Kw2a5EpifOJ3oyMwSmO/Iu4QD63Fa
LC1ZJWF1Ox26Jxx8HidVKViZWgrH6/+Wwuebt0th/OGkKA1HitLGZtq+WRrj
pXDSMhxfFS6D49UWtHuN9hKX5fhKLYvxkt60LMbP5hhaTliO4+1G5TifHUmH
19ChvOUx3rTq0+7w8pjfeytp5Vx5zPedOhrnC0NoebmG/GphDeNX463G+fag
KMwH1CV06CRtvaLdHBXwebpdAeM38xjtPK+A+WokW0VYrl4R40X7cEWML8NP
aClLpTjsH6oiHNjf5D1iuvJtZZyvV6yM+9nsXhnzXWduZcw/tAxVMJ8wtCr4
++wuVdBehGdXQX2T9tBW2aooP7cj7c2glZ20HlOV9aFdNc63p1fj/HEbbdyl
7ZTVcb46pTrGa6EttBURDu6HSV4jDr+HWKQGxsfmphoYv0W+/AXHy4WEA+/H
05oLB/b3SolrxuH3BQvURHqoSU30H9Zo4SJ7Uhce1cPvfxLUEv3J62qXRu/w
+5+fabOhcGD/sGPSkdW10L8aP9ZG/2XXq43PDw8TDryPWlopnGDGPn3dcz//
Z4UD76929V9hbzCtLKP108Klnp+60N8vT/MNLQ/Ucby2WDi43/yEcGA/uP2S
Dit14NBC4eB+86N1EE9yn9Fe1rpx+D23asLBePWhushPxGO6nLke+//KwoH1
T6NnPcx3pEe0mrE+5juhCvU5/u9WH+Ntdw6tp2+A+ZBZnnY6CwfftzqL6fJu
4cD6iF2mYVxwPSjcQTjwPlBpBtPVHcKB30MLRQsH1mu8to0wH1OmNUI8Tt9K
m3eEg/tNvmqM9tb4pzHS7Vt0OFmTuOD6hVREOPj+mY3CgecB3OvCgfUNL0lT
WClI682aMl5wpSnaYzlRM9Q/Lb9w8Pe1G9P2KFr9ojkc+om2GjTH9d0RTPdW
0eYPLXC8U1c4uL9/KNPlFS0Qn9DOtMDfF/61JY6XBgsH1pPUpS3Rf4VOtUR5
Wa9b4vtWBrRifVjUCuVtHm+F7895wfRI9hDuZ2NBCPezfYTp4ach9s9ZWyN/
atXWrA+PaSVTG1xPr9QG1zN7tEF/Lf/XBv27EdUW43G7Kx3+rS3G36F07Rjv
KteO8bpO7TgfmEkru2indHuMByLt22M8L1u0tp3HG/fas/+d2gHjjdC/HdDf
Wrc7oD92U3REvEWfRJubOyLe4tzsiOtFknaKw/MdhWl7Ax2+JhzY/yEl6Yx0
VRUOvr+mKa0k7ML1pny02agLjndGdkF5aFJXjM+MvF0x37Pr0+HhXXG/Sau6
8v7J0w33i1unG+4Pb0g3tOfK8m5oj/UwLQ/qHhdcL9eWdEf/YJzsjniZ/YpW
+/dAfkJ2D8bfjvVg/O15D6yveNl6It38qyfSncNMjzzpifoiZzHisD+jCh0+
IBzYzyE9NvD3q9/2gkMVe6E8rO690H8qD2lT683+tktv5nc2baTtw/Is2wf5
c0v1ZXyyXV/cP8r0vph/6duEA/uNzLt9sV6lTemH440t/XD/2hE6nLw/x9MT
+/N+3tQf9dm9QXtfDkB9VgoNQLrjDMD9Ebk6APeTnHggrBUYyPWuJrR0mVYT
DML8MfQzbTUcxPVak9Y/0eaPg+HIsMFcn11J298PgcP6ELSn0hBaXTYE86XQ
aaZ7tYbCykBaXzwU81PzBO28pLV+w9A/GQuHob2xjw5D/x5+Ngz9nZRtOPpX
68/hGE+4h4Zj/OB5w9FfKZlHML5ReQTX5/aPYHzjEa1lNHG+UYG2u5lYD1Qf
mIwXpB+JeINVfiTnt51Hor/zZo3k+lyaUeg/nDJ0pMMo9DfyjFG4f7Qdo3B/
hUuOjgu+j0FqR6vTRmP8Edo6mv3BndEY/yqtxyBdnzwG42HzH9q5RUeSjYWN
CWPx+fZGOnx9LOvHl+NgteA4jlf/HofxkHeFVhKNZ7yj8Xh+vw0m4H4Mj6BD
H2nrh4m83+tORLzQG0orK2jnu0lw5NdJjGcOprWlk3D/G6doqdZkWB0wGfU1
tGgy26vjtPuC1vtOYXu1QDjw/h/nCNMjT6fgfDnrVK4f/0GHD05lPM6j1UzT
2N5Wor190/D3Kf9NY3zom+lcv4+aznhyV1q7TxvpLMary1lc/+5k4e+XZjHd
+noG7Jamvfa0YtH69hn4/EiJmbDcdibqszZ1JtpD49+ZqP/2bVoNzcL5oUm0
tXkW839zFss/6WzY2TCb+6GuzeZ6fZLfuF6v/sZ493paukKrCedwvT7fHOa3
EdOVi3Pw9+rSXNjMOxfXd+ozPTJ8Lvov48NcfJ6d53ccH65DS0Npdfnv3F+U
ex77g9q0Mmge11uWMN08OY/zq5rzWZ/7z0f9NOz5uB/sY0wPP5/P+63PH6zP
f/3B9YbDtPfkD5Z/lj+5HjL/T6RHDtDy4z9Zn7/9i/W54l+4nrSPVh/+xflt
hgVItzTa7bIAn2+mXYjvyylLyzMXYvxhyzbnV6Vs9MdSexv7KdTpdGibjf7d
K76I6x9tFnG/1BSmm1sWYTzuRJhuTFyM+a69iQ7foKWkS7Aeb41bgv1orkN7
V5dgfqAkXgrrBZZivBJZtxTlI19eivGKlmAZ5gvGz8vw99gNl+H66gU69InH
u/WWY/3IGyYceJ+8+X459s8536/A9SL6Cuynk4eswH46bRkdzrUS15dqr+T+
vYHCgecpQouFtb3Nn9qn/PngCeEpXf58MfKgPx/8ZZWY/36TYOCMr/38LqSd
o3TkGW30Xo3r23/S4UOrkR/pyWp8v2rmNSgPd94a1tf9a1C+yqM1jGdkXMt4
RoW1GC/Le9dy/P2A6Ub6ddivaJdfx/XGzkwPxa3jel2a9Wjv3DLr2d/OoJ3U
f6P9iZSk5XZ/o73QpjFdbe0wPjnZwXjV+od2bzmI/5sTNnB9YOMGxlOvb8D8
SP5yI65nj6XDf2/EeFq6upH7CxNt4nw8/ybEW7y1tHJpE87Xv9gcF3x+y/xJ
OPB8mNNgM+IX2nna+LiZ6wM//AOH69LSMOHA++Ssd8KB9+m4323B+of36xak
K4OFayZ/2OnJNn+9Iue/ccH3y8u1hLvUXvPN5VZ+vGeAcP11RRccyeyvtywS
Drz/3z4u/Nq60vtJE38/S42tcVFtrpXN9/LA598bCPUV/v6R0TdtdX8/ywKm
u0eExyx58LF6Zn//zVPa7LVNHD+2y9AqZz4f7/xBRw4Kl0pxYUSrC58te8JG
9MfhRQZ8tpZpOxz+nZb20+p/wm2yfad0+NPP/zc7YCuKVlxavy/cME+qI4mU
zzbT7US6U064R/oyAw9n9PcTdRKePf1M3/Xp/PL8eldcVNzYvWlnmP5+ptLC
m9Ol31Mtqb9/qIPw9WmrdxRI5Je3JVwqTdFvOsz2yzPVbqR7JXbjfKXtblxf
nyoc+D0I89/dyI9cbA/StRBtTKLtzcKzo5d+19L/vPBN4cDvX4RauLA13sX5
7gbau+aivilJ9qI+OmOEi3Tu//h2P78+rxcO/F6GfEV49YV5D8uV9utzwn1x
+L2QfLS0dh+OVy8Kn5/X4WSeuv76obQf6VZeWj8n/P74xMk5/P2Z8tADsP2W
Duc+iPxLvwoHfs9PHSQsVVo/a3lu//OXCAd/jyLHIdGevM1Ve+Ac//6uSev9
D6G9MO1DaA+cY4fQXmnVD8NGn8NYn7f/Ynr48GGOn54e5v4A4wjj6fNp78AR
xGOVx0fQ3unfHoUjc48ifizvo7WHR9m+ZjiGeLatHUM8WN1zjPHp+GNYf7XS
Hsf13bLHuf7akelmDO3IJ3C9SClabi8ceF5Qm870cMqTWP+VSpxkfL3NSXxe
aMpJ1Cdry0nsr1SKnsL+S73VKdxf5kThwO+/OJuYHrlxCvXRaH4atsfRYec0
6qt0jelq4jDsrQvj/lYu03qCM7D58xne72uEA78Po10QfroubtSQhn579Ym2
fzwr2kdptNQtud9e1RM+1PZ1xgRP/Pb/rHCb5iPmt3T89v+9cMukJf9oN8tv
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
4VzaTT+R8a7ytNJlIsZb+uyJHP/tpuWyk2Ct4ySOx2ZMwnzO3jEJ63nh6Ekc
37SbjHirNY12t9LenckYPykpp8DO5CmMz/4zhfmPTOF4MvlUpBtFpnI9dtNU
3F/qDTr05TTYKki7zaYxfphoOuzkpyONpzOePFo4+P6PLyyM76SGFsdjJh1a
bXE888MMrEcq9Wag/daHzUD7/v+quu/wna3/8eMxO1Wo0haVVtVqSVGrRtCq
qhGraqf2blCbir2qYteOUrMIWkqL2LMaexOjxv02YhSt4ne+7s91/c7zz8d1
kty5k5OTc15nxFkgLK0f7u8X3ru1as6eyfXADXM8bPcRbjv0dPvs55Lv33nC
8ba6U79Ojn8O9wnfuHG26MVkvEb5ZzziUcGcCYgPxXto7d4ExLdMbSIczZqI
/iZ1l/ClfRV6vdchWZ+5I7zuWt3NMyol3785J8HeJ7S+fRL6k6xYWJrP4b4+
GQ4+ouPOwqlzZr6S+pNkf1K2KaL+UyldxWxXbj093wrCqf9tmDd7k6dWO075
v+el1OcVyz21MVm4+cj0GfOsi59evyzfi/+7/ETBlvHNp9evvHCZK8M7dmx9
4+n5thNu2/tEjoFZn9qawHR3PffXykxFutl6KtIdl/bX0dFF4dulJ6SZ98rT
8/PGTBP1scx3szRf8PR44RrhajO3t/jx+FMr52n9xelwMGo69o9/Zrp2lunm
czN4vkWF2zbd3WNBrafp6soZOD/jlPBbqcucnVXwqe30M8X226/ey305ef46
HTakreO0m2aWKC8yTrnSdvDT+xW8J7yv7cgT7Z9J3v/6tDZIOMfNl6JaLyTz
gzL7aoWF9zoPdRom73892hhA24uEq3a7mL/q7qdW8nlXK/x3renbLbY/tV6b
NmvOuVoh69R1BbrnS8437U37c+noD2Fp/qz6gA69H1j/3yNccsf4KqtyJ5+X
v2kr19yrFWq0fXbz5uR8zngmre2ci/q7eZt2csxj/b8ybWyj7ZvC8vyc136E
w0q00pl2rwmf79bz105xsjzKOh+Ojfk8/w7zef6TmB69vAD7q+Voezzt/b6A
/e0fLoStVrQ7diHq/8FaOr5AO80Xof3gf7sI/fnR6kUYn6GeW4T2gvHCYjgc
uZjt658Xc7zDmcXoL7KeXcLxFkVobcUS9m+fXILxGk66n5DuF6ajBsLyfPRj
tJd6Kc//3aX4/0p9OniyFNc7zr8M1uoKS/MXzW+EO2vxjQx5k+e7kFbzLr8q
fx/BqLUc+c/uS3s/cvvwT9qq4V+Vv6fg9qKDH+h4L63dF5bm2/jdV8DRbFrd
LSyth23cpe03Vl6Vv0+rzBSW1vvVd6xEfca6JSytt+ZmXwUHH69ifGvrKvSX
OjdWMZ5V8We0H9VOP6O+o7f/Be1JayIdZ17N8VVlV6N9aLZZzfbeONr/jTZK
r8F4KbulsDS/x/tuDa5X+OsatBeVC8LS/Gr3y1/hYDQd//Ir+6ciYen7F+bz
a+FoxFq0P9VVtHGatp9Zx/bq+7TuC0vzm6wTtJv2NzgoJCzNf4q/oJ2j3N5P
9TscFaTVz2nDEZbmX4WPaSX/+quYr1VnPdKt/sLvDO8w4/HQ5PO1gNbe2XBV
ni9omsK3G41cWzu5frjTZwP6A/15G3j999F29Y1oz3g9N6I9EM6hlb0b0b7S
79HB1wEczwrYv7YrYPv1Du3k3MT23vZN7P+Lae/1zRhvGn5EW1s2c37E9c3o
fwuybYHjClswHlzrSPuJLRgvH2XZyvZeedpoR9sTtqL9pWTexvG3Zbaxvdea
dt1taE8H67ahfW6W2s7+1Ba0P4aO1gjL8w/P0561Aw5H7UD/rfIL0/WzwtL6
j9ZzOxFviIfv5Pme2sn4RfpdjF/otLF8F+Ir9vFdHK+TZjccvkcrX+xmf+uR
3Ww/K3uQf+ICe9D/rdXbw/koA/Zwfka/vXhevPm0nucPxiNq0m7vP3h/5/6B
6xX/8QevV7V9sN9jH+Jfkcd0dQ9t/L0P90eZ9SfjUzv/ZDztNtPdHCGsTQ/Z
37stZDztZsj+ydf2Mx5YaT/HY21muneNDrMeYH9vBVrvQAdXaa3cQdhsSzvj
aTXTIcQzjQ8P8XxbHWJ8cuwhjr9fS1slD7O/tLmw9H3V4Fumx6tp7dxhlJ/R
yCOw+jNtnDmC/GQ/e5TxyeFHcf76Cto6eZT96emOcbxC4WOcz7CM6c4x2k99
nPMZ3qXV+seRf7zDx3k9n9BKgROwXvcEx1t8c4Lznf5jupb3JOz0PYn3h//j
SY5XfPsUtrdrnML4Qq/XKVwP97PTyD9B99MY3xDPprXdp5k/79LqzDMcb7Dj
DMpL+9YZPI9e9rO4nvo02tp6luXjjbPIH8GrEeP9FSNer020n0JHr5zD/VGN
c/h9oz0dXjmH31NePs/5V2XP43pabZjujqM19QLHc5S+gHSn5QWOD/31Ao5v
l7jI8ujLi0gPRzNdWU3rER00/YvjZ0bQ2iraPP0Xxn84z1yC1WGXmB/8Syyf
Tlxi+ZT2Mu5vWOgyy/ull5Gf3KOXef6prnD8TMErHJ/7+RWW94euYLxK9JhW
81/F/zHq0HZ/Wn8nwflhJu32SeD4wTymm7lTeD2rp/B8e6ZwvM8cWt2bwutZ
9RrHo319jeOFZ9P6rmusr965hvlScZfrsDaDNrdfx/gRJ77O+Y+v38B8SWPq
Dc7H3HIDx/Ouc/sw202Uf0pF2g1uYvsgISyt/xhniWGzXYzny259i+WlS+sZ
b7P8LnUb6W4LOhhzG/k9XnOb7/Pid3h/rTu4/9EoWv2F2xtn73B8VJO7LJ9G
3OX7ZyVtnbqL8sJN/zff50Npc/nfeF85x5nup7nH8X7v3eP76CfaO3KP87WV
+7y/Be8jP+r16ODgfdSH40e0lu8BtjdrP8DxnX4PUH9WHz7AeCkjzz+wXZP2
ev+D8VThXKZbb/2L+Ilb7V/MPwt60LHH7bU9/+L4/qcP8XxF3R7i+VFnPeT5
73yI58m+ze2VLv/heujTaWsb7d6kg9cecb7+tUdIj7I+5nz9Co/x/HkbH+N5
Ca8+ZvsoyxPW/8o9QX3HavuEz9elJ3xfZVIS6O//UFiqzzithOXxnmOF5fbd
S6mQbpcUluezNheWv2f4rbD8/K0RluvTH6SGg2apcfx4pLC8PvbPtHkmNX4/
apwmgfU7hgvL8/VX0PZJ2kuXNoH2/hBh+XtKy2j3WFr83yB1Ovzf+F1huT24
hPYPp8P+0RPurxZIj+th1E2P9PBAehxPeSQstRetWs8k5PHmbl/afPvZhBwP
cGoIS+sZRT8IS/Ez+83nEhXO72ltXiqSvF6fCcvjU7rTiicsj0ff/RzOL6jy
fALlVVdam/k8z3eHsBRfdG49j98zpr2QwPyqrcJye/+GsPy9jFdfxP7WlBdx
vu4mYWl8apBCx69kQH7TDNrfkIH580oG3t+XX8L9M8q+hO3tNrRy6SXkB13N
CLstM+L4wXfC8vcdMqgJubxwSgjL7acv6Wg0t1dX016xTDh+2DQTyhdlJK2v
oq3TdNwoM8snPzP+j3MiM8oLP+3LsDH4ZZRn9lJhuT1wlA5TZUlg/PS7tLuY
Dg5lQXkYP6a1/K+wfKpDR/uF5fXx/6ONd7LCtpkV+dHrk5Xl0z9ZkT+s3NmY
f6tnw/MSz6Ed7dUExqdVFZb6H6KvX8Xzos5+FfsrXV9LyPF5fcZrKC+s7bQb
0+bU1xNYz3sL7V8XluKZUbbsSLcnZ8fxvIAOE9l5vq/kQHmglxeWxxetF5bi
7fFlpmuZc8JmGdppLSyvT/CXsPz9r4xvJFB/KvUGtvdaCMvjo8Yw3XoxVwLr
iRUXlr/nZtHxKNovqiXk8T9RE1odISz13xorafuUsDz+s9GbiQpvvZl60t9h
sr9kqLD0vVRrubBUn3OPC0vrCwRp3krI4zXNQcJye+knYWk9J/+IsLTeTKTk
RrpakPYWCUvrOYUHhfPlv7e/rJLMD49z43z0fG/jfK3awvL66KGwvD76Q2Gp
/87MkwfpTk1h+fvAvWn7rXcScn+pV40Oewivm1pp/LXk+SlzhGfVG3Ih3f/6
/3Llxfsr+DQvnpe4G63NyovyxdxJR5XzsXzqkg/llzE9H99P27i9d5Pb653z
w9b3tLuZDq7lZ/matQDsTCrA+ulGpkdXaTVLQdZfy9Hh7wVZP71M65nexfvF
+lBYiv9qF99F/TH69j3WP14ohPqA90EhHC9sRiujCuH66j/TQZHCrF82Lozr
oQ0vjP9nrmC6c5JWG+qsXw7ReX+X6aifeMd01u9Tv8/68cD3UX65S4Tl79cf
puMnwvL3MAoUSaD9tJCODhRB/UR9VATHM/IWTcjtcbsWrYS0/i9tvV2M7ZMa
xVC/CXoVw/bmfW7vvPkB7o//2QfYP+rOdNWjvTeKM39UKc782a04638zmW7t
KI77FX9cAvdLs0sg3ZxGO1u5vX+jBOrrRqeSSLenlMT99zaV5PsrpSTej0rW
Unj/BRtKYf/4Cq29XBrtAbOssBS/iH4TltYrUi9xe0P9EMezS9Neyw9xPP0C
bWUog/quW6IM8l/wpbAcTxvNdOf5svg9vxgdNS2L/KGOFJbXQ1xVFr8fvl8O
x1cal8P2+jBheb1Gvxzqu+4JWmtQnuXF4PKsby+l/aPcPkploPy2HdpbbLC8
PUQrTwzkPz1/BbanF9Dxflr7jzbfqcj2jVmR5cWftPFPRZQ/du5KsFe9EvJr
2LMS6nOu9lEC61tVpeOvhaXxQ37OjxPy+KPoE1rt+jHqY8aMj1Hfs7cLy+tD
fVyZ9a+vaGtqZdTX3C3CaUfWr7SmfbL+dV1YXi9m8iewH9BRglZfqZKQx/N5
E4Sl8XvheqYrV2g986cJeb0Jqwwdr/sU22t/0WbGqrBTSlhan8lvQRvnafvF
z2CvOK2MFvay3r+Sa0Ty+j1XDQ6K0nETYen7BNoI2lxJR3p1WG0kLI1PNIYK
S+Md7eW0d1xYXs/qixoJef0ca5CwPB70CB0rNRPy9z+cAbS/SDjI+sq7nyfX
Z48O0upjYWk8n5HPTMjfKw3nm0hX9tP6QxPxJCtPLdZva9ZC/VfbR5sPaOet
2rBfrTaOF/Wg7b9ro/7s5arDeNandRAfU75mepCjLtLjysLSeButS13Uv83p
dVFfdrZxe/v7erC3mQ6v1cP+7qTPWX/eSMdXaS1LfdTv/PH1Uf5Gv9fH9upl
phuZvoDtD2ll3ResP1+krZcasH5VsgHqx0HzBohvmOe4vfNCQ8Z/PqCjZg2x
vzqqIevfzzaCwyKNUF9XmtD6cNpa0QjxlbhwY9wPrSFtDmmM7Z1ljXE8/1hj
PC9G/SaIt9gDmyDdW9IE+Tc83ATxEEVpmsB6+N8Iy+vhLxSW1s+PDwhL43m1
R8LS+vtm3mZIj34Ulr5PoIa08S9tv21hf68Grf9h4Xys+8La6ZPD63ZLnv+b
XyI9+ExY+j5F3F141Bvh/RWjkvMD7gr36trkWpW+yfH2VZrDarfm2N+YKTxo
b86Oq7Tk+yp7CxxPqSx8vseljEFyPrVuC6c+UKLero7J+QzThKNitbMuqJGc
L7BVuO6OOJGubHI+QKWWsNlJWPoegzNF+Pwaa8mCucn5DJuEpe9DRCktGS9o
3wr2JrZC/CHcQCtXhaX1aPSXWyfk8aXBOGF5vPBvTNcutUY8zFTbwE5pWl0r
LK93cIG2M7RNyOtteyXo8Mu2iNe4z7dL4HuaxdohPuQ/0x71rej99vg9tXF7
HN8YRtu+sLS+j1K4Q0IeL6036IDrYQ3ugP/rLqWDox3YXvm8I+qnjtMR5YG/
uCPeH9Ghjijv1Se0179TQv5eRbigE/prlAOdUB7o/3VCeWG90xnv23heZ5Q3
2p+dUT6Z/3RGfMPJ/VVCHn/vV/8K7T1j71eMb94TlscvaDbr01VppbuN9rx7
hw5ydkF7Kf6kC/oLtK60OaML+gOi17vifaF+TBtfdWX/wdSu7D/YwnS9Yjek
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
z6fIz4c5Slgef/kz7Z8RlsdDPvtCCr7fvkJY6m8IT76A4yvpX0yR57/ourA8
/m4ZHR8TluM7aTLA5nvC8vcO6mfA9VWPZMD9NpSXsL1d4CXez7ov4fjhN8Ly
+iePaDdvRjioJSzFs+K+tDaf9t9Wkb+jGirytzGXtv9Qsb9SLROs96Atj3Z3
C0vjWYK7tNktM+zMpP0dmXF9oluZcb/VHC/D3jRhqT4YbhWW6pvKTVp/LQts
VcqC/BdvyoLnQ7uWBfnZzPoK868hLNVn/fa0cVVYWv/Dfjkrft8rKyz1N4Vt
hKX+JmU87arZ4KC0sNT/FLektbHC0vhgc62w1D8UlXg1Re7/UZsLS/2JxrfC
0nxzezXtRdxeb/Ya0q2Rwt4Bs1r1/32fbBUdnBYuWSN9MSPZfx8/83qK3P/k
DKN9X1h6/0cnhAt8vi/tyuR8JzVddtgoLCzVD8KlwlL9QzkmLM2P11PnwPGt
d3Pg993PheXvjRymzSfC8vee6uSEo/45WV72fQPWfxSW1zvOnQvlW1xdWOpv
03ox3fwhF8o3Z28ulIfqZ1qK3J9udBeW+svt2Uz3dv1furT+wB3h3dlS9xqX
KXl/u74JuzOEjU2Nb3v7kvd3u/ChEnNOHv0meX9j4bQ1EotmJucHaNnfEvdn
XaHsk5PzCfypwu1PnWtS+s3k/d1Cqzdo49XcsF1R2CxU/VL5Fsn7u0k4/ZdV
lMSi5P1NyY38Zr3ydkqFN9rVGDxkXvL+lqeDdsLS92LMK28jfzmZ86RUSJx6
WObHZ5P5s4ywND8xai0szV9Ux9FexneQf8JStNKS1r+jrV+F5fXei+fF86h9
SZuj8+J5d37Ji+vjn82L59Nomg+2RwifGbB6X+Nk+eOtZHp4ilaeyY/ywB0q
/EOuH079eDF5fZfT8XHhUd0qH5kwKHn+aQvAZiFaPVoA+xupCsJ2wYIo77x6
BfH/9UPC8noZj4Xl8S353oWD2nTcT1jq73UeCmtB/QXbKiSf/zzvwVFNWu1D
G/Po8K1CsFJdWPreut5TWJ7fNYd299Ba1cKw+TXtzCqM+oy/U1ju37pdGPVd
u4uO+qs3XUd9I9xGK7GO+ob++vtID75/H+nx5vdxfO06bWYrgvNxKhTB+aoB
bSS4vZ2lKOyVo8O2RVF/sy4z3c1ULAXz/z4shvS4Fa25xXg+Yz6A7TUfoPxX
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
            "]]}}, {{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, {
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}}, {{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, {
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, {
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {2.9053728*^9, 0.9}, 
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {{}, {1.3093727503767303`}}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotLabel -> 
        FormBox["\"Nikkei 225\"", TraditionalForm], 
        PlotRange -> {{2.9053728*^9, 3.705696*^9}, {0.9, 1.5}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"Mercado eficiente\"", "\"Datos reales\""}, 
         "LineLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.795477816808709*^9, 3.795478463091496*^9, 
  3.795478507067479*^9, 3.795478740908945*^9, 3.7954812977635155`*^9, 
  3.7955568005992904`*^9, 3.8830345082583447`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"ccdd8e78-aeba-4568-b649-22e67904fbb6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribuciones sin Moving Average", "Chapter",
 CellChangeTimes->{{3.7951274362299633`*^9, 
  3.7951274762606277`*^9}},ExpressionUUID->"e69e49d7-d396-4b57-ad09-\
dd01ddbad99f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Distribuciones", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimulado", ",", "MercadoEficienteConFechas", ",", 
       "dataSimulada", ",", "dataReal", ",", "\[ScriptCapitalH]", ",", "a", 
       ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimulado", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MarketEntropy", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechas", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "MercadoSimulado"}],
          "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataSimulada", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Entropy", ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"DiscretizeByQuartiles", "[", 
            RowBox[{"MercadoEficienteConFechas", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", "dias", 
           ",", "1"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataReal", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Entropy", ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"DiscretizeByQuartiles", "[", 
            RowBox[{
             RowBox[{"database", "[", 
              RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Returns\>\"", 
             "]"}], "]"}], ",", "dias", ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalH]", "=", 
       RowBox[{"DistributionFitTest", "[", 
        RowBox[{
        "dataSimulada", ",", "dataReal", ",", "\"\<HypothesisTestData\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"\[ScriptCapitalH]", "[", 
        RowBox[{"\"\<TestDataTable\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<CramerVonMises\>\"", ",", "\"\<KolmogorovSmirnov\>\"", ",", 
           "\"\<Kuiper\>\"", ",", "\"\<PearsonChiSquare\>\"", ",", 
           "\"\<WatsonUSquare\>\""}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"\[ScriptCapitalH]", "[", 
         RowBox[{"\"\<TestConclusion\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<CramerVonMises\>\"", ",", "\"\<KolmogorovSmirnov\>\"", ",", 
            "\"\<Kuiper\>\"", ",", "\"\<PearsonChiSquare\>\"", ",", 
            "\"\<WatsonUSquare\>\""}], "}"}]}], "]"}], "//", 
        "TraditionalForm"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", " ", "b"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7930781302367125`*^9, 3.7930781945012407`*^9}, {
   3.793078237643588*^9, 3.793078240596267*^9}, {3.7930782867539454`*^9, 
   3.7930783266753464`*^9}, {3.7930784563536415`*^9, 
   3.7930785919699693`*^9}, {3.7930790837433877`*^9, 
   3.7930791376580024`*^9}, {3.793080128142029*^9, 3.793080136769927*^9}, {
   3.79308025500835*^9, 3.7930802704385424`*^9}, {3.7930803633267384`*^9, 
   3.793080364263914*^9}, 3.793080518912616*^9, {3.793080552344083*^9, 
   3.7930805572658415`*^9}, {3.7930806803740997`*^9, 
   3.7930807008285646`*^9}, {3.793080864440527*^9, 3.7930809055627985`*^9}, {
   3.793081072393794*^9, 3.7930810939842916`*^9}, {3.7930812601712847`*^9, 
   3.793081270308519*^9}, {3.7930814989188876`*^9, 3.793081563884746*^9}, {
   3.7930818255267153`*^9, 3.793081849471612*^9}, 3.7930821013510637`*^9, {
   3.7930822884680986`*^9, 3.7930823277345376`*^9}, {3.7930824096525908`*^9, 
   3.793082413815428*^9}, {3.793082496985007*^9, 3.7930825087937045`*^9}, {
   3.793082608675214*^9, 3.7930826097999496`*^9}, {3.793082711636411*^9, 
   3.7930827304259806`*^9}, {3.79308279272987*^9, 3.7930827932297525`*^9}, 
   3.79308284685069*^9, {3.7930831960193586`*^9, 3.793083199275247*^9}, {
   3.7931174994029903`*^9, 3.7931175172615824`*^9}, {3.793117547814768*^9, 
   3.7931175488547907`*^9}, {3.7931180488793716`*^9, 3.793118049424795*^9}, {
   3.7931180800698013`*^9, 3.793118081119941*^9}, 3.793118165957039*^9, {
   3.7931182127046604`*^9, 3.793118233277491*^9}, {3.793118379591015*^9, 
   3.7931183923395796`*^9}, {3.793118453138221*^9, 3.793118495457431*^9}, 
   3.793118639361064*^9, {3.793119285148425*^9, 3.7931192886316595`*^9}, {
   3.793119469646367*^9, 3.793119479920923*^9}, {3.7950371103915725`*^9, 
   3.79503711562331*^9}, {3.7950372361800966`*^9, 3.7950372485833416`*^9}, {
   3.7950401490035105`*^9, 3.795040170266815*^9}, {3.7950402313540945`*^9, 
   3.7950402430383663`*^9}, {3.7950403867266607`*^9, 
   3.7950404031747947`*^9}, {3.7950405496883097`*^9, 3.795040560277485*^9}, 
   3.795040651189393*^9, {3.795040746453453*^9, 3.7950407594712405`*^9}, {
   3.7950408648143883`*^9, 3.795040874754507*^9}, {3.795040904758837*^9, 
   3.7950410155736027`*^9}, {3.7950410624966326`*^9, 3.795041206146552*^9}, {
   3.7950412710462523`*^9, 3.7950412884500127`*^9}, {3.795041341555581*^9, 
   3.7950413568784294`*^9}, {3.795041401771613*^9, 3.7950414425542364`*^9}, {
   3.7950414950759525`*^9, 3.7950415350196133`*^9}, {3.7950415761110487`*^9, 
   3.795041629115168*^9}, {3.795041694390427*^9, 3.795041782823291*^9}, {
   3.795041927449803*^9, 3.7950419353308873`*^9}, {3.795041995827487*^9, 
   3.7950420264962626`*^9}, {3.7950420661355658`*^9, 
   3.7950421106377535`*^9}, {3.7950421921278825`*^9, 3.795042197946224*^9}, {
   3.7950422306528053`*^9, 3.795042266490576*^9}, {3.7950423532770557`*^9, 
   3.7950424105138507`*^9}, {3.795042988907483*^9, 3.7950430329402175`*^9}, {
   3.795043109345192*^9, 3.795043410842193*^9}, {3.7950434520006323`*^9, 
   3.7950434631920476`*^9}, {3.795043571861208*^9, 3.795043595783527*^9}, {
   3.795043648949086*^9, 3.7950436542532*^9}, {3.795043755273108*^9, 
   3.7950438842579756`*^9}, {3.7950439287160482`*^9, 3.795044002187421*^9}, {
   3.7950440663806067`*^9, 3.795044076117646*^9}, {3.795046016234126*^9, 
   3.795046022513389*^9}, {3.795046787820362*^9, 3.795046808314008*^9}, {
   3.795049544187093*^9, 3.7950495519701147`*^9}, {3.795049664911878*^9, 
   3.7950496752362313`*^9}, {3.7950497226632233`*^9, 3.795049758437356*^9}, {
   3.7950498205279455`*^9, 3.795049942587803*^9}, 3.795049988053301*^9, {
   3.795050188492218*^9, 3.795050197935005*^9}, {3.7950504825873036`*^9, 
   3.7950504899514074`*^9}, {3.7950506488846645`*^9, 
   3.7950507378030577`*^9}, {3.7950508838915644`*^9, 3.795050887882964*^9}, {
   3.7950509632958174`*^9, 3.795051005487245*^9}, {3.7950510477194815`*^9, 
   3.7950510552742133`*^9}, {3.7950512652338104`*^9, 
   3.7950512655772533`*^9}, {3.7950513032023287`*^9, 
   3.7950513167631235`*^9}, {3.795051396762989*^9, 3.795051400106593*^9}, {
   3.7954770628827515`*^9, 3.7954770636055393`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"004fcc83-ad3f-45af-9697-047531d8dfb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Distribuciones", "[", 
   RowBox[{"4", ",", "50"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.795477068624916*^9, 3.795477085629419*^9}, {
  3.795477312249629*^9, 3.7954773232067647`*^9}, {3.7954773938723993`*^9, 
  3.795477394624397*^9}, {3.795477488884435*^9, 3.795477522151964*^9}, {
  3.7954778825300055`*^9, 3.7954778853025208`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"5ea2e687-3c0c-4c35-835c-11ef05ed4a0e"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*RowBox[{\\\"2.534419828956028`*^-137\\\", \\\" \\\", \
\\\"6.423283869405501`*^-274\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"",2,64,1,
   29423148769763840645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954772672379103`*^9, 3.795477313021243*^9, 
  3.7954773715828333`*^9, 3.795477404090408*^9, 3.7954775016648855`*^9, 
  3.795477532333206*^9, 3.795477895199829*^9, 3.7954813070491705`*^9, 
  3.7955568110490313`*^9, 3.8830345203040023`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[64]:=",ExpressionUUID->"dec23ad2-7e82-488f-b98f-c15ed58c00f1"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"104016.74802538446`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"",2,64,2,
   29423148769763840645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954772672379103`*^9, 3.795477313021243*^9, 
  3.7954773715828333`*^9, 3.795477404090408*^9, 3.7954775016648855`*^9, 
  3.795477532333206*^9, 3.795477895199829*^9, 3.7954813070491705`*^9, 
  3.7955568110490313`*^9, 3.883034521279967*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[64]:=",ExpressionUUID->"f275f3fa-a96e-4a87-a3c8-35075ee1cc87"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"416066.9921015378`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"",2,64,3,
   29423148769763840645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954772672379103`*^9, 3.795477313021243*^9, 
  3.7954773715828333`*^9, 3.795477404090408*^9, 3.7954775016648855`*^9, 
  3.795477532333206*^9, 3.795477895199829*^9, 3.7954813070491705`*^9, 
  3.7955568110490313`*^9, 3.8830345222952037`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[64]:=",ExpressionUUID->"655836a3-ccd1-48d1-a3dc-adae5ce1a66d"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,64,4,29423148769763840645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954772672379103`*^9, 3.795477313021243*^9, 
  3.7954773715828333`*^9, 3.795477404090408*^9, 3.7954775016648855`*^9, 
  3.795477532333206*^9, 3.795477895199829*^9, 3.7954813070491705`*^9, 
  3.7955568110490313`*^9, 3.883034523310773*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[64]:=",ExpressionUUID->"5ebf0ac9-381d-47a9-96bf-ced22e51d34e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14.5998568`", ",", 
   RowBox[{
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"\<\"Cram\[EAcute]r\[Hyphen]von Mises\"\>", "3859.3803506736763`", 
         "4.518607710224387`*^-14"},
        {"\<\"Kolmogorov\[Hyphen]Smirnov\"\>", 
         FractionBox["8675683", "38544872"], "0.`"},
        {"\<\"Kuiper\"\>", "4.084977615652463`", "0.`"},
        {"\<\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"\>", 
         "1299.5466648331633`", "2.8208454980661405`*^-232"},
        {"\<\"Watson \\!\\(\\*SuperscriptBox[\\(U\\),\\(2\\)]\\)\"\>", 
         "17.972072080889813`", "0.`"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False], " ", 
    TagBox[
     FormBox[
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", "\"Cram\[EAcute]r\[Hyphen]von Mises\"", 
            "\" test.\""}, "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", "\"Kolmogorov\[Hyphen]Smirnov\"", 
            "\" test.\""}, "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{"\"based on the \"", "\"Kuiper\"", "\" test.\""}, 
           "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", 
            "\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"", 
            "\" test.\""}, "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", 
            "\"Watson \\!\\(\\*SuperscriptBox[\\(U\\),\\(2\\)]\\)\"", 
            "\" test.\""}, "RowDefault"]},
         "RowDefault"]}], "}"}],
      TraditionalForm],
     TraditionalForm,
     Editable->True]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7954772678699226`*^9, {3.795477351810099*^9, 3.795477372287182*^9}, 
   3.7954774047375035`*^9, 3.7954775023989077`*^9, 3.7954775352565603`*^9, 
   3.795477898260666*^9, 3.7954813100274677`*^9, 3.795556814140209*^9, 
   3.883034523451363*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"470b41b8-de3b-4e59-9875-862832ca3115"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Tras ser filtrados por un MAV ", "Section",
 CellChangeTimes->{{3.791903262117057*^9, 
  3.7919032801004314`*^9}},ExpressionUUID->"2f63bb0b-5efb-4450-b634-\
44b5138c9c44"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotMarketEntropyThresholdMAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimuladoMAV", ",", "MercadoEficienteConFechasMAV", ",", 
       "MercadoPreciosSimulados", ",", "MercadoConPrecioSimuladoYFechas", ",",
        "MercadoPorcentuales", ",", "MercadoConFechasYPreciosMAV", ",", 
       "Particion", ",", "Techo", ",", "SimulatedEntropy", ",", 
       "GraficaConThresholdMAV"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimuladoMAV", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechasMAV", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoSimuladoMAV"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoPreciosSimulados", " ", "=", " ", 
       RowBox[{
        RowBox[{"Accumulate", "[", 
         RowBox[{"MercadoEficienteConFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"Min", "[", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"MercadoEficienteConFechasMAV", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoConPrecioSimuladoYFechas", " ", "=", "  ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoPreciosSimulados"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoPorcentuales", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", "MercadoConPrecioSimuladoYFechas", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoConFechasYPreciosMAV", "=", 
       RowBox[{"MapAt", "[", 
        RowBox[{"DateFromYearPercentual", ",", 
         RowBox[{"MovingAverage", "[", 
          RowBox[{"MercadoPorcentuales", ",", "dias"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Particion", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MercadoConFechasYPreciosMAV", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"DiscretizeByQuartiles", "[", 
             RowBox[{"MercadoConFechasYPreciosMAV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
          ",", "dias", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Techo", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"Quantile", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Entropy", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "&"}],
             ",", "Particion"}], "]"}], ",", "0.1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"SimulatedEntropy", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"Entropy", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
           "}"}], "&"}], ",", "Particion"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"GraficaConThresholdMAV", " ", "=", " ", 
       RowBox[{"DateListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SimulatedEntropy", ",", 
           RowBox[{"MarketEntropyMAV", "[", 
            RowBox[{"market", ",", "dias"}], "]"}]}], "}"}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "Techo", "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
           RowBox[{"database", "[", 
            RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}]}],
          ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Mercado eficiente\>\"", " ", ",", "\"\<Datos reales\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.5"}], "}"}]}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.792899586452324*^9, 3.792899615032039*^9}, 
   3.7928996516764164`*^9, {3.7928996908226886`*^9, 3.7928996985112333`*^9}, {
   3.7928998269277115`*^9, 3.792899854392147*^9}, {3.792900093618286*^9, 
   3.7929001171969595`*^9}, {3.792900694981782*^9, 3.7929006976222067`*^9}, {
   3.7929020618332205`*^9, 3.792902064178235*^9}, 3.792902106055974*^9, 
   3.7929032761586328`*^9, {3.7929045883485813`*^9, 3.7929046106907225`*^9}, {
   3.7929946013012233`*^9, 3.7929946017818265`*^9}, {3.7930749894666862`*^9, 
   3.7930749937310677`*^9}, {3.793075336617958*^9, 3.793075363719206*^9}, 
   3.7930754683002987`*^9, {3.795473938453061*^9, 3.7954739400213475`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"450a5858-5209-4749-b6f8-a9ddf5d8a51e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Datee", "[", 
    RowBox[{"date_", ",", "p_"}], "]"}], ":=", " ", 
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"DateObject", "[", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"DateList", "[", "date", "]"}], ",", "3"}], "]"}], "]"}], ",",
      "p"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BuscarPrecio", "[", 
    RowBox[{"datedPrices_", ",", "date_"}], "]"}], ":=", " ", 
   RowBox[{"FirstCase", "[", 
    RowBox[{"datedPrices", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"date", ",", "p_"}], "}"}], "\[RuleDelayed]", "p"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DatedPriceMarket", "[", "market_", "]"}], " ", ":=", " ", 
   RowBox[{"Apply", "[", 
    RowBox[{"Datee", ",", 
     RowBox[{
      RowBox[{"database", "[", 
       RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", "]"}],
      ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7952403333208246`*^9, 3.7952403446542664`*^9}, 
   3.7953857977675257`*^9, {3.7954563659099336`*^9, 3.795456439870431*^9}, {
   3.7954696617949505`*^9, 3.795469663723607*^9}, 3.795474278171001*^9},
 CellLabel->
  "In[173]:=",ExpressionUUID->"85225eab-6790-4dc3-962a-cea2efcb6972"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinEntropyMarketMAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimuladoMAV", ",", "MercadoEficienteConFechasMAV", ",", 
       "MercadoPreciosSimulados", ",", "MercadoConPrecioSimuladoYFechas", ",",
        "MercadoPorcentuales", ",", "MercadoConFechasYPreciosMAV", ",", 
       "Particion", ",", "Techo", ",", "MiniEntropiFechasMAV", ",", 
       "FechasEncontradas", ",", "FechasFiltradas"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimuladoMAV", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechasMAV", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoSimuladoMAV"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoPreciosSimulados", " ", "=", " ", 
       RowBox[{
        RowBox[{"Accumulate", "[", 
         RowBox[{"MercadoEficienteConFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"Min", "[", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"MercadoEficienteConFechasMAV", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoConPrecioSimuladoYFechas", " ", "=", "  ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoPreciosSimulados"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoPorcentuales", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", "MercadoConPrecioSimuladoYFechas", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoConFechasYPreciosMAV", "=", 
       RowBox[{"MapAt", "[", 
        RowBox[{"DateFromYearPercentual", ",", 
         RowBox[{"MovingAverage", "[", 
          RowBox[{"MercadoPorcentuales", ",", "dias"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Particion", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MercadoConFechasYPreciosMAV", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"DiscretizeByQuartiles", "[", 
             RowBox[{"MercadoConFechasYPreciosMAV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
          ",", "dias", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Techo", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"Quantile", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Entropy", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "&"}],
             ",", "Particion"}], "]"}], ",", "0.1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MiniEntropiFechasMAV", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"CalculateMarketEntropyMAV", "[", 
          RowBox[{"market", ",", "dias"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], " ", "\[LessEqual]", " ", 
           "Techo"}], " ", "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"FechasEncontradas", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"BuscarPrecio", "[", 
             RowBox[{
              RowBox[{"DatedPriceMarket", "[", "market", "]"}], ",", "#"}], 
             "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"MiniEntropiFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"FechasFiltradas", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"FechasEncontradas", ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"con", " ", "su", " ", "precio"}], "*)"}], 
      "\[IndentingNewLine]", "FechasFiltradas"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.792902296054864*^9, 3.7929023027008076`*^9}, {
   3.792902339733032*^9, 3.7929023977422657`*^9}, 3.792902435989955*^9, 
   3.7929024702335443`*^9, {3.792902501869385*^9, 3.7929025230870132`*^9}, {
   3.792902617682435*^9, 3.792902618844493*^9}, {3.7929027048277626`*^9, 
   3.7929027162177715`*^9}, {3.7929036461035347`*^9, 
   3.7929036606831303`*^9}, {3.792904662914671*^9, 3.7929046645234275`*^9}, {
   3.7929046950352373`*^9, 3.792904695160205*^9}, {3.792904954021877*^9, 
   3.792904959461409*^9}, 3.7929049938334937`*^9, {3.79290573117063*^9, 
   3.792905769433112*^9}, {3.7929058116336746`*^9, 3.7929058190988083`*^9}, {
   3.7929064320471087`*^9, 3.792906532214482*^9}, {3.792906578749426*^9, 
   3.792906591175188*^9}, {3.792906798916266*^9, 3.792906825182567*^9}, 
   3.792906918976925*^9, {3.7929948678987565`*^9, 3.7929948790892267`*^9}, {
   3.792994915290846*^9, 3.792994927794839*^9}, {3.7929958710347986`*^9, 
   3.792995877133797*^9}, {3.7929961721902905`*^9, 3.7929961734396977`*^9}, {
   3.7952403081755905`*^9, 3.7952404153241014`*^9}, {3.795307965691492*^9, 
   3.795307984256594*^9}, {3.795308026295227*^9, 3.7953081217292404`*^9}, {
   3.795308160384616*^9, 3.795308175085637*^9}, {3.7953083054341693`*^9, 
   3.7953083130824184`*^9}, 3.795308384829153*^9, {3.795456400398099*^9, 
   3.795456404528925*^9}, {3.795456494298745*^9, 3.7954565625674586`*^9}, {
   3.7954566411060777`*^9, 3.7954566619458866`*^9}, {3.795458326208746*^9, 
   3.7954583283254952`*^9}, {3.7954599551340823`*^9, 3.7954599579855757`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"32d96454-6fe7-4a05-bff0-46e29717f0fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinEntropyMarketReturnsMAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimuladoMAV", ",", "MercadoEficienteConFechasMAV", ",", 
       "MercadoPreciosSimulados", ",", "MercadoConPrecioSimuladoYFechas", ",",
        "MercadoPorcentuales", ",", "MercadoConFechasYPreciosMAV", ",", 
       "Particion", ",", "Techo", ",", "MiniEntropiFechasMAV", ",", 
       "FechasEncontradas", ",", "FechasFiltradas"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimuladoMAV", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechasMAV", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoSimuladoMAV"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoPreciosSimulados", " ", "=", " ", 
       RowBox[{
        RowBox[{"Accumulate", "[", 
         RowBox[{"MercadoEficienteConFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"Min", "[", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"MercadoEficienteConFechasMAV", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoConPrecioSimuladoYFechas", " ", "=", "  ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoPreciosSimulados"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoPorcentuales", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", "MercadoConPrecioSimuladoYFechas", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoConFechasYPreciosMAV", "=", 
       RowBox[{"MapAt", "[", 
        RowBox[{"DateFromYearPercentual", ",", 
         RowBox[{"MovingAverage", "[", 
          RowBox[{"MercadoPorcentuales", ",", "dias"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Particion", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MercadoConFechasYPreciosMAV", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"DiscretizeByQuartiles", "[", 
             RowBox[{"MercadoConFechasYPreciosMAV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
          ",", "dias", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Techo", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"Quantile", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Entropy", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "&"}],
             ",", "Particion"}], "]"}], ",", "0.1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MiniEntropiFechasMAV", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"MarketEntropyMAV", "[", 
          RowBox[{"market", ",", "dias"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], " ", "\[LessEqual]", " ", 
           "Techo"}], " ", "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"FechasEncontradas", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"BuscarPrecio", "[", 
             RowBox[{
              RowBox[{"DatedPriceMarket", "[", "market", "]"}], ",", "#"}], 
             "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"MiniEntropiFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"FechasFiltradas", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"FechasEncontradas", ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"con", " ", "su", " ", "precio"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"FechasFiltradas", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"FechasFiltradas", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Returns"}]}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7929069469479704`*^9, 3.7929069696359572`*^9}, {
   3.792907014379123*^9, 3.792907059698498*^9}, 3.7929071072794027`*^9, {
   3.7929071488152905`*^9, 3.7929071875858965`*^9}, {3.792907246977513*^9, 
   3.7929072558723*^9}, {3.792907751420148*^9, 3.7929077578853474`*^9}, {
   3.7929078079500513`*^9, 3.792907808621773*^9}, {3.7929951700826817`*^9, 
   3.7929951802768383`*^9}, {3.792995289687278*^9, 3.7929952984630203`*^9}, 
   3.792996140875296*^9, {3.7929961783322926`*^9, 3.7929961789974766`*^9}, {
   3.795473954893565*^9, 3.7954739562057533`*^9}, {3.7954744592323966`*^9, 
   3.7954745185568676`*^9}, {3.795474549094808*^9, 3.7954745637328453`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"b269141e-74ec-408b-b591-370c1370e3a8"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Ahora todo junto CON MAV",
 FontColor->RGBColor[0, 1, 0]]], "Subsection",
 CellChangeTimes->{{3.7954778475471077`*^9, 
  3.795477859114947*^9}},ExpressionUUID->"617117f3-9539-4dde-9d70-\
c830a49a7290"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComparativeMarketEntropyThresholdMAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimuladoMAV", ",", "MercadoEficienteConFechasMAV", ",", 
       "MercadoPreciosSimulados", ",", "MercadoConPrecioSimuladoYFechas", ",",
        "MercadoPorcentuales", ",", "MercadoConFechasYPreciosMAV", ",", 
       "Particion", ",", "Techo", ",", "SimulatedEntropy", ",", 
       "GraficaConThresholdMAV", ",", "MiniEntropiFechasMAV", ",", 
       "FechasEncontradas", ",", "FechasFiltradas", ",", 
       "SinEntropiaConFechasReturns", ",", "PlotMinEntropyMarketMAV", ",", 
       "CantidadSinEntropy", ",", "Histograma"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimuladoMAV", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechasMAV", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoSimuladoMAV"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoPreciosSimulados", " ", "=", " ", 
       RowBox[{
        RowBox[{"Accumulate", "[", 
         RowBox[{"MercadoEficienteConFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"Min", "[", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"MercadoEficienteConFechasMAV", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoConPrecioSimuladoYFechas", " ", "=", "  ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoPreciosSimulados"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoPorcentuales", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", "MercadoConPrecioSimuladoYFechas", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoConFechasYPreciosMAV", "=", 
       RowBox[{"MapAt", "[", 
        RowBox[{"DateFromYearPercentual", ",", 
         RowBox[{"MovingAverage", "[", 
          RowBox[{"MercadoPorcentuales", ",", "dias"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Particion", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MercadoConFechasYPreciosMAV", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"DiscretizeByQuartiles", "[", 
             RowBox[{"MercadoConFechasYPreciosMAV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
          ",", "dias", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Techo", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"Quantile", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Entropy", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "&"}],
             ",", "Particion"}], "]"}], ",", "0.1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SimulatedEntropy", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"Entropy", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
           "}"}], "&"}], ",", "Particion"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"GraficaConThresholdMAV", " ", "=", " ", 
       RowBox[{"DateListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SimulatedEntropy", ",", 
           RowBox[{"MarketEntropyMAV", "[", 
            RowBox[{"market", ",", "dias"}], "]"}]}], "}"}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "Techo", "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
           RowBox[{"database", "[", 
            RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}]}],
          ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Mercado eficiente\>\"", " ", ",", "\"\<Datos reales\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "1.55"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MiniEntropiFechasMAV", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"MarketEntropyMAV", "[", 
          RowBox[{"market", ",", "dias"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], " ", "\[LessEqual]", " ", 
           "Techo"}], " ", "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"FechasEncontradas", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"BuscarPrecio", "[", 
             RowBox[{
              RowBox[{"DatedPriceMarket", "[", "market", "]"}], ",", "#"}], 
             "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"MiniEntropiFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"FechasFiltradas", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"FechasEncontradas", ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SinEntropiaConFechasReturns", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"FechasFiltradas", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"FechasFiltradas", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Returns"}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"PlotMinEntropyMarketMAV", " ", "=", " ", 
       RowBox[{"DateListPlot", "[", 
        RowBox[{"FechasFiltradas", ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}], 
           " ", "\"\< precios m\[IAcute]nimas entrop\[IAcute]as\>\""}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CantidadSinEntropy", " ", "=", " ", 
       RowBox[{"N", "[", 
        FractionBox[
         RowBox[{"Length", "[", 
          RowBox[{"FechasFiltradas", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MarketEntropyMAV", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Histograma", " ", "=", " ", 
       RowBox[{"Histogram", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"Entropy", ",", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"DiscretizeByQuartiles", "[", 
                RowBox[{
                 RowBox[{"MercadoConFechasYPreciosMAV", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Returns"}],
                 "]"}], ",", "dias", ",", "1"}], "]"}]}], "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"Entropy", ",", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"DiscretizeByQuartiles", "[", 
                RowBox[{
                 RowBox[{"MAVReturns", "[", 
                  RowBox[{"market", ",", "dias"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", "dias",
                ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "market", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}], 
           "\"\<Entrop\[IAcute]as\>\""}]}], " ", ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"FontSize", "\[Rule]", "16"}]}], ",", 
         RowBox[{"ChartStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"ChartLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Mercado eficiente\>\"", ",", "\"\<Datos reales\>\""}],
            "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
      "GraficaConThresholdMAV", " ", "PlotMinEntropyMarketMAV", " ", 
       "Histograma", " ", "CantidadSinEntropy", "*", "100", " ", 
       "\"\<% tiene entrop\[IAcute]a m\[IAcute]nima\>\""}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7929069469479704`*^9, 3.7929069696359572`*^9}, {
   3.792907014379123*^9, 3.792907059698498*^9}, 3.7929071072794027`*^9, {
   3.7929071488152905`*^9, 3.7929071875858965`*^9}, {3.792907246977513*^9, 
   3.7929072558723*^9}, {3.792907751420148*^9, 3.7929077578853474`*^9}, {
   3.7929078079500513`*^9, 3.792907808621773*^9}, {3.7929951700826817`*^9, 
   3.7929951802768383`*^9}, {3.792995289687278*^9, 3.7929952984630203`*^9}, 
   3.792996140875296*^9, {3.7929961783322926`*^9, 3.7929961789974766`*^9}, {
   3.7929965013625464`*^9, 3.792996548802188*^9}, {3.7929966415770116`*^9, 
   3.7929966627692204`*^9}, {3.7929967006883516`*^9, 3.792996756380602*^9}, {
   3.792996840875016*^9, 3.792996864965371*^9}, {3.7929971520143595`*^9, 
   3.792997154094204*^9}, {3.7929971916282606`*^9, 3.7929971972761707`*^9}, {
   3.7929973613752985`*^9, 3.792997370752502*^9}, {3.792997410297751*^9, 
   3.792997430020301*^9}, {3.7929974699382915`*^9, 3.7929974718797927`*^9}, {
   3.79299756161664*^9, 3.7929975739681563`*^9}, 3.7929977383038397`*^9, 
   3.792997824845825*^9, {3.7929978740141487`*^9, 3.7929978977306085`*^9}, 
   3.792998113478334*^9, {3.7929981513933415`*^9, 3.792998155043849*^9}, {
   3.7929981850948353`*^9, 3.7929981860499687`*^9}, {3.7929982371451807`*^9, 
   3.7929982942955494`*^9}, {3.7929983909983225`*^9, 3.792998461860711*^9}, {
   3.7929986443897715`*^9, 3.7929986516432652`*^9}, 3.7930528360677013`*^9, {
   3.793052919550305*^9, 3.7930529625825715`*^9}, {3.793053012573902*^9, 
   3.793053023580804*^9}, 3.793053123925148*^9, {3.7930534433784328`*^9, 
   3.7930535221545353`*^9}, {3.7930556205982723`*^9, 3.793055631749595*^9}, 
   3.793058042487731*^9, {3.7930597987747564`*^9, 3.7930598527810354`*^9}, {
   3.79305998092717*^9, 3.793059987011812*^9}, {3.7930602451938043`*^9, 
   3.7930602534106474`*^9}, {3.7930604755414715`*^9, 3.793060478111123*^9}, 
   3.793060576187928*^9, {3.793060666116035*^9, 3.7930606677094116`*^9}, {
   3.793060702564193*^9, 3.793060761787053*^9}, {3.793060922986847*^9, 
   3.793060936476404*^9}, {3.793061039100201*^9, 3.793061044239901*^9}, {
   3.7930611203446383`*^9, 3.7930611398100877`*^9}, {3.7930612103225894`*^9, 
   3.79306121312601*^9}, 3.7930614602288723`*^9, {3.7930621059085617`*^9, 
   3.793062108758832*^9}, {3.793062175036756*^9, 3.7930621848533883`*^9}, {
   3.793064952622655*^9, 3.7930649742018456`*^9}, {3.793065057064309*^9, 
   3.7930650596477795`*^9}, 3.793065133461438*^9, 3.7930653576507273`*^9, {
   3.793065474311661*^9, 3.7930655251240435`*^9}, {3.793065900227355*^9, 
   3.793065900744561*^9}, {3.7930677518146887`*^9, 3.793067752595411*^9}, {
   3.79306784030612*^9, 3.793067841688092*^9}, {3.793067910181731*^9, 
   3.793067910806388*^9}, {3.7930679956853766`*^9, 3.7930679960288057`*^9}, {
   3.7930680605444827`*^9, 3.7930680612789316`*^9}, 3.793069686326888*^9, {
   3.793069771053605*^9, 3.793069794548029*^9}, {3.7930698868049793`*^9, 
   3.7930698874180975`*^9}, {3.793070547213276*^9, 3.7930705713289914`*^9}, 
   3.7930711978292303`*^9, 3.793071572091451*^9, {3.7930717696904793`*^9, 
   3.793071794861822*^9}, {3.793074913829587*^9, 3.7930749168530807`*^9}, {
   3.7930758344184113`*^9, 3.793075834808667*^9}, {3.7954701163991194`*^9, 
   3.7954701219605565`*^9}, {3.7954703047757907`*^9, 
   3.7954704383394203`*^9}, {3.79547482148067*^9, 3.7954748396520033`*^9}, 
   3.795478781733152*^9},
 CellLabel->
  "In[178]:=",ExpressionUUID->"8a944c01-446f-4ec4-b1bb-9f27b16f0640"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"ComparativeMarketEntropyThresholdMAV", "[", 
   RowBox[{"3", ",", "50"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7951283309556894`*^9, 3.795128341182144*^9}, {
   3.795128448222846*^9, 3.7951284485254965`*^9}, 3.7951288024052114`*^9, {
   3.795475337534209*^9, 3.795475343805871*^9}, {3.7954755749263973`*^9, 
   3.795475586028878*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"680784b1-ebef-40d9-a01d-18ce879b33f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"81.1852841`", ",", 
   RowBox[{
   "4.103945491998099`", 
    " ", "\<\"% tiene entrop\[IAcute]a m\[IAcute]nima\"\>", " ", 
    GraphicsBox[{{}, {{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
hOdZcIP968/A6mbaKg4w7zZtVB+9pP0fRgwGtQ==
          "]]}}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{2.9200608*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{2.8401408*^9, 
           FormBox[
            StyleBox["\"1990\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {2.9979072*^9, 
           FormBox[
            StyleBox["\"1995\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.1556736*^9, 
           FormBox[
            StyleBox["\"2000\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.3135264*^9, 
           FormBox[
            StyleBox["\"2005\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.4712928*^9, 
           FormBox[
            StyleBox["\"2010\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.6290592*^9, 
           FormBox[
            StyleBox["\"2015\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}}, {{2.8401408*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {2.9979072*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.1556736*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.3135264*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.4712928*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}, {3.6290592*^9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
           0.013888888888888888`, 0.}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
       RowBox[{
        "\"IPC\"", " ", "\" precios m\[IAcute]nimas entrop\[IAcute]as\""}], 
       TraditionalForm],
     PlotRange->{{2.9200608*^9, 3.6170496*^9}, {0, 44734.0390625}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}], " ", 
    TemplateBox[{GraphicsBox[{{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.7]]], 
          RGBColor[
          0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
             Directive[
              Opacity[0.5], 
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.7]]], 
               RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798]]], {{
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0., 0.}, {0.05, 443}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 443]& , 
                  TagBoxNote -> "443"], 
                 StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                 Style[443, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.05, 0.}, {0.1, 97}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 97]& , 
                  TagBoxNote -> "97"], 
                 StyleBox["97", {}, StripOnInput -> False]], Annotation[#, 
                 Style[97, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.15, 0.}, {0.2, 56}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 56]& , 
                  TagBoxNote -> "56"], 
                 StyleBox["56", {}, StripOnInput -> False]], Annotation[#, 
                 Style[56, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.2, 0.}, {0.25, 56}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 56]& , 
                  TagBoxNote -> "56"], 
                 StyleBox["56", {}, StripOnInput -> False]], Annotation[#, 
                 Style[56, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.25, 0.}, {0.3, 109}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 109]& , 
                  TagBoxNote -> "109"], 
                 StyleBox["109", {}, StripOnInput -> False]], Annotation[#, 
                 Style[109, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.3, 0.}, {0.35, 72}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 72]& , 
                  TagBoxNote -> "72"], 
                 StyleBox["72", {}, StripOnInput -> False]], Annotation[#, 
                 Style[72, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.35, 0.}, {0.4, 98}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 98]& , 
                  TagBoxNote -> "98"], 
                 StyleBox["98", {}, StripOnInput -> False]], Annotation[#, 
                 Style[98, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.4, 0.}, {0.45, 108}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 108]& , 
                  TagBoxNote -> "108"], 
                 StyleBox["108", {}, StripOnInput -> False]], Annotation[#, 
                 Style[108, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.45, 0.}, {0.5, 126}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 126]& , 
                  TagBoxNote -> "126"], 
                 StyleBox["126", {}, StripOnInput -> False]], Annotation[#, 
                 Style[126, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5, 0.}, {0.55, 150}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 150]& , 
                  TagBoxNote -> "150"], 
                 StyleBox["150", {}, StripOnInput -> False]], Annotation[#, 
                 Style[150, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.55, 0.}, {0.6, 167}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 167]& , 
                  TagBoxNote -> "167"], 
                 StyleBox["167", {}, StripOnInput -> False]], Annotation[#, 
                 Style[167, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.6, 0.}, {0.65, 207}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 207]& , 
                  TagBoxNote -> "207"], 
                 StyleBox["207", {}, StripOnInput -> False]], Annotation[#, 
                 Style[207, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.65, 0.}, {0.7, 551}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 551]& , 
                  TagBoxNote -> "551"], 
                 StyleBox["551", {}, StripOnInput -> False]], Annotation[#, 
                 Style[551, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.7, 0.}, {0.75, 231}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 231]& , 
                  TagBoxNote -> "231"], 
                 StyleBox["231", {}, StripOnInput -> False]], Annotation[#, 
                 Style[231, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.75, 0.}, {0.8, 365}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 365]& , 
                  TagBoxNote -> "365"], 
                 StyleBox["365", {}, StripOnInput -> False]], Annotation[#, 
                 Style[365, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.8, 0.}, {0.85, 278}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 278]& , 
                  TagBoxNote -> "278"], 
                 StyleBox["278", {}, StripOnInput -> False]], Annotation[#, 
                 Style[278, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.85, 0.}, {0.9, 321}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 321]& , 
                  TagBoxNote -> "321"], 
                 StyleBox["321", {}, StripOnInput -> False]], Annotation[#, 
                 Style[321, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.9, 0.}, {0.95, 401}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 401]& , 
                  TagBoxNote -> "401"], 
                 StyleBox["401", {}, StripOnInput -> False]], Annotation[#, 
                 Style[401, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.95, 0.}, {1., 452}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 452]& , 
                  TagBoxNote -> "452"], 
                 StyleBox["452", {}, StripOnInput -> False]], Annotation[#, 
                 Style[452, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1., 0.}, {1.05, 437}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 437]& , 
                  TagBoxNote -> "437"], 
                 StyleBox["437", {}, StripOnInput -> False]], Annotation[#, 
                 Style[437, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.05, 0.}, {1.1, 410}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 410]& , 
                  TagBoxNote -> "410"], 
                 StyleBox["410", {}, StripOnInput -> False]], Annotation[#, 
                 Style[410, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.1, 0.}, {1.15, 154}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 154]& , 
                  TagBoxNote -> "154"], 
                 StyleBox["154", {}, StripOnInput -> False]], Annotation[#, 
                 Style[154, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.15, 0.}, {1.2, 195}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 195]& , 
                  TagBoxNote -> "195"], 
                 StyleBox["195", {}, StripOnInput -> False]], Annotation[#, 
                 Style[195, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.2, 0.}, {1.25, 222}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 222]& , 
                  TagBoxNote -> "222"], 
                 StyleBox["222", {}, StripOnInput -> False]], Annotation[#, 
                 Style[222, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.25, 0.}, {1.3, 261}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 261]& , 
                  TagBoxNote -> "261"], 
                 StyleBox["261", {}, StripOnInput -> False]], Annotation[#, 
                 Style[261, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.3, 0.}, {1.35, 201}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 201]& , 
                  TagBoxNote -> "201"], 
                 StyleBox["201", {}, StripOnInput -> False]], Annotation[#, 
                 Style[201, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.35, 0.}, {1.4, 93}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 93]& , 
                  TagBoxNote -> "93"], 
                 StyleBox["93", {}, StripOnInput -> False]], Annotation[#, 
                 Style[93, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
             Directive[
              Opacity[0.5], 
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.7]]], 
               RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051]]], {{
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0., 0.}, {0.05, 380}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 380]& , 
                  TagBoxNote -> "380"], 
                 StyleBox["380", {}, StripOnInput -> False]], Annotation[#, 
                 Style[380, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.05, 0.}, {0.1, 85}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 85]& , 
                  TagBoxNote -> "85"], 
                 StyleBox["85", {}, StripOnInput -> False]], Annotation[#, 
                 Style[85, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.15, 0.}, {0.2, 55}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 55]& , 
                  TagBoxNote -> "55"], 
                 StyleBox["55", {}, StripOnInput -> False]], Annotation[#, 
                 Style[55, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.2, 0.}, {0.25, 71}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 71]& , 
                  TagBoxNote -> "71"], 
                 StyleBox["71", {}, StripOnInput -> False]], Annotation[#, 
                 Style[71, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.25, 0.}, {0.3, 65}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 65]& , 
                  TagBoxNote -> "65"], 
                 StyleBox["65", {}, StripOnInput -> False]], Annotation[#, 
                 Style[65, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.3, 0.}, {0.35, 63}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 63]& , 
                  TagBoxNote -> "63"], 
                 StyleBox["63", {}, StripOnInput -> False]], Annotation[#, 
                 Style[63, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.35, 0.}, {0.4, 89}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 89]& , 
                  TagBoxNote -> "89"], 
                 StyleBox["89", {}, StripOnInput -> False]], Annotation[#, 
                 Style[89, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.4, 0.}, {0.45, 159}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 159]& , 
                  TagBoxNote -> "159"], 
                 StyleBox["159", {}, StripOnInput -> False]], Annotation[#, 
                 Style[159, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.45, 0.}, {0.5, 140}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 140]& , 
                  TagBoxNote -> "140"], 
                 StyleBox["140", {}, StripOnInput -> False]], Annotation[#, 
                 Style[140, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5, 0.}, {0.55, 212}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 212]& , 
                  TagBoxNote -> "212"], 
                 StyleBox["212", {}, StripOnInput -> False]], Annotation[#, 
                 Style[212, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.55, 0.}, {0.6, 333}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 333]& , 
                  TagBoxNote -> "333"], 
                 StyleBox["333", {}, StripOnInput -> False]], Annotation[#, 
                 Style[333, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.6, 0.}, {0.65, 348}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 348]& , 
                  TagBoxNote -> "348"], 
                 StyleBox["348", {}, StripOnInput -> False]], Annotation[#, 
                 Style[348, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.65, 0.}, {0.7, 641}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 641]& , 
                  TagBoxNote -> "641"], 
                 StyleBox["641", {}, StripOnInput -> False]], Annotation[#, 
                 Style[641, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.7, 0.}, {0.75, 201}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 201]& , 
                  TagBoxNote -> "201"], 
                 StyleBox["201", {}, StripOnInput -> False]], Annotation[#, 
                 Style[201, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.75, 0.}, {0.8, 270}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 270]& , 
                  TagBoxNote -> "270"], 
                 StyleBox["270", {}, StripOnInput -> False]], Annotation[#, 
                 Style[270, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.8, 0.}, {0.85, 285}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 285]& , 
                  TagBoxNote -> "285"], 
                 StyleBox["285", {}, StripOnInput -> False]], Annotation[#, 
                 Style[285, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.85, 0.}, {0.9, 299}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 299]& , 
                  TagBoxNote -> "299"], 
                 StyleBox["299", {}, StripOnInput -> False]], Annotation[#, 
                 Style[299, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.9, 0.}, {0.95, 316}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 316]& , 
                  TagBoxNote -> "316"], 
                 StyleBox["316", {}, StripOnInput -> False]], Annotation[#, 
                 Style[316, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.95, 0.}, {1., 365}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 365]& , 
                  TagBoxNote -> "365"], 
                 StyleBox["365", {}, StripOnInput -> False]], Annotation[#, 
                 Style[365, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1., 0.}, {1.05, 308}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 308]& , 
                  TagBoxNote -> "308"], 
                 StyleBox["308", {}, StripOnInput -> False]], Annotation[#, 
                 Style[308, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.05, 0.}, {1.1, 385}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 385]& , 
                  TagBoxNote -> "385"], 
                 StyleBox["385", {}, StripOnInput -> False]], Annotation[#, 
                 Style[385, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.1, 0.}, {1.15, 221}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 221]& , 
                  TagBoxNote -> "221"], 
                 StyleBox["221", {}, StripOnInput -> False]], Annotation[#, 
                 Style[221, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.15, 0.}, {1.2, 251}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 251]& , 
                  TagBoxNote -> "251"], 
                 StyleBox["251", {}, StripOnInput -> False]], Annotation[#, 
                 Style[251, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.2, 0.}, {1.25, 219}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 219]& , 
                  TagBoxNote -> "219"], 
                 StyleBox["219", {}, StripOnInput -> False]], Annotation[#, 
                 Style[219, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.25, 0.}, {1.3, 212}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 212]& , 
                  TagBoxNote -> "212"], 
                 StyleBox["212", {}, StripOnInput -> False]], Annotation[#, 
                 Style[212, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.3, 0.}, {1.35, 238}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 238]& , 
                  TagBoxNote -> "238"], 
                 StyleBox["238", {}, StripOnInput -> False]], Annotation[#, 
                 Style[238, {}], "Tooltip"]& ]}, {
               TagBox[
                TooltipBox[
                 TagBox[{
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.35, 0.}, {1.4, 100}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 100]& , 
                  TagBoxNote -> "100"], 
                 StyleBox["100", {}, StripOnInput -> False]], Annotation[#, 
                 Style[100, {}], 
                 "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
       AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
        Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {-0.027999999999999997`, 0.}, 
        BaseStyle -> (FontSize -> 16), 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotLabel -> FormBox[
          RowBox[{"\"Entrop\[IAcute]as\"", " ", "\"IPC\""}], TraditionalForm],
         PlotRange -> {{0., 1.4}, {All, All}}, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"Mercado eficiente\"", "\"Datos reales\""}, 
         "SwatchLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.7]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.7]]], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                  RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxU3WV01GoXhuHgDqG4B3cI7hDcIbgUCe4Q3CG4Q3CH4A7BHYI7BHcI2lIs
uJdvOH++uc+fs641q+0z+93ZbyZpaMa2vep3iCoIwoCUgvDv/4H/1GQ7XpQX
/v+f3YUWj9BKOG2V3gm7HWn5IK29oJ0Su2BpOq3uo+34u2GvKK1Moa3HtBtn
D/O1orWJtPOA9mPuZb5Q2t5Ge3dpJd8+WG9Ku5tp4Tat5d4Pm41ofwOtRtJG
jgPMN4wW19H6L9rKepD5htDyatr8TjuZDnG9B9LqCtr+QnsZDrOe/Wh9Ge1+
pIV0R1jP3rS5mPbf01Lqo6xnT9peQItvaSWFw7zlaXcuLTi0lvQY85al/Vm0
dJg2Eh9n3lK014FWDtD6c9otfoJ529HyNNp8QjvxTjKvRquTafsR7cU+xXoX
ovUJtLWdFmKeZl6ZNsfSzlZainaGefPSRhPa20SLt2g911nmbUgLG2j5Om1m
P8e89Wh/KK26tPGT9uqcZ97BtH6Jtr7RQq0LzDuANs/Tzmdaqn6RefvS9hna
+0ArVS4xr067J2nhPa1VvMy8PWj/GC29oQ3lCvN2pcWjtPKKtsq4zNuJlg/R
2kvaKXmVedvT6n7aeEZ7xa4xb1ta30NbHi0Uuc68rWlzJ+08pKWCN5hvPG3b
tBjjJuuZn7bG0O4WWo56i/XMQzsG7W+k1b+0kfM26zmcVq7R+m/aVe+wnkNp
7Qpt/qD92ndZz0G0cZG2v9JizXvMt5y2ztFC+vusZzXaXEI7p2kpzQPWszJt
L6TFd7SS8iHzdafdebT8mtaSPWK+LrQ/m1bDaSPkMde7Iy3OpPUXtFvCYz3b
09o+2nxK+0WfsJ5taGM3bT+mxcJPWc9WtLWDdh/QcoFnzBtKO9to/y6t5nvO
vE1pbzMt3qb13C+YtxEtbKTlG7SZ4yXz1qeldbR6lbazhjFvXVpZTeuXaTdT
OPPWprUVtHmBdr7QUo1XzNuPts/S3kdaqRrBvL1p9xQt+LRW6TXz9qT947T0
ljbKv2HebrTo0EoEbZV9y7ydafkwrYXRTql3zNuBVg/QxnPaK/6eedvRyjTa
ekK78Xzm1WhtMu08ov3YH5i3JW1MoL37tBjzI9e/OW2NpYW7tBztE/PmpZ1R
tL+JVoXPzJuL9kbQ4gZa/0Nb2b+wvvVoeS2tubST5Svz1qHVVbRxifYyfmPe
WrQygLbO0+5nWq7+nXn70uZS2v9AS2l/MK9O24to8T2tpPrJelek3fm0cJzW
kv9iXoV2utLSUVp9RdtlfrPenWhxFq2/pC3xD/N2oOUZtLafdhJEst7FaHUq
beyhbY8Wi/xlvVvT1k7afUgLsYWXyNuCNsfT/j1aihEFNprR9hja20IrUaPC
eh7aNWhhEy3fpM2c0WCnAS2tp9VrtJ0tOvOqtDiU1q/Q1g9aqBODeQfR5kXa
+UpLNWMyb3/aWE57n2gxfSzm7UNbS2jhAy2nic28vWhnIS29o9WUcZi3Au3N
o8VjtJ4sLvOWo4U5tHyENkPiMW9pWppJqwdpO1F85i1Bi+1pfR9tPaWFYgmY
tw1t7qadx7RUOCHztqLtHbT3gFYKJGLeUNoaRwv3aDm6yLxNaWc0Ld2m1SiJ
mbcR7Y2klRu0HklbOUKYdzgtr6PNX7STNQnzDqHV1bT9nfYyJWU/1Kb1FbR1
gRakZMxbgzaX0c5ZWkqXnHmr0kZv2jtFi/4/R1RskyLV/nL/8lZK8bK82SDO
8gIjT/2z1TNgfUDB2ZUTXPpn4UTA7u29w0NvX/1n+W3A8o+Lbo7LN/5ZS5Hy
ZfnwYR2/7Bh6+5+dbgFPzJDm2+uIu//szw14UM5KmaZlfvDPakTARvtm8+rm
fvTPRtJUL8s/94d/qBnN+2evc8BWgQvJej74z+LsgN0ds1v3Wfnkn5XDAT/o
eaD/0MZP/8ubOPXL8srBuqUH//jPbqmAY9/4VKPQ1Gf/5TUDnqi2n6Qmev5f
3gMBu51X3mwx5j87CdO8LD82ao4ql8L/s188YLdS+S7RlBf/LLUL+GTBfifq
TvrPxt6Ah52deeDTyf9sPwnY/tAjQeZP/1ksmvZl+amJbr6LnvTlf3m1gMeG
rr6+K/t/tnYF7Jf4GVkh3392H/F1IU46fL3WMh2+vzkhHX6+fz8d8kkx0yO/
0Tw93p89Nj3ev3g3PeqjRMuA+ul5M7C+ozKg/sLmDFgfTZCwfmYuCevrj5Cw
/tIGCf1h/JHQP3b2jOgvcVhG9J+yNiP6U3czon/dLJnQ30LdTOh/bVUmHn+X
aD9jZh5/tWjDou3ztJghC+dbddpaSrtnaDltVp6vVaGdRbR/klZTZWPeirQ3
nxaP03ry7Myr0MJcWj5Km0lyMG8ZWppFq4doW8zJvCVpZQat76fdBLmYtzit
TaUdj/bj5ma+1rQxifYe0mLsPMzXgrbG08J9Wo6Rl3nz084Y2t9Cq1HzMW8e
2jNocROt/6WtnPmZdwQtr6fN37STTeb6D6XVNbT9g/YyF2DeOrS+krYu0kLG
gsxbkzaX0845WkpfiHmr0UYf2jtNix9ovXJh5u1Fuwtp+R2tpSzCvN1pfx6t
vqaNZEVZ73K0OIdWjtBWSDHmLU0LnWjtIG2+oP0SxVnv9rQ6nbaf0l78Eszb
htan0NZuWohbkvUuTJsTaWcH7T+g1QKlWO9Q2ttGi/doJXpp5m1Ku6Np+Tat
RSnDvI1ofyQtbaSNSNrOUZZ5h9PKOlq/SrtZy7HeKq2tps3LtPOdlmorrPdA
2r5Ae19opUZ55u1HW8to4RMtp6vAvL1pZzEt+bSauiLrXYn2FtDiCVpPUYl5
y9PCPFp2aDNpZeYtS0uzafUwbYTRXqkqzNuR1g/Q1nNaKFGVedvR5l7aeUJL
Rasxr0bbu2jvEa0Uqs68LWlrAi08oOWYNZi3Oe2MpaW7tBqtJvM2ob1RtHKL
1oVaPN4a0sJIWrtOm39ov15t5h1GGy7tZanD9a9L66to6xItZKrLetaiTYt2
ztNSBpX1rE7bS2nvDK2krce8VWh3ES2corVU9Zm3Iu3Pp6XjtJG8AfMqtDiX
1l/RVpKGzNeZlmfR5kvaERsxXwdanUHbz2gvQWPWsy2tT6VdjxbiNWE9W9Pm
JNp/SEuxmzJvQdoeT3s2rcRoxrz5aXcMLWyltajNmTcP7Ru0tIk2/tJ2zlCu
/whaWU/r12g3WwvmrUdra2jzCu1nbsm8dWhjJW1fpL2vtFKzFfP2p91ztPCZ
1qq1Zt4+tH+alj7QRmWNeXvR4klaeUfrKdswb3damE9rr2kzWVvm7UJLc2gj
nLZD2jFvJ1qZSVsvaDdRe86D9rQ2/Z//f33Eedoe10/8+B1wfUVtQxtTaO8x
LcbtCOutaGsiLTyk5VidYDOUdsbR0j1ajd4ZtpvS3mhauU1bubvw+lIjWt5I
azdoJ0dX2K9Pq+to4yrtZe3Geqq0vpq2LtNC5u7MW5s2V9DOBdr/Qqs1ejBv
P9o7S4ufaL1qT+btTQunadmnzUq9mLcnLZ2g1be0kUJn3m60OI/WI3ReL0/a
G8eL0KU3j6/ZtHaYdhL34TwoRasmbRygvYR9OQ9K0Eo72tpLu09ouWg/5tVo
czLtP6KlOP2ZtyVtT6C97bQScwDnrUy7Y2lhG61FG8i8eWmnCS1tptVbtJ1r
EPM2pMWRtH6dtv7QQv3BrPcwWltLOz9pP8sQ5h1MG6to7xstZhrKeteiLYt2
z9NyhmHMW512ltL+GVr6SBtVhrPeOi2eopX3tFVxBPP2oIUFtPaGNpOPZN6u
tDSXNl7RdhKD9S5DK7No/RDtiqOYtxStzaDN/bTzjJaKj2Z/tKXtPbTn0UqR
MczbmnZ30sIjWo49lnlb0M54WrpPqzHGMW8z2htDK3doPep45m1MC6NoeRNt
/qWdnBMw36UREzD/1fUTeD7xewLuR3nZJvJ+1dCJuJ+lr5mI+13uj4m4HyZk
mYT7ZdqgSbifZq6chPtt/tdJuB8nZZyM+3VG/8m4n2cvn4z7feLnybwfmH4K
7hdafabgfqK7ZAruN8ofpuB+pJZmKu5XOr2m4n6mv3Aq7neq76bifqiRchru
l3rdp+F1cf40fL3+ehq+v5VsOn6+0HU68slzpiO/GT4d788JmYH3L3Wagfqo
M2egfvaLGaivl8hE/ZX2JtZHn25i/dynJtZXSDCT699mJvrDnDKT99sfz0R/
SXFnof+MVrPQn/bEWTzfeTgL/a3Emo3+t0Jn8/gaR8v3aC36HB5PTWl/NK3e
po0oc3n8N6JFg9Zv0FYkLTSYx7zDafMq7fyiJXU+8w6h7cu0951Wai9g3oG0
e4EWvtJajYXM2492ltHSJ1pNt4h5e9PeYlrxaT31YubtSQsLae0tbaZYwvXv
RkvzaCOCtpMu5fp3oZXZtBVGu4mXcf070ppJO89pP+Fy1rMdbUyjvSe0GN9i
PTXamkwLj2k5zgrWsyXtTKClB7QacyXr2Zz2xtLKXVqPtor1bEILo2ntFm0K
q1nPhrQ0kjau0/YfWqy/hnmH0ZZLuz9pIeta5h1Mm6to/xstZVrHvANo26LF
L7SSYT3z9qXdpbT8kdbSbuD667S/iJZO0UaqjcxbkRYX0Mpx2kq+iXkVWuhG
a0dp8xXtl9nMvJ1pdRZtv6Q9cQvzdqD1GbT7jBYSbmW9i9PmVNrZQ0vxtjFv
EdpoTXs7afERrRe0We8WtDuelu/TWoztzNuM9sfQ0lbaiLqD9c5Di6NoZROt
36TdnDtZ74a0tp42r9HOb1qqt4v1HkrbV2jvBy1m2c28g2hrJS18o+WMe5i3
P+0sp/1ztJp+L+tdjfaW0OIZWvlAW5X3sd69aPkkrb2jnQr7mbc7Lc2njde0
newA83allTm0FU67IQdZ7zK0NpM2D9J+okPMW5JW29P2Ptp7SivFDrM/2tDu
blrwaK3wEeZtRTsTaekhrcY6yryhtDeOVu7RenSH9c5HC2NoeQttRjnGvLlp
yaDVjbRxg/ZyHGd/NKD1dbR1lRaynWBelTZX085l2v9Oq7VPMu9A2rtAi19p
vcYp5u1HC+do+RNtVj3NvL1p6TSt+rRd6Qzz9qTFhbT+lrZSnGXe7rQ8jzYj
aCfpOebtQquzaTuM9hKfZ/92pHWTdp/TQqILPN7a0eY02n9CS/Evcv012p5M
i49pJc4l1rMl7U6g5Qe0FvMy69mc9sfS6l3aiHaF9WxCi6Np/RZtCS7r2YiW
R9Lmddr5Q0v1rzLvMNp2ae8nrdS9xryDafcSLXyntVrXmXcA7Z+npS+0Uf0G
8/alxbO08pG2qtxkXp2WT9Hae9qpeIt5e9Dqcdp4Q3vKbebtRutHaesVLZS9
w7ydafMQ7bykpVJ3mbcDbe+nvWe0Uvwe87al3T208ITWitxn3ta0v5OWHtFG
wQfM24IWt9PKfdrK/5B5m9HyVlq7Qzt5HjFvY1rdRBs3aS/nY+ZtSOvraeva
Pwfdv8zu4fqfXM/j/dY1Hq4fOlc8XF+UsjzB9Ue1zhM+z7HyCa5fehef4Pqm
kvEprn/qNZ/y+ujyp7h+Kpx/iuurWvpnuP5qVnuG67P+kme4fiudeYbru0aa
53xepvJzXB8WFz3H9WPl5HNcX7ZSvsD1Z7fCC1yfFnq8wPVr7dgLXN82X/N1
v9xLfL3U9SW+v3HkJZ9HCn+JfGKZMORXOoXh/VkHw/D+3RdhqI8ghqN+Wvtw
1nd6OOrvPw3n/YcEr7B+RptXWF97yiusv7f7FfpDiRuB/tELR6C/3IkR6D9h
ZwSfV3sYwf4t8Br97YS+Rv9L9mseb/doO98bHm9NaXEMrd+mrShvOb8a07JB
axtpJ/It8vo53vF+1PB3/P2Gde94P+oXLWZ7Dysqba2m3cvvUW85s4/10Gr7
WC9zoI/19C/4fP7rq49+MGp8QL/Y/T6gn8RzH3g/5dMH9KOe7iP61e39kf28
5CP6XfM/4ngwU3/i84A9aWkhrZ6g7RSfYa88rcyjdYd2k36BhXK0Nps2D9NO
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
kfarbGfe3rRxirbf016qHczbk9YX0O4bWkixk3m70eZc2n9FS0l3MW9n2p5F
i2G0kng369uBdmfQ8nNaS7iH/dCW9qfS6hPaiLeX9WxNi5Np/RFtxd7Herak
5Qm0eZ92YuxnPZvT6ljavkOLeQ+wnk1oaxPt3qTlXAdZz4a0s572r9Fq9kOs
Zz3aW0OLLq1nOcy8dWhhFa19o82MR5ivPy1ZtPGZttMfZb6+tLKUtj7QbhqH
9dRpbRHtvKP9lMdYzx60MZ/2XtNi8uOsZ1famkMLr2g5yQnWsxPtzKSll7Qq
nmQ929PedFp5RusJTrGebWhhKq15tBn3NOvZipYm0epO2o51hnkL0Mp4Wrdp
N/pZ5s1Pa2NocwvtRznHvHlow6DtjbT4l1Zynuf6D6fddbT8m9ayXeD6D6H9
1bT6gzYyX2Q9B9LiSlr/SlvSJdazPy0vp7VztJPuMvNWpdUltHGa9lJfYd7K
tL6Qtk7QQkqXeSvQ5jzacWgp2VXmLUfbs2nvMK2EXGPe0rRr0sJBWkt0nXlL
0P40WtpHG/FvMG9RWpxCK7tpK85N5i1EyxNpbQdtPqB9+RbzhtLGNtq+S4v5
bjNvU9raTLu3aCHKHeZtRJsjaf86LUXSRv27zDuM9tbSyi9az3qPeQfTwmpa
+06bme6zf2vR0gpavUDbGR4wb3Va7EfrZ2nrIy1Ufcj+6E1ri2nnPe2nesS8
PWljAW0fp8UUj1nv8rQ1l3aP0nJSj3nL0mZn2j9ES2G0UeoJ83agxQO08pzW
Ez5l3ra0MI3WntBmvGfM25qWJtPqLtqO/Zz9UZBWJtD6dtqN8YJ5ZVobS5tb
aT/qS+bNS6tNaHsT7d2klVxhzNuQdtfTwnVayx7OvPVofw0tubSR5RXz1qHF
VbRyibYyRjBvTVq2aO087aR/zbzVaHUpbZyhvTRvmLcKrei0dZJ239FyxbfM
24N2jtH+a1pV3jFvV9o7QouvaL3Me+btRLszafklrYk+87an/em0+ow2Enxg
3ja0OJXWPdqK+5H92pqWJ9HmQ9qJ9Yn92oJWx9P2PdqL/pnr34zWx9DubVqI
+oV589CmQTsbaekvreb8yrzDaW8drfym9WzfmHcILayhtR+0mfk7138gLa2k
ja+0Lf3g+venleW09Yl20/1kPfvQ2hLa8Wk/9S/WsxdtLKS9t7SY8jfr2Z22
5tHCa1pO9of17EI7s2kpnFZDIlnPjrRn0soLWk/0l/VsRwvTae0pbcYXwlFP
jZam0MZj2o4TBRZb0cpE2npAuzGjwnIorY2jnbu0Hy0arDaljdG0d4sWo0SH
9Ua0NZIWbtByJG3Wj8G8w2jpKq3+ou26MZl3MK1cpvXvtJUpFvMOpOUVtPmF
djLEZt5+tLqMtj/SXto4zNub1hfT7ntaSB2X69+TNhfQ/htaShGP69+NtufS
YgStJI3Penam3Vm0HEZriROwnh1ofwatPqeNhAlZz7a0OI3Wn9BWvESsp0bL
k2nzEe3EFlnPlrQ6gbbv016MxKxnc1ofS1tbaSFaCPPmpc1RtLOJloQkzJuL
tkfQ3npa+UPr2ZMybz1aWEvLLm1mSca8dWhpFa1eou2MyZm3Ji0OoPXztPWZ
FqqnYN6+tHmGdj7QfpqUzKvTxiLae0eLqVIxbw/amk+7x2g5eWoebwrtzKH9
I7SaJA3zlqHtTrR4iFZe0lbJtMzbnhZm0Noz2kyQLhz/fl2bgIOeF5CmBhz8
79d5AQc/bxM3fXjw8whe4YCDnx+eFHDwvxe4M+Cg5x3cWBnCg5+HEAoGHPS8
hDY+4KDnKUw74KDnLZx7AQc9jyHll8Lx7381Czj4eaYtAQc97+HdDjj4eZCo
GcPx7+c0DjjoeRLLCDjoeRPhZsBBz6PIfwMOel7FbJApHM/vDw84+N//WRdw
0PMw6m++bmTLjK/3hmTG9xfXZMbP139kRj4rcxbkd2tnwfuTV2bB+9cuZkF9
HCkr6ufXyMr6Ls+K+hvnsmJ97E9ZsX5itWxYX6VPNqy/dTob+8PPhv6RK2dH
f2m9sqP/zIXZ0Z/+2+zoXyllDvS30T0H+t+el4PH32taSZaT86Mc7c6mhSO0
FpKLx19p2jdp6SCtvqDtErk579rRyj5af0q7RfMwbxta202bj2knTl7mbUWr
E2n7Ae3FzMe8obQ+jnbv0kL0/MzblDZH0/4tWooiM29u2h5JextoJZLWcxRg
3mG0sI7WftFm1oLMO5iWVtPGd9rOVIj9O5BWVtDWF9rNUJj7XT9aW0Y7H2k/
bRHWszdtLKa997SYuijr2ZO2FtDCW1pOUYz17EY7c2kpglaTFmc9OxfHfPBm
Fcf8UMKKY77oiUtg/rgdSmA+CWYJzq/nJTDfzIQlMf/8tiUxH6VpJTE/jScl
MV/teKUwf0WtFOazMrkU5rf1qBTmuxu7NOa/3LI094cJpbF/OPdLY3/xY5TB
/iPJZbA/GWPLYP+yt5bB/iZGK4v9T8lbFvujNYqvu5vK4utloRy+v5arHH6+
M6Ic8vnryyG/+qcc3p+RXcH794YqqI+4VkH99J8K65ulPOrv1imP9ZFXlcf6
aZfKY32djBWw/n7NCugP1aqA/jHO0176irBYndaX0tYZWkhbiftvFdpcVAl5
nJOV2K+pKuP9qBUrs1/nV0Y9vGOV2a/Jq6CeulKF/TqnCtZDOFqF/ZqkKtbT
LFOV/TqzKvv1UFX2q1iN/VqyGvt1RjX26/5q7NcE1dmvxaqzX6dWZ7/uqY6f
b3rV2a+FayC/1LoG+3VnDbx/+2EN9mvBmqif0qIm+9WuyX69V5P9mr8W+7VZ
Lfbrllrs19u12K95arNfG9fGPPQ20uJNWs9ZB7Ya0MJ6Wr5Ga7/r4Oc7al3O
2yF1kV+9Upfz9kddvH+vtsp5O0hF/fSLKuv7VWX/SvU4b/vXY/8ur8d5+6ke
+zddffSH2qc++3dJffbv6frs3zQN2L+VG7B/F/J190QD9m/KhuzfCg3Zv90b
sn+dhuzf1w3Zv+UasX+7NOLntdmN2L/hjTgfQhqzfzs2xvoIMxtj/eSDjbG+
ZqImWH+nRBP0hzS9CfpH3dcE/WU8bcLPw0Wb4nxAbNOU5wu7m+J8wnrcFOcb
bpxmPL9pRWsTaecB7cdszvObUNoYR9vbaDF6KM8f89HWaNrdTAu3aS13C56f
NaL9DbR0g1Yjabt+S55PDqOVq7T+i3brtmLeIbS8mja/006m1sw7kFZX0PYX
2sugsd41aH0ZbZ2lhXRtmLcqbS6mnVO0/55WK7Vlf/SkveO0+LYt+lUv3479
3K0d+t2d2w7HgxzRDseLlrQ9jienc3scb/6s9txPwtrjeDUSd8DxbJfqwOsP
ZgfMA+VAB8wLK2FHzBO3eEfMG3laR8wjbW9HzCvzSUfMM79IJ847rRPmobGr
E+al/agTr+8U6ox5q7TsjHlsbe+Mee3e5+tCzC74eq15F16fGtsFP9+/04Xn
Q9G6Ir/RpCvenz2qK6+f3eqK+ihCN54f5+rG+o7ohvoLG7phfbQ/3Xj9L3t3
rK8/tDvPN9d2R38YP7ujf+wsPXh+MbgH+k9Z1QP9aX3rwf7N2BP9LQ/oif7X
rJ483j7TfvpePN760sZS2vtAi2l1zgedthbRwntaTtWb86EH7cynpTe0mrwP
51lX2ptDK69oPUlfzt9OtDCL1l7SptiP9WxPSzNo4xltJ+jPerallam05dFu
3AGsZ2tam0Q7D2k/1kDWswVtjKdtmxZjDGLe/LQ1hna30HLUwcybh3YM2t9I
q39pI+cQrv9wWlxP679pK9tQrv9QWl5Da1doJ/Mw5q1Nqytp4yLtScOZtyat
L6etc7SQfgTzVqO1PrRzmvZ9Wq08knl70d4JWnxH6xUM5u1Ou/No+bXB+ZVs
FOab02UU5p8/exTmoxo+CvPTCBnNz3MdR/P6w8zRmM/6i9G8/p9oDOa7W2IM
z9enj+H+sG8M9g8n/ljsL37Rsdh/1CljsT8Zu8fy+k6ccdjfxMLjsP/pE8fx
/sqOcdg/3QfjsL/KBcZz/w0dj/3Z2TYe+7d/l6+r+Sbg642mE/D9vc0T8PPF
2xOQT4kykfevGk3E+3NHTsT7l29M5PlN5ETUz6k/ifUdNon339ZNwvoYvybx
ek/WyVhfcchkrL+yejL6w/o+Gf3jZprCz/u1p/D8ccUU9Kd5YQr7N8NU3t+s
MRX9r/abyvl7lvY+0krVaTz+etPuKVrwaTn1dO5vPWlnAS29pdUUMzgvytPe
XFp0aD2pyXlRlnY70/JhWgujnVIzOd860JJJG89pO+Es5m1HK9NofS/txpvN
eheltcm0uYt2HtFSoTmsd0va3k5792kx5lzmbU5bY2nhLi1Hm8f8eWlnFO1v
olVhPuudi/ZG0OIGWrlOW9kXsN71aHktrbm0+ZP26yxkvQfTxiXa/kaLtRYx
7wBat2j3My1kWMy8fWlzKe2coaW0S1jvKrS9iPZO0kqqpcxbkbZ60MJxWn5D
m8oy5u1KS0dp9RVtJFnOvJ1ocRatv6Qt0WK9S9LyDFrbTzsJVrA/itHqVNrY
Q9seLRZZyXq3pq2dtPuQlguuYt4WtDme9u/RUozVzNuMtsfQ3hZaibqG9c5D
uwYtbKK1v7SZcy3r3YCW1tPqNdrOto55VVocSutXaOsHLdRZz3oPorWVtPOV
9qUNzNufNpbT9jlaTL+R9a5GW0to9zQtfKC1yptY7160f4KW3tFqys3M2532
5tHKa1pPtoX5y9HCHFo+QpshW1nv0rTfkVYP0sYL2iuxjfVuTyvTaesp7ca3
mbcNrU2hzd20H2c7612YNibS9g7ae0ArBXaw3qG0u40W7tFy9J3M25R2RtPS
bVqNsot5G9HeSFrcSOuRtJVjN/MOp+V1tPmLdrLuYb3r0upq2rhMe5n2Mm9t
Wl9BWxf+Oej+yJe9vB5XYx/O97V++/B5wDm7D58X/I/78HlCrbqf9yd778fn
Ee/UfnxeEf39+DyjVzqAzztWzwP4POQuOIDPS/LbA/g8paU4yM9b3Q7i85g/
9yA+r6kRB3n/LOkhfN7zOh/C50Fx9iH+vmDYIXyetBIfxudNoeNhfB6VzcP4
vGo+5+tOwiP4eqndEXx/ddoRXu9+cgT5vHhHkV/RjvL3MScfxfu3dh3l/f84
Dq/XF3JQX3OCw+sF2x2sjxTzGNZPlY/xfsLYY1h/b+sx9IcS7Th/vyLvcd6v
bnKcvw+0+Tjvh9w6jv41c53g9ZiGJ9D/0oYTPN6u03b2kzze6tHiMFp3aesn
LdQ9xfkwmDYv0c432s94mnkH0IZFe59pMcMZ5u1LW0tp9wwtpz3L/aMK7Syi
/ZO09J42Kp5jvXvQ4nFaeUPryc8zb1damEtrr2gzyQXmL0NLs2j1EG2LF1nv
krTYgdb309YzWih+ifVuS2tTacej/biXmbc1bUyi7Z20GPsK612QtsbTrk0L
92ktv8t6N6P9LbR0h1ajXmXexrRn0MrNqzi+9b9XeT815zXMB2HENc6P9df4
+9C/r/F+arbrmE/S0Ou8n7rmOu+nXrmO+edlvsH7qXVuYH7qK2/wfurFG7zf
9/UG53PNm7ze2P8m5rtz7ibvp366yfup6W/xfmqfW9xfltzi/dQPt3g/Nc1t
3k/tdZv3UxfydeHkbV7PTXkHNivQ/jxaOkYbye7Cdjna60IrR2g9nHZL3+P+
3YnWDtLmC9pJdJ9529PqdNp+SnvxH/D3i4rR+hTa2k0LcR/y94sK0+bEhzzf
2PGQ188f8HW1wCPWO/QRr59ve8Tr5/ceoZ/0fI95/bzpY14/H/2Y189vP2Y/
R/F4PtfI4/XzkR6OF/WGx+vnkR6vn+d4wuvnw5/w+vm6J7x+/usJr59nfcrr
5+pTXj9f/ZTXzy8/5fXzTM94/bz2M8wrY8UzzrsLtPeFVmo85/7Sj3bP0sIn
Wqv6gvO5N+0spiWfVlO/ZN6etLeAVt7Seoow7i/laWEeLTu0mTScecvSfmda
PUwbYbRX6hX3w460foC2ntNCiQjmbUdr02jnCe3He828Gm1Mpr1HtBjnDetd
iLYm0O52Wo75lnll2hlL+1tp6S5t5H3H/mhCi5tp5RZt5XrPvA1peQOtXafN
P7Rfz2feYbTh0vZPWqz7gXkH09Yl2v1GC5k+Mu8A2rRo/zMtZfjEvH1peykt
fqSVtJ+ZV6fdRbRwitZSfWHeirQ/n5aO00byr8yr0OJcWjn6FfPRSvIN89Mt
8w3zVZ71DfNXO/QN89kRv2N++yW/8/dRZ3zn7z/t/87Pqwl+cP8o/gP7iz71
B/Yfa88P/n5WvJ/Yv+QiP7G/mZN+8vnBnT+xP/oPf2L/VAv+4u+XtfjF6wH2
L+7P939h/9bz/+b5RLPfPF/b+hvnB/Idvm7m+cPzn8Z/8P2lTX/w89Wbf5DP
zhnJ6y0NIvH+lPWReP/6tUjUx832F/UT6v3l9aA1f1F/88pfrI+fWXiFv7dd
J+Dg31dfGXDw35u7GHBQf4gZo7wK7h+lZsDB1yuWBxzUf+65gIM/b6SP+grX
26oFHHy9YknAwc8Xn/7noOPrA21UjgbbvWjxJK28o60K0WG3Oy0fo7XXtJks
Bux3oaU5tBFO2yExmbcTrcyk9YO0mygWLJSktem0uY/248dm3mK02oa2d9Pe
Y1opHId5W9HWRFp4SMux4jJvKO2Mo/1ttBo9Huudj/ZG0+IWWrlNW7njs96N
aHkjrd2gzUjar5+A9R5OG1dp+xftZU3IvENofTXtfqeFzImYvzZtrqCdC7Qk
iax3DdroR3tnafETrVdNzHr3pt3FtOwnxnzQUodwfvQMwXzxF4Rg/kgnQjCf
jBRJML/s8kkw38R5STD/FCcJ5qMekQTz0y2bFPNV6BJw8O+fHQ44eD6HBRw0
v53EyV4Fz3epY8DBf2/VDDj4eZfnAQf/vcqEyV8F7y9iiYCDP59OCzhof7L2
Bhy0fwnxU7zC5+miAQfvf5MDDtofnV183X/Er1cLpcT3N1qmxM/3tqdEPvFB
SuTX5VR4f1bzVHj/7thUqI98NxXqp0VLzfo2SY36+6NSY33UW6mxfoaQBuvr
NUyD9RdHpmF/bEiD/rH+pEF/udnTov/kYWnRn9ratOhf52da9LefJR36Xx2c
jsffKtr7RouZ0vP4G0BbFi18oeUMGTgv+tLOUlr6SKtpJc43nfYW0cp7Wk+V
kfOhBy0soLU3tJk8E+dxV1qaSxuvaK9MZtazM60foq2XtFAqC+vZgTb3084z
WiqelfVsS9t7aM+jlSLZmG8S7e6k5djZWc+CtDOe9m1ajZGD9cxPe2NocSut
R83JvHloYRSt3aTNv7TfIBfrOYI2rtH2b1qsl5v1HEpbV2j3By3XycO8g2jn
Iu1/pdWaeZm3P+2do8XPtF4tH/P2oYUztPyBNivnZ76FtHSSVt/RdgWZebvT
yjFaf0275Qowb1daO0Kb4bRfuiDzzaSNg7SXqBDrWZLWp9PWPlpIUJj1LEab
U2hnNy3FLcK8hWl7Iu3toJVYRZm3AO2OowWb1qIXY958tD+alrbQRpTizJub
Fg1a2UhbkbSbowTrOZzW1tHOL9rPWpL1HEIbq2nvOy1mLsV6DqStFbTwlZal
0qxnP9pZRvtnaTVdGeatSnuLafE0racuy7yVaGEhLZ+gzRTlmLc87XejVYc2
ImivrMK8XWj9MG2F0ULp8szbkdZM2nlO+wkrMG872phG23tpMX5F9m9R2ppM
u7toOU4l5i1Emy1pfzstPaANuTLzNqe9sbRyl9ajVWHeJrQwmpY306ZQlfXO
RUsjaXUDbVynvezVWO/6tL6Wtlza/UnLdauz3oNp5xLtf6OlTDWYdwBtW7T4
hVYy1GT+6rS7lBbO0lraWqx3FdrRaekUrb6n7Yq1We8etLiA1t/QVvI6zNuN
lufS2lHaSVKX9S5Dq7No4xBtv6TFUirr3YG29tPuM1pIWI9529LmVNr3aCle
feYvQtuTaG8nrcRuwHoXpN3xtLCdlu/TZv6GrHczWtpKq3doO08j5m1Mi6No
/SZt/aWFho2ZdwRtXqOd37RUrwnzDqWNNbT3gxazNGXeQbS1kha+0XLGZszb
n3aW09JnWk3fnPXtQ3tLaOUDracJZT/0ooVFtPaONlO2YP92p6X5tPGatpO1
ZD270soc2gqn3ZBWrGcn2jxIOy9oqWRr1rM9be+jvae0UkxjPdvQ7m5a8Git
cBvmbUX7O2jpIW0UaMu8obRo03r0dqxnPloYQ8tbaDNKe9YzNy0ZtLqRtiNp
L0cH1nM4ra+j3V+0kK0j6zmENlfT/ndaytyJ9RxI2yto8SutSJ1Zz360u4yW
P9Faui6sZ2/aX0yrPm2k7sp69qTFhbT+lrZSdGM9u9PyPNqMoJ2k3VnPLrQ6
m7bDaC9xD9azI62btPucFhL1ZD3b0eY02n9CS/F7sZ4abU+mxce0EkdnPVvS
7gRafkBrMXuzns1pfyyt3qWNaH1Yzya0OJrWb9GW0Jf1bETLI2nzOu38oaX6
/Zh3GG27tPeTVur2Z97BtHuJFr7TWq0BzDuAdixa+kKrGQYyb1/aW0orH2k9
7SDm1WlhMa29p81Ug7n+PWhpAW28oe3kQ5hXoZW5tH6UdpMMZd6ytDaLNg/R
zktaKjWM9e1A2/tp7xmtFB/OvG1payotPKHleCOYtzXtTKL9nbQaeyTrXZD2
xtPidlqPYTBvftptRstbae0O7eQZxbyNaWkUbdyk7b+02HA06z2C1tfT7m9a
yD6GeYfS5hrauUJLWcay3nVoeyXtXaTFb7Recxzr3Z8WztPyZ1pLP555+9D+
Elr9QBtpJjBvL1pcRCsnaSvlRNa7Ai3Pp7VjtPma9stNYr270sYR2g6nvZDJ
zNuJ1mfS7gtaEKcwb3vanE47+2gpwVTWuxhtT6G93bQSdxrzFqatVrSwk5Yf
0maB6cwbSvvjaPUebUSfwbxNaXEMrd+mrSgm8zamZYPWNtJOJO3nmMm8w2lj
He39osVss1hvlbZW0+5lWs48m3lr084K2r9AS19po8Yc9kc/WjxHK59oq+pc
5u1Ny6dpzafN1POYtyctLaSNt7SdYj7zdqeVebQVQbtJFzBvF1qbTZuHaT/x
QuYtTRsmbR+gxUSLmLcEbU2j3b20HH8x8xalncm0v4tW4yxh3kK0N4EWd9B6
zKXMK9PCOFreRpvRljFvXloaTaubaVtYzry5aGUkrW+g3T+0kMNiPYfR5lra
/0lLWVewnoNpexUtfqeVTCtZzwG0a9HyF1rLsIr17Ev7S2n1I22kXc166rS4
mNbf01aqNaxnT1peQJtvaCf5WtazG63Ope1XtJdkHevZmdZn0dYhWki8nnlL
0eYM2tlPSwk3MG9x2p5Ke3toJd5G5i1Cu5NoYRetxd7EvAVpfzwtbaeNGJuZ
Nz8tjqWVrbQVdQvz5qHlUbS2iXb+0n7OraznCNpYT9vXaDH7NuatR1traPcK
LWexmbcO7ayk/Yu0mnE789akveW0eJ7W0+9g3mq0sJSWz9Bmmp3MW5mWFtHq
SdpOuYt5K9DKfFo/RrvJdjOvQmtzaPMI7YfsYd4ytNqJtg/S3gtaKbmXedvT
7j5aeEZrxfYxbxva301LHq3G3c+8rWhvIq08pPVYB5g3lBbG07JNm9EPsh/y
0dIYWt1C21EOMW9uWmxM6xtp6wYt5DzMvA1obTjtXKX9X7SqHuHxNoS2V9Pi
D1rJfJR5B9LuClq4SGuSw3rXoP1ltHSOVj/RdtVjrHdvWjlN6z5tpT7OvL1o
eSFtvqWdFCeYtzutzqMNh/aSnmS9y9H6bNo6TLthtFz6FOvdkXYO0P5zWkp0
mnnb0fY0WnxKK/HPMK9Gu5NpYTetxTnLehei/Qm0tIM2Yp5jXpn2mtPKNlq/
S7t5zzNvU1rbTJu3aEe4wLyNaHUkbV+nvT+0Uv8i8w6jXZcWftFy1kvMO5h2
VtHSd1rNdJl5B9CeRStfaD3DFfZHdVpYRstnaTOty7xVaGkxrZ6i7VRXmbci
rSyg9eO09YYWyl9j3m60eZR2XtFS2evM25m2D9HeS1opdYN5O9Duflp4TmvF
bzJvW9rfQ0tPaKPILeZtTYu7aOURbRW8zbwtaGECrd2nzRh3mLcZLY2ljTu0
HfUu8zahlVG0dZN2/9Jyw3vMO4J2rtH+b1qtd595h9LeFVr8Set1HjDvIFq4
RMvfaLPmQ+btT0vnafUzbVd7xLx9aHEprX+grTSPmVen5UW0+Y52UnrM24NW
59P2a9pL9oTr35XW59BuOC0kecr170SbM2n/BS2Jz7j+7Wl7Ou3to5UEz5m3
GO1OoYU9tBb3BfMWpv2JtLSTNmK9ZN4CtDieVmzaih7GvPloeQytbaGdKOHM
m5tWDdrYSHuRtJjzFes5nLbW0cJvWs4WwXoOoZ3VtPSDVjO/Zj0H0t4KWvlK
69Ib1rMfLSyntU+0me4t81alpSW0epq2U79j3kq0spDWT9BuivfMW4HW5tGm
Q/tJfeYtRxuzafswLYZ8YN7StGXS7gFaTvSReUvQzjTa30tLT2mj6Cfm1Whx
N608pq1Cn5m3JS3voLUHtBnzC/M2p6VxtHGXtqN9Zd6mtDKa1jfTrvDtVfDz
hULub3j+UBv5Dc8nmhu+4flF/883PN8o5fiO5x/V+t/xfKS99juen/Tc73i+
Usn6A89f6nV/4PlMa/APPL8pXP6B5zvl7z/w/KdZ6yeeD3UG/MTzo771E8+X
ql9+4vlTI8MvPJ/q9f3F51eX/cLzrcrZX3j+1Ur7G8/HulV+4/lZefFvPF+r
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
CFot1495u9D2bFoM/+f/n98oIf1x/mN17I/zI9ek5Re0lmgAbJag/Wm0tI82
4g+E7aK0OIVWdtP6Y9otNAgWWtHaDtp8QPvyYOYNpdVxtH2X9qINYd6mtD6a
dm/RQpShrHdu2hxJOxtoKZJWcwxj3mG0t5YWr9J61uG8Xl2XFlbT8mXazDSC
eWvR/gBavUAbX2iv+kjm7UfrZ2nrIy1UNZi3N22eMnA8OO8NHC9SpVE8/nrS
xgLae0OLKUZzXnSjrbm0EEHLScdwvv2vinuPr9n+4zge9zvBT1FaMZuhRarF
3OPOGGGMMRPMZbNN5jLmGkPvl7Q117HMZm5D3O/E/V6pOzOLzWZal1Qxt/Lr
/tp5+e/5OI/q+3wvn5zz+SYdRTtptHSLVsvPZn0YTnsptHKT1svOYT0bOgfj
IyTNYT/vxhyOb6lo9vMGR7OfFx/Nft71aPbzisewnzcohv28mBh8n7R+iWE/
r0gsz4cHxLKfNzuW/ZrLseznFYzD92G1Xxy+Lxsz4/B92rsQx36YEI/v43qf
eHxft6bH4/u8cC6e5+958ejXmb0S0M9zpiTgdclNwM+rzxLY7+iRiN/vTUpk
v/F0IvtJNZPw/txuSXj/spWE8dFOJGH8nNBk9r+6JGP81SXJmB/jaDLmz6uW
gvkVO6Vg/vVFKVgf1qEUrB+hqsn7Q9qbWH/mfBPr09lvsr4GpWJ9q0oq1r89
N5X7aS+tVEzjfmpFu6m0sJvWxHTu/+a0n0xLO2ijzFzu/6a0mEgrW2mr5DfM
G0XLcbS2iXaKzWPeCFqNpg2b9grPZ96GtD6LttbSQsEFzBtOmwbtrKalV7Ra
dyHHcxrtraCVF7ReexHHczItLKe1p7RZazHHcyItLaONx7QtfcvxnEAr39FW
Lu2GLOF4jqW1b2nzCO0HL2XejrSxkLYP0mKV75i3HW3No12HlitZzNuGdtJp
fw+tVvieeVvSnkmLu2i93DLmbUYLybS8nTZL/8C8TWgpgVa30HaJH5k3klZi
aX0j7RZdzrwRtDaHNtfTfqGfmLcBrfan7Z9p7yKthK1g3r60u4oWztNanZXM
25t2ptJSJq0+p+2eq5j3K1rJoPUntNt9NfNOpOXvafMR7dRYw7zjaXUpbRyj
veo/c/12pvXFtHWYFoLXMm8HWvucdg7Q/h1abbuOeUfT9je0mEUr/1vPvKNo
N40W9tBaeZvj3YL2U2hpJ63epO23NnC8h9LKNlq/QVulNjKvRsvxtHmddopv
Yv5GtBpDGxtor8hmjrdM67Npax3tXqbl+ls43v1oZw3tX6AlYSvz9qHt6bR4
jlbyaP3Nbcw7hRZ+orVntPn6duadREs/0Opp2q65g+PdjVYsWj9Bu6E7mbcr
LY+jzaO0k0NLnXYxr07bh2jvHi1W3c28n9HWfFq4Q8tBe5j3E9qZS/t7abXi
Xq6PVrSXSou7aV3cx7zNafcjWt5Ba3/QTlOHeYfQ6lba8Gi75H7mHUwrcbT1
K+0WO8C8H9BaNO1cpf3CB5n3fdqYRXuXaLHgIeYNpy2DdlfT8itaq3uYeafR
/gpafUEbtY8w72RaXE7rT2mr1tEs9EMmHcX3RXnZUfZDHh/l903pGPshE46x
H3L8GPshucfYD+lynP2QscfZDzlynP0Q/zj7IR1PsB8y5gT7IQdPsB9y9wT7
Ie1O8v7deSfZD3FOop+gVDrFfkibU+hHuOmn2A/Zewr9DK3CafZDWp5GP8Q3
+bq06zR+3iiXwfsphmXg94vJGcz3ewb7IaXP4P0JQ86wH5JwBuNj/naG/ZAS
Lu//+dBlPyTWxfzY11z2Q4pmYn6VgZmYf2t9JtaHeyUT60ducJb3x/c/i/Xn
/HyW/bqLZ9mvDTuH9W30PYf17606x/1zntbrnOf+6U0LK2g5kzbfuMD93pOW
fqTVDNp+7SL3e3da+Z7WT9LWI1p4+xLzjqfNY7TzgJY6X2beL2j7MO3dp5UO
V5j3c9o9QAt3aa3tVeYdTfv7aCmLNlr/wryjaHEPrdyirRbXmHc4Le+ktZu0
89avzDuUVrfRxg3aa3ydeTVa30xb12kh8jfmHUSbG2jnF1qSPeYdQNvraO8y
rdS/wbz9aGsmLVykZeF35u1DO9Np6Ryt5tF2rz+YdwqtuLT+jHZ73GTer2jt
NG3+Q/vd/mTeL2nVou2HtBf6F/OOo/UltJtDC9VvcXw70eYi2jlES1X/Zt72
tD2f9vbT4p2/UY915TbPez+5zfOxfbdR7+Xbt9kfb5WF64UzMgvXEz81i8/P
/ZWF65EhZuN65X2UjeuZmJKN652yIxvXQ6vMHd5/2/QO7xdOvMPzh613eD+j
dwfXaz/qLp9HGnwX13tj0118HrB/vcvPC8Xu4fOE8sE9fN7Qo+/h84h7la8L
Re7zfKfhfd7POus+n69ce5/PexX0+XxluM/7yQ2fz1eu9vk81QUf46fXzeH9
zu/mYPyFlTn8vHg2h89Tvcjh85XqAz5PNfkB18eZB3ye6ukDPk9VK5fPU03K
5fNUy3J53vs4l89TSQ+x/uUJD1k/vqPN47Qf8oj7sQttfEvbR2ix2mPWj460
PoZ2D9LCPVpr9w/zfkr7Di1l02qlJ8z7Me2l08rftF7hKfOOoIVUWt5Fm+We
sd41o6VkWt1O26WfM28TWhzynPVuy3PWu9+es95FvWC9+/AF693GF6x3115g
vUoReVzPA/NY7+bksd5dyWO9K/wS+0nv/5L17uuX2I/CpZesdwVe8ftF31fY
786MV6gH0vlXrBcvX6Ge2L2FbJwHT8134P3vmfkOqFf683wHPh/as0B2YL0T
JhfA61pGAfy8+aQA/n+/e0H8fmlivgPr8cl8Bz4fU6NQduD7E9/Od+Df51ia
74DxsY7lO/Dvc4QUzsbzG53zHfj3ORbnO/DvcxzOd+Df5wgukh04v8bn+Q78
+xwL8h34/fxuvgPWj1K5aHbg+rJG5zvw+WUn34HrMyvfgf2D1sWycb/KqHwH
3q+y51//988oXxy2W9CiSSs7aatsCVgYRstJtHmDdkqVhCWNNjbT9nVajCzF
fINoawMtFC3NfDJtzqaddbRUqAys1qftmbR4kVaEsszXh3an0/I5WsujnV7l
YH8Krbq08Yz2eojM9wOtn6bdmuU5nt1pzaLNE7QfWoHj2ZU2ltD2UVqsXpF5
O9HWIto9RMtV/8e87WlnPu3vp9WgSsyr0N5cWtxH6xWDmLdVEPankBaE/Svv
DuL+Fitj/zvNK6M+SCmVUT/UHZVRX+wyVVB/vKZVUJ+UxCqoX/rWKqhvbsmq
qH9C46qoj1pcVdRPc1NV1Fe/WDDqr9QoGPXZiA5G/bbtYNR3sUg11H+lYTVc
H6xZ1XD9cNdWw/VFLlid15/w6rg+me/xdX91dfy8dKE6/n+jbgh+v/1uCPKJ
K0OQXzkbgvdn1Q7F+3fVUIyPvDwU46edCcX4OrVqYPz9d2pgftRlNTB/xqka
mF9PkjD/YjcJ60OZIGH9WMclrC83V8L6k7vUxPrUxtbE+nWO1MT69v2avD5V
e437awxtL6TFe7RSpRb316e0O48W9tNapddZv9rQfjot7aWNCm8wb0vaG0Er
u2j9T9ptVpt5P6LlZNr8nXZKv8m8Q2g1gTa20F6JOhzvKFqPpa2NtHuNliPq
crwH0s562r9Sl+ujcD2sH6N/Pawv++t6WH/ipXpYn0qBMKxfPSwM69udEYb1
L6wOw/7QXoZh/5h1wrG//Knh2H/SinDsTzUzHPvXfqM+9rfXsz72v/JjfX5+
zajP+vGkPuqL8E4D1B95YgPUJ/NkA9Qv51ED1De/RkPUP3V8Q9RHYylf9x40
xM+LITL+f/0LmfV5sYx87mEZ+eXgCLw/rUME3r+zIALj4x+IwPiplRthfI22
jTD+9uhGmB/RaYT5U7IaYX6t1pGYf3dUJNaHvCcS60e7FYn1ZZaPwvrzh0dh
fUpmFNavcTMK69su2xjrXxzWmPUjibZu0G6pJqwfTWgtnjY3037xpqwfkbQR
Q9sbaLHoW8wr0/oA2l1HC1dorX4z5u1H+2to6SJt1GvOvH1ocRWtnKP1PNrt
1YJ5p9KaS5vPaL9HS+b9ijZO0/Y/tNi9FfN+SVsnaPchLXdtzbzjaOco7efQ
aqc2zKvT3iFavE/r7RXm/Yx259PyHVoLasu8n9D+XFq9TRsV2zHvSFpMo/W/
aEtsz/kfTssptPkH7ZTpwPkfSquJtO3RXsmOnP/BtB5Hu7/SQvFOHM8PaDOa
9q/SUpHOHM/3aXsW7a2llYJdmDecdg1aWENrr2izblfmnUZLK2njBW3Xfpvz
P4VWltPWU9qt1Y3zP4nWltHOY9qXunP+J9DGd7SXS4uh73A8x9LWt7SQQ8vV
enA8x9DOQto/SKtVejJvO9qbR4v7ab2SyrxtaGEuLe+lzQq9mLclLaXS6i7a
LtebeZvRSjKtb6fd0u8yb1NaS6DNLbRfog/zRtFGLG1vpMVifZk3grbm0O56
Wi78HvM2oM3+tP8zLV2ijbB+zNuXFlfTynnaqtOfeXvTwjRay6TN57Tf833m
nUwbGbT9hBbfGcC8E2nrJO0+ogVpIPOOp82ltP+AlkI+YN4vaHsx7R2mleBB
XL8daHcBLRyktcofMm9b2hlNSw6tZtF268HMO4pW9tD6LdoqrzHvCFo2afMm
7ZQdwvF+i1aTaGMb7ZUayvXRhNbjaWsz7V6n5chhHO9BtLOB9n+hVfkj5h1A
27Np8QqtFBrOvP1odyYtX6Q1YQTHux7tT6elVbSRR9tvjmTeqbTyE627tPv6
KK6PnrT2A22epp1/aKn7xxzvL2n7BO09pJWunzDvONpaQgsPaLn6aObVaWcR
Ld2n1aqfcrzb0958WjxA60GfMa9CC9/Q8j5au007rT7n+hhJq7tp4y/aaz6G
eYfTSgpt/UG7ZXTmHUpribTj0X7JLzjejWkjjrY30WLxsczbiLaiadem5SLj
mLchbb5P+2tp6TJthI9n3vdocQ2tXKCtuhOY911aXklrZ2mn9pfMq9LSFNo4
Q9tPabHHROadRFunaPcxLXebxLwTaOc47efSapevmHcs7R2hxRxa7ziZecfQ
7kJavkdrVaYw76e0P49Ws2mj0lTm/ZgW59L637RVYRrrw0haTqXNP2mn3HTm
bUarybSxnfZKz2DeprSeQFtbaKGkwbxRtBlLOxtpqdhM5o2gjYG0t54Wr9J6
g6+Ztz8trKXlS7QZNot5+9LSalo9Txsvaa/3bOadRuuZtPWcFtQ5zDuZNjNo
58m//q8f6r8WjX6pOjGa/dTvo9Fv9R5Fox8rSjE8Dxgfw/OupTE8D8iNQT9Y
DolFv1jrHIt+srM4Fv1m/3AszwOC49iv7hDH84AFceh3iwfjeB5QOZ7nAW3j
eR4wL57nAU48+vFaVjzPA1on8DxgVALPA/Yk8DzgFl/3WiTyPGBEIs8Ddiby
POBmIvIJzZJ4HjAsCe/P3JbE84AbSTxPbpLM8wAtmectm5Mx/t71ZMyPEpmC
+dMHpWB+3Q0pmH/hWgrWhyabWD/mABPry19n8rz+ion1qRZKhe1+tDeTVi7S
upCG/9/tk4bfL8xI43nFuTTkN/PS8P78Xul4/9LUdJ4nu+kYP/tZ+n/j+3+H
diPD
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
9nobhrRl9cNisvhpc5IaxfqTL9BGllpuW7eWPeJblWfrA2qQ/Qs0jHrmMG1f
gFaPkisE9rh10GLmj5Cpttu2YmxEn1+9zfwUA8mh8QX7Zb/G5vt6kKUW3xIT
oll7dujv+/MV3/BnN1vP8ITs2hTcfU51Vj6q1HHbmhoXFxjzWPnoSv6Z8/z2
+TqLp8wic/EUyyNyuiVf/tlRm8VT0tR1Q7yqE5mLZ+nTyVy8S9hH5uKbSqp6
YGd5tG9qPfh7625yJ1uZuV3HsHhbLJmLv2kB9d18/MZoSz4yoXa7iZVZeneS
G37KNn5TWtYe3yEnR7Q4+eoOK98/yNz6EUFuQO1Z0ajl1Vqy8h1GNoq2ftaQ
tRfOW2T/r84muyaw8p3y9/XurW6vTmbluZVE7UXYiKdbSpuWx5Pb545M3i+x
8r2ZHHuzRa/P9dj46DN5kmP3tn0FWPm22qj8vw9vNPKOWT7tY9DqRhuML4SP
NqzvCjek8W3IrHGVx5j1o9KsIbRHrvVo32W0XKAR2NEYbaxBWy6ipXdo1dYY
rA9pDOkTXY0h/UpiY7gfXfWbUHkvPKDOnJdsvDyQ7Mg7y2/tU9ZeLydrn2fW
vTOFzW94yNz8h5ajKZXP7vu61vuvPPcn905y7irCypvkJIen/RLYNQPrT7wi
C+kLb9fZ/I2erZnbFjSizvdH11j/rA95x9KkulPzsXjVIvLCl50vz+zM+mfP
yWNS58o1y8nmjzI3d9vCTkeV/HKGxQMVsv1p3gFVnrH5o/nkSsX8BoZ+ZevF
npJ3RJb58zUtiwdmbEH982cf20VnYv2z7i3gdXVOC/h74UkL+HwxXRB8v7NL
EKTPNTMI0m99GATXJ6duCdfvqNgS8seY1hLyz7K3JeSvXQiG/FfLBcPvI0wN
ht9P3BUMv6/zVzD8/q4yraD8Wye1gvG1vKMVjK+1761gfG1pHQLja2lCCI6P
b4bA+Fj/GoLj4+DWMJ5RxrXG8XF0axwff2qN4+MWsptfP+UYLcN4y7giw3hM
KtQGx2tN0fq6NjC+Ey6jlfxtcXzZCO1bjbZeQDvytsPxpYS2rERL59FqrvY4
Hq6HFpehnW60y9IB09cPLS9Bay/RRtaOmL7eaPtCtG6ghcz/Yn72RDvnoX3x
aGuGTpif3dDabLTlMVpK2xnTWxmtz0AL+9GKXxdMbwW0z4G27kE7/qC1sl0x
vVPQUgTaHoPWS3fD9LZBK9vRztto1ze0NaQ7lodQtHYDbXxBSy17YHrHotVN
aOETWizSE9M7Cu0KR1s/oOWCCtzPjiYK3P/GWrTlEtru3wusNkQLq9FiZC+o
b5x5ekN8x9WAzK93WdEb4jvyud4Q39Fy9qH+cJ/6SXHJbLxZl6zXahSf7xtb
77KU3N5+uGVNfxa/OU0+U3LR0FnxLH6TvS+Nb+dF3Uruz/oztcmyfm7S7gtm
+68sJtsvLv/5JYXFp0+QI1bVTNMsO1vvkqUf1d/ZlPxDM7L+Vw3ymT9/LlZP
NO1YQDaEPw1vHGbzQUfJ3PpyS6b+btulV5c3PJzB5jcDyZ2eT9/+TzTrH84l
B26KWjUiPevPxv915z2lntdh8YX0A2A+ytmVfKpTX33yAjZfNYusXHm0IPtO
1p99RI5Ik3/OrlOsP5tmIPW/3/Yo2SeK9Wc7kYNGvyobFM36s9Pxden+QPh7
e6pB8Pl6h0Hw/YJjEKRPiR0E6XcFDKbr97OPG3KD9b/bknNnrz6mcR22vn0n
uX9sEVfBJaz9v0MOyVplz8brrP0vNYT6a9+r3vvE1mtbZHL/oXWKdUpn9h/s
29DqLXy/UGIofJ7Yaih8n3MzOTp794oXWXzHdX0oxNus1mHU31i5t5GvKMvP
oGHY/9tI/jRiUs5Szczf37hK1p60rV21jVl+LB/JTz4/yPJnFIvvNxsO/Qt1
5HCML0QNh/iD6BsO8RFn4xEQP3ENHwHxG+tFtPwOrdnsYGMI2rIKbU9Eq7lH
goVBaHE5WjmLduUYhfGmOmjZiXacQmuv0JZao8FSH7R6HK0/RwtZxmB6FbRz
Ptr3FG3NOBbTXw2tzUEbB9FSunEYLxPJ3P4ZtQuZ218jHCBz+2/Eh2R+f07F
8RA/d/07Hupf37TxUD/LceOh/nYIodBeGO1DsT2eipZ2odVfaL3MBGzPJqGV
HWjXd7SvZBi2b63DsD3bGgbp126GwXyQpfhEmC+SgidCf1lVydx6Sz16IrQ/
wmfypF/+PS/sY/HTFpPICZGe5zq7H0dPgvbHd4WcZWGaS+kk8362JpP3jmsq
W1OZ97uj6WQan1esd6vebBbvtZO59ZbGOjK3vlZ6T+bWX9vzT4H5BX0Ymdvf
JKwhr/neavfd/9afvZ0C7Y8z71S3bfi9cuvi/rB4n0QOONQ0T8NhrL5bSZ4e
fbTQpJusvjtP5vY3abkclL933e8bD2b1cz3y7Jf/9m8QwdYbLyPHVipc8vtj
th7xDLnpkeZCXFpWP7vJ5VKXzFS4NBtP1plG+XfFl5i2HhtP9iMnTvznn2NB
bDx5knxmzMhXjVqz8eRLfN1aczr8vdx7Ony+Y+F0+H7DmA7ps2SeAem395wB
16fOmwHXLzydAfkjZpgJ+efsNhPzd/ZMyH+fNhN+HzntLKrfc3QYvO8A609U
ngXjU2MG2Rrqe1L7Govv7Z8F8UG732xcT1JhNq4nmYYW9+D7nX9mw3yzq+wc
ao/Ca1pS/Fg8pB05vHFUncbHWTwyYg7ElxwxZG/I7U0Z87H2r/RcuF5LGzK3
v86+nby7Y06j7i3W/7n918tPi9/YelSh5Dy3La775aJZmrD2OoQc3HSI39SH
rL3eMg/ae9cNcuMhVbZ3KcTKQ7H5YLnlfHi/tmk+fJ5xjVypfv3J3Uqx+Z8i
C9y25LpdMm7sz/oXzcm3XAUfXNjA1vuGk7v98rtR6Torv1fIwwMCB1d+z+I1
BRfCfJOzCbn9vn82Xi3I5qvWkoXG+5fvKMnmqy6hHf6L4P1aw0XweZbVi+D7
pMhFkB41z2JIrzB4MVyPuGIxXK/Tuxjyw5VziZvfT2AdQNYveK/XLcr6a0vJ
3HpiLYEsbtr7sInI+pPZnW5+P4HUl8ztJ7AvJnP7CfQXTqjvhKxL3fx+AqXX
UpiPdS4gK7V3j3wxi9W3z5ZCfMWaaZnb5l9sdVKZGmx/Wg8yt19Gm7sM2lNL
PFpKvxzaV7UrWp+1HNpb8dFyaG+VNCuw/e20At7vm46W7+P7HalWQnttdEBb
HCvh/fbYlfB56u+VkF6h3Sq4PnHyKsgP551VkF+uH6swP+XVkN9y2Gr4PbRb
5Apjxm9y5zPbNyOFzO1HlFqtofo7cl9M1bys/Rq/5u/8+ZvrdfKy+arN5JrF
7GHXurN43RfydGNytoF3WXzcupbSm5LlaGG2f8A5Zi3UF66NZKP/jGM3Eln7
9ZFce2ry2XSsPy8XXue2pcue44X/JtZ+jSRrc0ssve1h9/96srRmRfpodj9Y
otZBvNJeYD3EM9XG6yHeKaxdj/HQi+shXurMFw7xVJctHOKt1lX4uuwij7Lu
UYJysPs/9wawUX8DvF9aTu4RHSHVYPWB/SyZ2w+s59hI9WnuaSm9N7L01iWP
ib4+cVQfVl85yTO3vvndoiBL7yly78f1Kn65xPYjZ9sEr1trbYLXHYvQ2nFy
oXYLl5XrydrXLKrbVrVR2ob5vGx8WR2tzkfrR8h+37uUKdidta8ZN9Pnz0uX
vRTbT6JUI3c78Kh8Xx+bH5mD9h3E98vptsDnOcQt8H3GzC2Y3gPk3t2mruuh
sf5A6q1uW1SfFH+/D6w/UJG8OCrzUVtxlp/TyYG37olvGrP8jNsK5ccpbKPx
4oiMw7ooLF7ffhvGw6eSlRVLDt27xfLzLpnbj6z9InPrxy1tt7v59eXSJDK3
/lzVydz6dP07mVu/LrbeAVYmoF030b6vaDl4J3y+YxxaU9GWzzvh76WiEW5+
fb06OgLWR+gb0GIyWim0C/7eZd+F6V23C77fenkX5I8j/27IP63RbszfNWRu
fb50gcyv735LNva+b3t1EZu/kfaQA9vm3RnCysMQsl9MjQ7XhrLycJ78Ypw7
u8vBysNr8vwi+teD81l5qLfXbavbsc6fmFKsPhhI7hQ5s8fvTaw+WLYX1sdo
bnK5iwnZdrZg++st++jzr/eX3VXZ/vp+ZG6/vH0Jmdtvr54kTzkYuWnPWba/
Ptt+6n/Ih3OVj2Xru2uSX0Xvqq4+Nu1ciK+7ju2Hv/cZ++Hz5X8OwPc7epK3
xHSYPKIAS+9hsitvngodXaw/85TMnVcgZdCg/lK7kbnzDvTZZC33uIcb27P+
4WMN5pOVtAdhvtlZ+SDMR/tmHIT5auv+gzCf7fA7BPPdWoVDMB9udERLe9D2
e/j3etnD8PlC+8Pw/eIUtDMG7fqJtrY5AtcjTzwC1+vYfgTyw/h2BObXLSWP
wvy6PfQozK+rW47C/Lh+46ib328iFjsGrystj8HfuzYdg/l03zWyEHRvaeIe
1p/8dAzuH0fz425+/4M2ijy8Ro9FX6uw+vjKcagPpQ/Hob5Um5yA+lQfcQLa
c2Ed+UbWisO7GGz/YNIJ6A84/U+6baXz1R9Qpx1r74aSxXGBZZpuZ+ldfRL6
x443JyG+qOU5BTYanIL3SytOwefZz52C79NznnbbVh1eMafBYjb+qUc+tanW
qeB3rL1bSrYGjqkYsYOtDziNdiWgrbXPuPnzJuS+aO0E2niBlmqcBdt7odUF
5Jk3RgZOWM/6awZ5TPNpnWoEsvKR6Ry9v8OSbtafrL/W4xxcv2sumdvPbI0n
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
vzrSlfbw4y1NJHPjMcssMjd+kw6g7Q/J/HnQFct4YP9MJ7Syl8yNL51xf/3/
fy4hAGztgJanorW7aOMX2hJQFmyfhFZ3oIUfaLFUObDSGu3aivbdRMvFy4Md
wWhtHNpyHS19RqstKoD10WhhI1pJRjsLVcT02tHW9WjHe7SWvxLmdyO0tAZt
v4DW81bG9NrQykq08zzal0vE9NZHywPR2hm04UZLdapgevuh9ZNo4RVaqVkV
09sb7TuGtj5Hy5mrYXp7oo15aOkp2p4hENPbDS3MCYT7TXn819zzBdL+83c8
0G3ThnMxZn3RmawPfvayRDmzPrDOJKuhfuXzvGT71/aTT7Rb27eaxPav+VWn
8cXyA48Dx7L5lApk7WPRzrHZ2P61aWTv5lX5F21j57nsIVeoFPfeyMLiv3/I
vsQu24rIrL9ergb1p+vmnntyNBtPTKkB9aEzgsydX+H7SV6xspAyrCE7r6xM
TQ//vBTHRPIa/xpb1x9h52FsJ/P7l76T5xY+F5LlCVvvUrKWhz/fVw0lZzgw
pU+382w+ZQtZ63yp21t/Nl95k8ydL6EUq031cd1P9Z9vYP3JlmTu/BLfJrJr
+FAaBrB4anRt6H86itQBa83Jfs37NvP/77yRDX9f/398RLpSB/pbasG6Hn69
n96E/LTf+YfNXrL+wzoydx6Qcomstg/a8nALi4f414PxuK9hPRivW4eRew9a
sOnhW9Y+R5Kj39077s7O4iNvyIOfPO9euxhbDyDVB0uDyR37DC8yPprNV54j
lzPShwWw9du6l8ytNxHrNfDA+dgDGkD/znWaHPqi5sbzV1h8PaEBtOdybclj
S1r49d2WeNY+9yVz813aYrTlJZmbv7LXsHn4+U21F5nfL3GMzM2PigZ5x9R+
37M1ZP2dwIYefv2HqweZW/9gPdwQ8keOJ8fW2Pz4/hSWn1Ua0fg5sluyeovF
m7qSo/P5hS7NwdbDaWQunmR/RN49p8WfvaPZ+aaVGntsh1bqkTeXs/hNZ3Lp
8HqZc+5i8ZsZ5KByryIjDrN40320K1UT6l+t672i8C0Wb+pIDgv0pW3I1s/J
DrQWi+83fjeBz5PaNfXYahdZWnwuOz/VPpl8qoryMaADS+8dMnc+qvCTHJzp
7cAPJ9n6FbmZhz8PyxmG9t1CW7+RufUtjlbNPfx6PW08eWOHmS/T1mTxsBtk
7jxX6Qt5uqhcb3+UxcOCWsD16mPIzZtVjXmTyPLzGlr5iHY1C4K/940kc/E3
OQpfd/iC4O+1Ai3BlhEt4f3SWrT6riV8vp4vGK5HHErmnkekrCJz59e6Esnc
+bW+3K3g95EHkZOHfJ5bLRVL73JyYNlMc996Wfk92wrigZacIdTfD0kXKK1j
9UFdslyplbtBH7aeyRkC94N+ipzlVKWCq9h6BjF7a4/tUhtL1IIJrP6qRe4h
v+6QNye73/qQufVCvuNk7vx46wtyOvf3gMthbL6tukzjy8v/nC9xja0PUshp
9g5pnD2Z1QdH//r/5ytJz8jc84nUam08/H4AvTuZex6ReIjMP4/oCZk7j88l
tvXwzx/ydSFz52fIB8jc84ccD8nc/IdRsR305y2d2kF/3r63HfTn1bh20H/X
hfZgsUN76M8rU9tD/911F+37hZbbdgA7JqENHW35gba37ghWJ6CFWx2hPyOm
dMT+V/C/2D8fh7ZeR8uf0VqLTtj/Go2WrqLtyWi1UGfsf41Ei+vRzvdoV/4u
mN7haHkNWnuLNvJ2hfyRhnTF/F3ZFcdrr7vC7y/k7gblRRmIdi5Du86grTm6
Q/mT63SH8qkt6Q7jUeNkdxivStl6wHjWXrMHjHfV3mRu/ZpwHC0+J3Pn1Tj/
6emB82J7kvn1QkfQ8lMyt3/dkUHx8OtxjG5kbj+hZQ6Zn89+TObOv1XT9vLw
5/sKXcjhkTV6/J7C1v/PJHPrN5T95Niuz763GsbW4/j1pterxG3+/N96twrk
9lFRp72jWP9mGjl3hUU5nndg8ac9vTFeco8cdKxI0wGb2PxJuT4efv+d1J58
q/DpWstmsPo3gpxYNNHX7iGrf2PItZtUvnStCGuPf/WB9lpp05f6I/UOL2sx
mfUfJpK59fK+22R+vuo7Wi7ZD96vhfaDzzO2kKevGL1k4GzWvn3F1+3F+nv4
9fhqSzK3X0BQydz5mmI02llkAOVP+u1nF71n81XNybt7bfoxkK2P9Y3C1+Ur
5LzJnXd/v8v6Ex/IZ4okrvdTWP+syUAPv/7OYidz+3WldQMhPqsmkbnnJer+
g+j3r91lf2kWjxWHkQtZR3rKN2D939XkG6df3MiWmfV/35C5/bq+PIOh/2uV
yNx5g44V5P7nhn6vm4m1d+fI3P5WS64hNH4aUDLGSGHtXT0yt/5OXUrm1t/p
p4fA/SO4ydz6O6X2UA+c79CXzK3H8J0g8+cNvCTz53HWGObh12NovYZB/WE5
NgzqF8lAq4HDwXoPtDAPrcSjnelHwPf5uo6A9Fhnj8D0PhoB16OlsYMtndHS
DDvkh3qfzK1f0VON9MB5pxXI3PoXxYF27sb3+36jrWVHgR2Tydx6Bm3nKJj/
svwkc+fJSaVHU30b3d5yZDUrD2Gj/46XbrW9tsys3/RtZP/qj2YMScvWR38j
c/v3lRJjPPz5Ma7xZG7/tG/zGIi/yl/I3PNJHdaxHv75pFoQueq96D6p2XjQ
sonM7W+XrpH1fyPODdrM7rfC4zz8/gq92Ti4H8VwMvd8CiWK3LHxhZkjirLx
W4HxHn6/jq8xWl47Ht7vuDgePk97Nx6+z9IwFNIjDQ3F9LpC4Xr0xFC4XrHB
BMgPZdAEyC/n8gmQnz7PBMhva84w+D0c/cPg99KcYfB7GqfC4PeWsk+k+uJ2
SEDsbbZfvxaZW/+uLyJ/atvLnZSBzW+eIHPnRShZJnn48ySc1clrSqRK+6ck
6w/PJ3PnIVmPkrnzKuRnZGu2nQfn1mP7n6tNhviU0f2vjQ4D5i9+bKb3EJk7
L8P+hMydp6GLU7C/2XUKxs8OTMH+20O0K/VU7L91QsvT0Voc2hAc2N/sgLZP
Rau70MJvtBgwDdM7aRpcj2vHNLhe649p0D+US02H/qGjNdrYirbcQtuLzwCr
wWhhM1q8jlY+o10tZoJ9o9HyVbQjeSb0T42ms6B/ahk5C9uP9Wj1/Syo//X8
s6H+F4fPhvpfWTMb6nfX29nY3uWdA7ba0I6VaO082pJ7Lliqj1aXofUzaMGD
VurMAzv7oX0n0dZX86B9krPNh/ZE6402FqKl52h75gXQfuk9ydx6T2E+WR+4
5V63GWz95xHyTL+Apje9rD+RYSG93tg2KLVk1heuquRLVcdcbD2Pra+fQ550
dempj5fY+dkHydqHYVlLfGTtXdpFHli/XBlt6YK270erDxbBehqh4mJYfyD+
uxjWHzj3LIb1B657iyHe6/uzGNYfyO2XwPoDx5QlsP7AiFkC6w8sv5bA+gN7
GyesP1AnOmH9gaCTuf2J4ncyt3/RGbLUw+9vdIWSB4b0ONrrIIun3CQbSTOC
n59n449iy2g8kUXefPi//fItl8HrFnUZ/L0UTd6fefSRAmtZ+oosp/amUWHt
1CTW3jVfDusfxA1kNW39C8NKs/7wFfLGSte6xb9h87UFV1B/e1uvi8N2sPau
CXnVstRDpndg/Yl15Lx7Swa1SWH5eYnMnddt+K/02Eqf2NpoV24WXx9G9r5r
0fZ1HhYPXr0S5gv0N2T/S1H1HaPZ+C7vKg9/3qoymByRt/yobza2XnIFmTs/
2+clS0Wu/mw9j603yrUa+suOAWRuvaq2lMytZ7W4/77//+tdJcsaGE+rfddA
vEhfTObW04ovydz5hErWtR7+/EJXLzJ33qpvwVpoL2VjLcwnOTKtg/bF6IG2
zFsH77fHr4P5JzX9eph/Erqth/kncTY5wAiM7VfKrH+dj9ZD++9KEw7zT9bO
4TD/JM8Ih/kn7T5ZeRuRt9BItl421QYP//xQqSOZe36o3UHmzm9Rd5O5/XHC
HzL3vAyx7EYqvwt2vdkYwu7/yeQKD5tHuEey+38neW9RVy11DLv/75C58+Dl
0pvo9w0svaAxO1/bIZO5/bPGNvKYa+EFq/33/NHb5FFNJ4xe72DrYb6Rp59M
+Df9aTZ/0UqF+0UfT+b2H4s3VKgflC/kcinLjJ1svY7TutnD70/3jSE3Dn49
L2Eqqw82kYO62IPT/bd+5yM5ed6Zr3GDWf+38BYPf76H0YzMnf8hhaPtUeQL
FUb2KOFg8YgCW2H8LTQh/yw3dOVkC4tnjyCH+Q8/f5etv3VeRLveoa0Nt4Hl
oWjHKnLu+eMy12jJ4hGJaEue7fB++6DtMN+gLidzz/PQz5IDz2evNn04i0fk
3AFW6u6A63U5/75e7enOAStZPOIUmTsvwZpA/l5skP0bW4/rqLWTxgdTXw+9
tIrFU/qQR6WcDrxzg6X3BHnwz5YjziWzeMoLctK6ei/rZfxipj9LBJXfPIHp
DltM6wq5qRY5/n5h08ICtPIM3+/MuIvyZ8fRavW/sPyutgvnj+bugniPfIgc
OPft0uZtWXrT7ab6evT5NPElWH6Lu2E+wdKV3NivXOZLKisfB8jFa0+qZQ9i
+f2QnPjkR93tGVj5qLTHwz8PRey0B+c/p5O556G44sjc81B8wl4P/zwUuQOZ
ex6KYyqZf17eLjK3/8Xym8zvfwnYB/FCddI+iCfqO/ZBvFG4sw/G40qp/TBe
d7Ymc/sVfFvR1ltoOQWtBR+AzzPGkbn9DNJ1Mre/wP75AKx/VYtqYGGMButl
xY0apN+ZrMH3uQodxPSOPAjtn7z+ILR/jssHof0z8h+C9s/SGG1fg1YvoIV8
h8GiDe1ciXadR1tzHwHL9dHaMrRxBi3lOIrprYNW+6GFU2gl2zFMb020qzfa
evwY9A8cmY9D/0D7B22Zj5aOoNUMJ+Dz9KonMD/noJWDJ+D3c6U96eGfV+Or
TOafdzPzJMQTtQcnYb224XcKLP17CsqbfdopKI/6PbQgnMb7q/1pXA8egfbF
oOUyZ8CONmfwftqOtuhn4P6ylzwL6VFDzkJ9IGwlzw04EFFwOhtP3CRzz3t2
FjtH/ceJNZ/3us3237QkR/y8Lh2NZOc5q2Ru/6jjEzmv/8988wNY/LfIeXp/
2S72sRPY+pLR5EJHIjMmsOfVSBvIRRZUHzH2G9sP+YHM7X/VC7o8/PNDRLsL
+vPKOjJ3XpAricydF+Tzj/Tw5wXJw9CO1ZHwfuMNOXRU97fNJ7L4et4L1N6N
PvJxXC+2H34wmTsvU11xAeJvwusLsB5azHWR/v7d4crXJTZ/PIA8//Pr5GPz
WHqXXoT2w+omN52YXKhPJEuv5RK8rvW9BH9vLCa7b9lCKw5h8f+X5FNv218I
b8TSm/UyrK/Ve6GFhZdhfat4DO3MFAV2BUbB51vn4evyYXxdS38FbFQhc+cr
SrPRdg2tPiIPnBU/uOBzlr+Vr8J6ILEzOeRr2X1TyrP5ln3kNCGJuzYEsv7N
fXzdWuEa/L3ckXzjUlDh8ax913Zfg/1ERuw16A9IZaNp/Bs9NXvJs6x/0I7M
PV9X3xkN81tCDFopfR3e75Svw+f5tl2H77Pevg7pcZS4geltdQOux7KFHNu5
QNln+1n+3iDvT04rx9Rn+Wm9Ceuf9CAydx6KuAmtXMP3uwrfAvuakbnzweVw
Mn8eedQtWE9vFLjt4c8ztzQh88/jW4tWL+L7BX+dxg/Hyhffy87XEBvqMN52
riJz+9tdLnzdmucO/L3c4A58vrb8Dqb37B24HilnDFyvvW4M5qeTLP7s3GRw
F1ZeT5O582eU7HdhfZazFvnB2KGfrFtZfbXoLpR36wnyCX1LQFxu9vtniaXy
0/FWmkP12e9fnZxl+65s33qw338BOXDQuPfPx7LyejQW518z3qPxbt6v3qJz
WXmtdg9eF+feg79XDt2D8ulKF0f1d+O298WPrLyK5OLF/FZ+1tn9NIvcKe+R
tCv+Ww91gBxQ9sudegLrfz8kLxwc/nnaZZbeSvdhPZrU6T7cr+re+7CeT4+7
j/mb6oGHPy9K6fAA9y9MJXPnXfruPoD5CuvvBzh/2fahx2Yf/fpdl8Ns/+gk
MnfehbHjIbSH0o+H0B+3l3oE8/H6BDL3/Fph2yPYryTeegT725zFH0M80RX8
GF63bn4Mfy9ffwyf7/j8GL7faPEExwtjnkD67VefQHuuJj+B9lwvFA/tuTgy
HtpzZX08tOeu9/HQnvvyP4X23Nr4KbTnjjVPoT3XLjyF9tyS7xmO323PYLxq
H/IMxqv6+WcwXhUSn8F4ValvePj9qc6B5LeBr5Oun2LjyWUGrFezegxYDyDn
eA7jc60fWUy4IktsfG4sIZd7/e+Cit3ZePgUmdvPas/2gu7XtfU6d+7N1hPU
RAuLyL65jdaOY+sFxePkQrPPPpr9k92Pz8ndOpWQ0uxj9+M/L6m/Uurh1QXN
2P3Yk7xFHBUnXWX9hyMvYf7Q8ZQ8/9Chou87sfqt6iu6fz6fv34gF6uPu5N/
nnnz6dETdt70QTJ/XsVjMneehSAmUPlLvfpo+ods/2sXcrdclypN+mOWJ+d+
cpptA6SPqVk86gGZOy/EWtHt4Z/3LP/rhvKt7XHD/k7jnhvi8VI5D8Tr7e09
EM/XIzwY77/rwfntMl6YL3C28cL8g2+7F+cndC/Mv8jfvTA/o4W8hvkbI/Q1
zO9IN1/D/I/962uYL9JbJsJ8kjAOrUSjnZ/QvuZvcL3UaLTjClr7gLY0fQuW
7G9xfu3SW1zflfQW5vfERu9wPnPYO5y/jET73qBlKQn3hwxOwnjvuSRc3/c6
CdJjr/ce4snqgPcQ3xXOvIf5W9H9HvYXKBYfxHddfcljqqxpUWYiex7fYnLw
mXn7Jl9g48eX5J/3H5UKTjTHW46sH8i9aqqDv7DxYy8ydz6bZSG574GvD4Oi
2P7dY2R155pFSf/FazIlQzxfD0yGeL84LxnmA5TD5AC53v2tyez56uk/0v11
KvDtkl5sf3kVcrfL2pQoFzsfYTaZe36lQyMP7BE9bmcb1t49Itd9HX45cQbb
T1b5E9VHQ/KP27+TnV/X+RPML6n7yPrIvUWrX2L7F+7j62KFz/D3SsfP8Pmu
3Z/h+32xnyF9ctkvkH5Huy9wfcbOL3D9lpgvkD/20l8h//Swr5C/wvavkP/K
t6/w+zhLpMDv5xufAr+vdUsK/v5fUqB8aNZvUH4sY7/h/pVN36D8qR+/QfnU
C3/H+YlR36F8K+HfYb7E5fsO8x++Aj/g/pFH/MD7ay3aeIe2+P/E9QFD0eoq
tPAGLeb5hfvxBv3C9b7Lf8H9a/X+wvn2nL+xvur/G+pLw4mWEn5j/Zr9D86v
90ELi9HKC7Qzi+CF9VkK2roA7XiG1jKmAlt6oKW5aPshtJ7ODyxUQSuz0M4D
aF/q1JjeSmi5E1rbi7akSuPl2zOpPJlr79SpaH0XWvxN5p8PFJAW7JpE5tcD
7CDz8/8/yPx6slLpwMYEMteeW7aR+ed7p5C5/oBaPL2X7y8I48lcf0LcjHZ+
RruKZgBbx6DljWgtGW0UygiWRmaE9NjXZ4T06u8zwvUIBTLB9SrDM0F+ONeg
fW/x/dZ8mcGOIWhtZWb4PktiZkiPlDuLlz//Rx1I5s7/0ZeR+fMbPH/9//GJ
kiOr17Ywi76prMraq35k7jw53xIyd/6z/IrMny+dLZvX5rd5mncUOw/N6E3m
zmexLCJz5+nbn5NTnA9HfWDnG6uZs9Pfz/VFt41j40eFPCllbP9CbDwtziev
+b6t8NPlLD7zlMzFb1wZLF5+f4q1O5nbvyLPIXP7W7THZG6/j5E2h9fW39o/
8yi2P8kikrnxiX0m+VbJ95VeO9n4YD++X0id02t7WuNyXuG/83wqkncXD0s9
rCcbz0wjb8n9UQpuwMYze8jZ4qc60+Zm6RVyeW2ubXtOimx9slyOzO2X0aaQ
ufiSEUHm9uNZ7pK5+JK9TG4vv79ObUPm9ssIO8h+NcNCnrD1GKJODura4669
MRufl8zj5c/XdYWQA2Z0yZaGzTdbt5J3Z+uRZA9n89U3yf499Pjq11l5+Eoe
GHd6utfKxuct83pt3hazz2YtxPoD48jcfhl7NJnbL6N+InP7ZYQW+bz8fhlx
NJnbL6NsIHP7ZVwfyNx8ha+gv5df/yDbyVz75FhH5teLJZH59W3583v59lBq
ROb3q6wm88+Xjfzr//8T8xYAKxLatQLtO4e2vkY76hUEawPQljNoyY1WaxcC
633RwhK08hLtzFoY09sLbV1YGPJDPobWMhWB/DMC0dI8tP1wEch/Nb4I/D5C
1aLw+4ndisLv69TQrkdoXxorWO6MdsxAG/fRFr9iYHtHtOpA67vR4h+0Ura4
l+8vuSYXx/7DzuLQ/ss/i0P77ihdAtpzTUZbtqOl22i1RElo//VWZG5+VtxC
5tf73yDz5yt9IXPza76gUl5+vss69q//P3/suEbmzlPSPpaC9srSvLSXjz9I
o9D2cLTuQwsFy4CVEWjnWjJ3PpHvHZk7n8jqHwCWG5L584pWkfnzwFzkn6oi
JO1m6+fzlAXbG5SF9+vL0cI5tOhFO+uWA7v6l4P0WE+Xw/QmlIPr02qVh+s3
+qClE+Xh/fYXZO78WDVLBSoPkdlW987FzlfqRe5b9eRXb2U2vlxAli+eP/Wy
JNsP/4zMncfmyliR2qPL+udHHVj8vwd5d8uOPyI7s/ZkLnnNqOqhiez8XMch
Mhf/MtJV8kJ8rAr5aYVqk77UZ/MVs8jc+b7qATJ3HquQprKXP09VrETmzltV
OpG581hde/F1Xxz+vVxeBDs6iPB+YxfaEou2B1SBv1fbkrnzXYWdZO58V/EO
mTvf1Vmqqpc/39XVmszFf63byL3XPmiYyNaTybfI3HnEWvFqXv58ZiOYzJ3f
LG0m889PuI7WiwaChSC0shHtvIr2FfrHy58XLo8kc/F+x3oyH+9/j7YUqO6F
+PlwMjdfrq4hc/Ppwjsytx5HzFcD6h/nkBrQf3atrIHji0R8Xc5dE+orbWBN
6F8by2pC/1ry1IT+tT1HLehf6/1qQf9acJK5/YDKKzL/fJVstb18/NfXm8zF
h62LasP943heG+4fLXMduH8sCpl7voo0n8ydd6w+rQPlT89Q18vPJ4jdyUcm
1G43sTK7n+bg667HdaE8+9LW8/LnJ1tFtGNmPUiPtr8e3v+p61P/t2HHlI+s
/EsV60P9oU6rD/WLvoc8e0ZE2eHs/CZRaOCF8yHLkSPink0q0orFy9uTufNO
fRFk7jxU690GUN86ykhY37ZBW3agJR2tlrR5+fi7HmKD8iNutXn5/aTKTTJ3
HrPzK5mbP/K1bOjlz3+3jkM7otHaJzJ/PkaLRl443390I6gf1Cv4uv6BzJ1v
LjZt7LU9aHA3Qmb7VxU7ucdNqdT3rmz++hJ5x9KkulPzsfnWJPL0R+srXWLr
K+RGTby2TIGLrVE12PzlMDL/PJJIcmjcw8un0rLx21syt37QLjX18vOl6mBy
3Ox6D8ZnZuO382Ru/kh8Teb3t9Zr5uXnn1wDmsH40XqGzJ0nIbvJ3H5TrXZz
L79+1ehLrtpqz/vU7HlR0klyctd5J9uy8xLsL/F1vUYLLz+/JPQmc/NLyjFy
eJkjDRzF2fjYIL8YPf7EMB/Lz8Agyl97/Vn7NTZ/3ZO8+4jjTJfebP7pMLn3
rMGTmt5h80/pW9J48GG2cYHsPDhLVXKYo1G9gz9YfdCN/GDEympFWXuqauTh
SW9Eeyy7vx6Rk2svT70tD/v9Kwd7+Xiy0jkYyrdrXzD0P3z3ydz8klyhFdS/
jo6tID5j7G4F8RDLvVYYbyobAvEUtV0IxGOEiBCIb4kxIdD/dZZujfExuTX0
t63bW2N//HZrjD9+aw39eaOVjOOHULT9Blr9IsPfCy3bwOeLY9vA9yub2kD6
XB/bQPp9hduC5VFoR3hbuH4tCm0p2A4sNUGra9H6xXbw+UJSO0if0rA9pN85
tD2Od1xo6xu0nKcD/L02qAN8vrG8A453vB0gffacHeH3V+t2xPKxtCOUH/F0
Ryhfzuz/Qvlz1UL7+vwL5VU+8S+W5xdkbv+SUb2Tl19vYOlF5vYvSQvI/H6k
Z2TuvGA9Y2fqr9f6/rthJXZ+YI/O8LoytzP8vfNQZ/h8X7ou8P3WKl0gfY5Z
XTCeegBtPOwC1ytV6gr5Ye/UFfJP39sV8le43xXyX0zVDX4fZ4du8Pu5puLr
1thu8Pfyb7TWtjvGqyd1x3j1zu5Yf/zojvHqUj0wXh2GFrf1gPc7U3rA57mK
94Tv8wX3xPRu7gnX47jeE67XKKrgeD5IgfJu36jA/aBeRevJaLFZL6w/RqJd
l9G+92i5cW+wYzhaW4O2vOuN8y35+oDVIWh9JVpMRCu5+2L9Ub8v5IdvWV/I
L+vZvpCfjhz9IL+1OmiLsx/8PtKpfvD72V/1w/Jcsz/OD/Tpj/MDx9HO52jf
PwNwfkBBy/PR2lO0kWEgWOo+ENJvn4PWH6OFdIPw/hMH4f03cxDef/sHYf6m
Hgz5L1ccjOVhGtrYg5aEIWB7ObTaHi3sQot30c4yQ7E8t0FbdwzF9OpDMX5W
chjefyHDID+krcMwf28Og/zXiw3H8hA8HOoHRR0O9YczejjUp74iI6D+tbYY
AfWzY8MIqL+1KyOgfrcUsoOlpmh1HVq/hBbzjwQrjUZCe+JajfZFouW8o+Dv
HdIoeN1YMQraK8t5fN2eazSmt95ouF5h2WjID/HMaMgvp2UM5mffMZDf1iVj
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
N9TbZD7+UagsXA+igVY2l4X3W7/I3HoEbv5yUB551B//Fz/QNpC58QbnO5nf
TztP+QAfP1aHk7n4sbGOzMWPvVgyF78Sc1XA9t8QMhc/tlajhc/4flmqGODj
Y+ZAMhc/c1aSufia9AGtZq0U4NcXsfuTuXxjbxm+LkZUgv/XM1WGz7OqV4by
CEvQ8qnKUH4zfRX4fk4oWlqIVh20EUR7lRWw2AOtH0VbL9FuylCwHI7WTDIX
z3eekbl4vp+8KljtjDZmou39ZC7+LyatBlZKo61paHcPmRsvEB6R+XzRktWh
v2C2I/PrU+2sjtdHFJmbn6DGrxHg5y/Ybcjc/AZvApmLvyl3a8D9pMetGeDH
460i5Dczvrxe84DVD+PI3H508lbywt3zJ1eZxeJNQi26n5vPbiv9YPVZQTK3
/r/fjJw09Z4tAltfQt1Env/0Up0DbP9H4zq+7uWrDf8vNqkNx1dGkvOmr9yt
QlOWX+CSufkj7jey2fDf2KMsX0RuVCcA65EMI3P7R5pryU+O1Z3W/SrLf/5C
XrN8e5ZxH1h8L2fdAL+/pjGYzOd7WWQu38uLJHP75SnZ6wX4/fL0OuQj2oMF
dfeyeM4KMrd/pnCOzO2fKb8nc+vzmzXrB/j4nqOTbbmf1rcu6++eIXPxUfVt
fXx+ZGwQ4OOrXh8yF38VFzeA+lV/1QCuHytdwwAf33UVMhf/lRc0hHiQdpzM
xY+d1I0CfHzZr9QI+rNSdzKfL3oEbb/A94sV1ACf36F0Reuzydz8Cvcpmdvf
XkjeGNo/Widy/Yc1s5g3WX7VjD++dO1yhyesvt5HHmk/Dc+biNV/SZqA1VLk
ZovazW/9kj3/ppK5fCdvN5nb/1F8SOb2w9BLNKXrIXz8votBFq9uS+bmTwk7
yUUrVx7VNg+Lj9wnc/uXaH83C/D70Titm0H8yR9P5vazUe+QufwfI07zAL++
jl2YzO2HII5tDvEnZQuZWw/V+o12C7SA98ujW8DxtI0t4PPMay2gPH7ellBe
qTHaWI+2r6DF3K3ASsNWcHxrTSv4fPdiKyifnKM1lF+r1xq+n7OqNcbLzpO5
9WPVbG3gdaN2G/h/b3kbOL54tg18vp45DMpn1QiD14WlYXh+T6PNDG0D/P6L
TlVy9ZAOK3Z2ZPHqRWR+/dwT5BYFXw6cyOKPdtp2AX79Xa8KOeKvHn3V2ex8
zie7HX/qlUux9YyOkY1eya6FnWfxvFTtqb5+ow9MXYetR1uJ/LDr8bu1nrL5
g3PIcbKmio7D9h91npMPterijvr/+SgpOtDzIUfp1geTsfkoXch6T6ldo5Gs
PptFNuZ9zt2U5Wt6T8jdh93LMjYdmz+TTKP2Xr32DxoUYu2LjmRufpu7V4N4
m+CR+fH3kI5Q/5jtyfz4+y4yNz4rPSDz63kU7xSA9XXCOsHroo3W43UGW0U7
w/GF8Z3h8+VtnbF8f3WB8juFyPz8d+PP61y++GYyl59g/0J7+buClVFofUNX
OJ77HS3kDYfP14aHQ/nMdeFQfj82HL6flKsb2BiCtlejxc/d4PmgSN0hfmoN
7A6/t7uyO8Rf5Q/dIT6rZe2B8dr+aH8ZWvV7QLzXyNQT2ndeXzKX/y4u6Qnx
ZOVUT2h/W+l7Yfs3lMzNX5IXkrnxc80hc+PnTpreAcgnqkzmxs/VeWRu/pdx
lMzNn/ZS9qH7vXNshjgsn1asSOb2u9NNctufcS4WvcDyaw+Ruf2yhBR94fkj
lyOH1FlQakIflk87k8ztP+U/JnP7U0lJ+wX4fFy1dD8cT5tG5va/Eh+RufxW
JZEe4PcHstqRufXf3MnkQ8W1D/mbs/ozCq3F7w/vN2XyoTnKZK8Pq+8n9Ifx
RWkHOeJ/9wer7+MOgPrYLjIA6mNxHJnb31jZSub2E7aEfwL8/HO3IHlgge0T
L19kz/8xaG0T2vmJlpoMBKsjybfSjI3ttJLNF3f/vB55YcQAtl+a9408YW3M
rzqZ2fhko0EBWN99GJlb/929RObWhxdiB0H/W6s/OMCvf2kOJvPrz0eipU+D
ob9j1BkCtv8Zgv3fc2jlPVrPMhTs6mhh2VA4vvZ2KPSvzIzDAvx+wH4f8srM
rz8nqM/iS4vJIasiFvZLwJ5XJ8md3pibsrH1Ze10w+n5HTP0wcZvLB9AIc/K
s2vsZvb8UxYMh/6Rfpyct9yEyLvL2PlNPYKeh80uZsz2L2sPVh4Br8vdR8D/
m0dGwPGdF2RuPz2pwsgAv9+e2pXM78d3kBzSekuexxVYeZ+SS1yt3SkOm18q
Jh8V4Ndr0DuNgt/XmjEK4i3CYzI3/0ZOMhrqK7MDOWr7kpoHqrL6ayq+7u8e
Df+vJhyD8ZwSY+DzvUlj4HoSd46B31e5PwZ+f6uYAfEVtzWZn9++3YD+jHaH
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
EJx/d0whuB6EzWj5RiG4fsz8heH6cpoUhutP2lAYrk/1amG4fo3vheH69hoV
wfbN8CJwf+iXi2D7JrYI3F9uzqLYvhmC1lajnU9oP3sxuJ/VgcWwfb2yGLRP
7XPFoP0qZpWhfavUkqH9ay2ToX3snsHX5UzF4f+16mizb3Fsb59ES6/RRmgJ
bH/3QosOWgmi9TQlwW53tDAPrb1EmylDsLxd0ZKJVg+h7eSlwF5ZtDITre8v
BfW79ZjM5b8JpUvH8OMpskbmxlvMPWQunu48JHPjNVLJMtTeLXHwS3Qxlp/Z
Dm3vLAPtXe8+mZ8vJZeN4eeH6m3I3PxRdzuZny91l8yNf8lxy8Xw419mSzK3
nrQzlsytNy3dQqtC+Rg+v9RuhvZGo5XraP0nmVufzm1cIYbPPxBGkrn5w5pL
5tZfNr+RufFgv2HFGFgffBiZy09S11aE9on9pSLUJ16OSvj8G4zWLbT7ES1k
rwzW/kGbK9D+O7SUpQrY0NH2UrT4tgq23zIq8H2tPgqcD3eRAudLfqXA+dTS
hcL5dnqGwu/hzw+F30sNkLl8YyN1VbDXrSq8X5xL5vJP9Bdkbv63JVaLgfWL
u5K58Vx5djW4vs2nZG6+oJOsOljqRObmf6szqsP9Y+wj8/OnE9eA/qdYqgb0
T/WpNaC9Zu1GCwlrQv0ul6gJ9bs5Ce3YNaG+l/6uBVaLoe3xaG8bWolTG6wX
RrsGWtiC1n7XhvarWaAO2B+FljaijR9kbrzRzls3hh9vFEeQufFGZT3a+op2
c9UDCw3R2pp6UL+aF8nceKUv1cf+fL360H83VpG58Ur7PJkbHxSzNaD6bm/t
/JvZflNKbTKXz64PIHPrNbsRZG49Z+EdOWeb9lVWdfmftRoNYyCffAmZ26/P
P0VWTrR9b11m+e8ZGoGNqmRuP3JvITl+x9pCcBPLfz9B/je20e5sI1j+e1o1
JjRxyCwpogzLf69Cbvigc/fodqx888l3tq9J8/In2+/rGDnOP/0+XWH7pZup
GtPzJd+eKkZOVt6KZG5/bmkOWj1MLjg6YdyJC1j+e4omMaGHqrXee3g8y38v
R65b72Cb4DV2PmeR1yzfnmXcBxZvOEB+cqzutO5XWXwkadMYfv1ioQyZW79X
7kjm8jXMvU3x+fWoKT6/QprFwHqp7ZtBfWXvInP7MXhRZC7/TSneHKyH/fF/
6124O8hcvpJwD60VbQHvN1u1gOP5W1vA50u30UahlmC7OVrcjFZutITvZ+Vv
Bd/fbYKWN7SC86VdbYXnM09raC/4jVpDe0Jd1xraG8bl1lBf27Gtob0iNmgD
9a8ypA3Uv9YFMpfv6X5qA/1pQQrD+mtgGLZvV4Zhe/F9GLSXpaxtsb1Yqy38
v72sLda3Z9pi/DtTO6jv9ertoL1v9W0H/QHhVDuM575uB/0PM7Q99E+cXu2h
/yI57aF/owbbY/8nTQdsz3TvAP0ncV4H6F/pLztA/8tKqWF/LRwtm2jtENpJ
3hHsl0WrM9HG/o7w+V6STmCxNFrR0NaeThiPeNgJvq9csjNYa4c2J6P9+2gp
fhc4vtGmC7xuT+iC7bG7XeD3UOJ2hd9LL9IVfk93bFf4vYWtXeF60IRwjPcX
DMf+5ehwuN6kTeHYv/wZjv3LfN3wem7cDfuX/3bD/o/bDfuXubtjf61Rd/h/
eVh3OL55qTu2d750h/JJ9Xtg/3gw2o5Eex/RYvaeYP0ftLUCLbxHy1l6gbWa
aGdpLzzfp9Fqxt7wfqNab/h+3qLe8P3Fk72xvfaqN5w/S+mD/eOefeD8y8fR
WgDtVOoL9ruhpbl9sT//Am2L/bA/3xWtzEZbT9FuMh2+j1BWx/p5ho7t4X06
jkcm7o/Xc6n+cL6Nqf3hfrB394f7xXvQH8evSgyA+01vOwDuR9ceAPercH8A
9t+K/YP1Ret/oD7wt5G58WPpDpkbX1bjDIzhx5/tFmRufxvPQCs38f3674Fw
PLfpIHr+5lj0Jl8ZVl+MRmvX0OYPtK8OBksj0MYVtP0VLTYcEsPPb1WGDoH4
v75mCPRH3c9oIcdQsDYIba5C+x/QUrZhMJ5gDBgG4wn28mEwniC+GwbjCUrm
4TCeYPUbjvG+JcMx3vdmONYPGUbgeHrvEXA9+wtHYP8tZgTcD0bakRh/6jES
7k9xPr6uR4/E+iHVKOzPVRyF4+tzRuH4/+FRWJ+lGI31WTm0OgttHEB7ScfA
+RLLjIH7T5+OtvaOgfMtJDZi+P0B5RAyN9/FnELm12PfRebXY48yoD2pFh8L
44tG2FgYf/R2kLn5y+K9sdB/0IuOA1ut0MI2Mpf/Ld8mRzpfr6wJZ+Odf42H
153mZG7/EX8Mmcv/Vm+Mh/FU4xeZm1/lNZkAFkeh9ato6ztaUCfG8Pmv8vCJ
MP6srSPX/3T8wo7UbPw4Fu3nnATvV4dMguMZqydB+b1Pk+D7idJk+P5K3clw
fqyVk+H8uefwdTnrFDj/Wq0p8Ps5y6bA7+ufmQK/v+RPgevDqD4Vrh+771S4
vsRTU+H6U15PhevTCp0Ww89HcHuR+f0AHTK3XroWnAb1kZlmOjxv/O7T4Xkj
zUMbL/H9dsoZOH4RjlZMtPUM7SafCZY7o7WZaOcx2k8yC/sb2iws7zS09xAt
JpoN1tuhrcloIQotxzfBZhsTns/OBBPb63dNeD6rcedAf8FuOQf6H95YtHIL
rQtzwW6zuTjeOWYufJ52fS62F37OxXhv43n4+49EG+48jPd+m4f9t0bz4fOU
YfOxP3QJ7X7B98v1F2B/aPACPJ+RC6A8/scF+PvXWYjjyf8shPaWd3Yh1P/i
+4XwvNBrLoLniaUvwvb5mUUYP327CNuL1RZjf6IPWjq5GJ+/rxZjf15Zgs/f
nkvg+ascx9f1wBJ8/qZe+t/x/w/C7DC/
            "]]}}, {{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, {
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}}, {{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, {
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}, {
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {2.9087424*^9, 0}, 
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {{}, {0.}}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotLabel -> 
        FormBox["\"IPC\"", TraditionalForm], 
        PlotRange -> {{2.9087424*^9, 3.7046592*^9}, {-0.2, 1.55}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"Mercado eficiente\"", "\"Datos reales\""}, 
         "LineLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.795481494668847*^9, 3.795557008406891*^9, 
  3.883034605646865*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"8804c28e-7d40-4a94-bf48-f9e2cc5899a9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribuciones con Moving Average", "Chapter",
 CellChangeTimes->{{3.7951274362299633`*^9, 3.7951274762606277`*^9}, {
  3.795127744167031*^9, 
  3.795127744492436*^9}},ExpressionUUID->"f32db347-1789-4b23-982b-\
e26603d3befc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DistribucionesMAV", "[", 
    RowBox[{"market_", ",", "dias_"}], "]"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "MercadoSimuladoMAV", ",", "MercadoEficienteConFechasMAV", ",", 
       "MercadoPreciosSimulados", ",", "MercadoConPrecioSimuladoYFechas", ",",
        "MercadoPorcentuales", ",", "MercadoConFechasYPreciosMAV", ",", 
       "dataSimuladaMAV", ",", "dataRealMAV", ",", "\[ScriptCapitalH]", ",", 
       "a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MercadoSimuladoMAV", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoEficienteConFechasMAV", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoSimuladoMAV"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoPreciosSimulados", " ", "=", " ", 
       RowBox[{
        RowBox[{"Accumulate", "[", 
         RowBox[{"MercadoEficienteConFechasMAV", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"Min", "[", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"MercadoEficienteConFechasMAV", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "]"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"MercadoConPrecioSimuladoYFechas", " ", "=", "  ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"MAVReturns", "[", 
            RowBox[{"market", ",", "dias"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          "MercadoPreciosSimulados"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoPorcentuales", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", "MercadoConPrecioSimuladoYFechas", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MercadoConFechasYPreciosMAV", "=", 
       RowBox[{"MapAt", "[", 
        RowBox[{"DateFromYearPercentual", ",", 
         RowBox[{"MovingAverage", "[", 
          RowBox[{"MercadoPorcentuales", ",", "dias"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dataSimuladaMAV", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Entropy", ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"DiscretizeByQuartiles", "[", 
            RowBox[{
             RowBox[{"MercadoConFechasYPreciosMAV", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Returns"}], 
            "]"}], ",", "dias", ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dataRealMAV", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Entropy", ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"DiscretizeByQuartiles", "[", 
            RowBox[{
             RowBox[{"MAVReturns", "[", 
              RowBox[{"market", ",", "dias"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", "dias", 
           ",", "1"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"KolmogorovSmirnovTest", "[", 
       RowBox[{"dataSimuladaMAV", ",", "dataRealMAV"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalH]", "=", 
       RowBox[{"DistributionFitTest", "[", 
        RowBox[{
        "dataSimuladaMAV", ",", "dataRealMAV", ",", 
         "\"\<HypothesisTestData\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalH]", "[", "\"\<Properties\>\"", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"a", " ", "=", 
       RowBox[{"\[ScriptCapitalH]", "[", 
        RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", " ", 
       RowBox[{
        RowBox[{"\[ScriptCapitalH]", "[", 
         RowBox[{"\"\<TestConclusion\>\"", ",", "All"}], "]"}], "//", 
        "TraditionalForm"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalH]", "[", 
       RowBox[{"\"\<TestDataTable\>\"", ",", "\"\<DistanceToBoundary\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"\[ScriptCapitalH]", "[", "\"\<FittedDistribution\>\"", "]"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"a", " ", "b"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7930781302367125`*^9, 3.7930781945012407`*^9}, {
   3.793078237643588*^9, 3.793078240596267*^9}, {3.7930782867539454`*^9, 
   3.7930783266753464`*^9}, {3.7930784563536415`*^9, 
   3.7930785919699693`*^9}, {3.7930790837433877`*^9, 
   3.7930791376580024`*^9}, {3.793080128142029*^9, 3.793080136769927*^9}, {
   3.79308025500835*^9, 3.7930802704385424`*^9}, {3.7930803633267384`*^9, 
   3.793080364263914*^9}, 3.793080518912616*^9, {3.793080552344083*^9, 
   3.7930805572658415`*^9}, {3.7930806803740997`*^9, 
   3.7930807008285646`*^9}, {3.793080864440527*^9, 3.7930809055627985`*^9}, {
   3.793081072393794*^9, 3.7930810939842916`*^9}, {3.7930812601712847`*^9, 
   3.793081270308519*^9}, {3.7930814989188876`*^9, 3.793081563884746*^9}, {
   3.7930818255267153`*^9, 3.793081849471612*^9}, 3.7930821013510637`*^9, {
   3.7930822884680986`*^9, 3.7930823277345376`*^9}, {3.7930824096525908`*^9, 
   3.793082413815428*^9}, {3.793082496985007*^9, 3.7930825087937045`*^9}, {
   3.793082608675214*^9, 3.7930826097999496`*^9}, {3.793082711636411*^9, 
   3.7930827304259806`*^9}, {3.79308279272987*^9, 3.7930827932297525`*^9}, 
   3.79308284685069*^9, {3.7930831960193586`*^9, 3.793083199275247*^9}, {
   3.7931174994029903`*^9, 3.7931175172615824`*^9}, {3.793117547814768*^9, 
   3.7931175488547907`*^9}, {3.7950518238969226`*^9, 
   3.7950518301218724`*^9}, {3.795476298409649*^9, 3.7954763060961485`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"6f8e275e-9dd5-44fc-881c-5168aad6d315"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"DistribucionesMAV", "[", 
   RowBox[{"3", ",", "50"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7954759175217686`*^9, 3.795475936757763*^9}, {
  3.795476328301975*^9, 3.795476330933412*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"dd5d0977-6407-48a4-9dc2-ea6733355230"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"100586.74745454286`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"",2,74,5,
   29423148769763840645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954759723692045`*^9, 3.79547724240625*^9, 
  3.7954777487259116`*^9, 3.7954815281971908`*^9, 3.795557042792665*^9, 
  3.8830346356883945`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[74]:=",ExpressionUUID->"9306d1d8-65cc-40df-aaf2-dbc031e0085b"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"402346.9898181714`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"",2,74,6,
   29423148769763840645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954759723692045`*^9, 3.79547724240625*^9, 
  3.7954777487259116`*^9, 3.7954815281971908`*^9, 3.795557042792665*^9, 
  3.8830346365826764`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[74]:=",ExpressionUUID->"332f8be0-b5ef-4173-a0db-1bf9898df6c7"],

Cell[BoxData[
 TemplateBox[{
  "DistributionFitTest","tstdm",
   "\"There are \\!\\(\\*RowBox[{\\\"1\\\"}]\\) datasets present, but the \
tests in \\!\\(\\*RowBox[{\\\"\\\\\\\"DistanceToBoundary\\\\\\\"\\\"}]\\) \
require \\!\\(\\*RowBox[{\\\"2\\\"}]\\) datasets.\"",2,74,7,
   29423148769763840645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954759723692045`*^9, 3.79547724240625*^9, 
  3.7954777487259116`*^9, 3.7954815281971908`*^9, 3.795557042792665*^9, 
  3.8830346376605816`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[74]:=",ExpressionUUID->"f222ba51-9f48-4710-a207-a0421fb99566"],

Cell[BoxData[
 TemplateBox[{
  "DistributionFitTest","ntunf",
   "\"The \\!\\(\\*RowBox[{\\\"\\\\\\\"DistanceToBoundary\\\\\\\"\\\"}]\\) \
test cannot be used to assess fit to \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"6261\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\). The \
\\!\\(\\*RowBox[{\\\"\\\\\\\"DistanceToBoundary\\\\\\\"\\\"}]\\) test is only \
useful as a test for uniformity.\"",2,74,8,29423148769763840645,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954759723692045`*^9, 3.79547724240625*^9, 
  3.7954777487259116`*^9, 3.7954815281971908`*^9, 3.795557042792665*^9, 
  3.8830346387853193`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[74]:=",ExpressionUUID->"65e2a116-8b4c-429e-ac10-eb83fa551494"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"33.0073654`", ",", 
   RowBox[{
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"\<\"Anderson\[Hyphen]Darling\"\>", "0.5127840938213514`", 
         "0.7337981261690747`"},
        {"\<\"Cram\[EAcute]r\[Hyphen]von Mises\"\>", "3263.6253491198972`", 
         "4.440892098500626`*^-14"},
        {"\<\"Kolmogorov\[Hyphen]Smirnov\"\>", 
         FractionBox["771660", "13171057"], "8.52186987643222`*^-10"},
        {"\<\"Kuiper\"\>", "3.9922718972079823`", "0.`"},
        {"\<\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"\>", 
         "326.8741476668731`", "1.2144899603448841`*^-37"},
        {"\<\"Watson \\!\\(\\*SuperscriptBox[\\(U\\),\\(2\\)]\\)\"\>", 
         "0.6970407809280812`", "1.5003644766594608`*^-6"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False], " ", 
    TagBox[
     FormBox[
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is not rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", "\"Anderson\[Hyphen]Darling\"", "\" test.\""},
            "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", "\"Cram\[EAcute]r\[Hyphen]von Mises\"", 
            "\" test.\""}, "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", "\"Kolmogorov\[Hyphen]Smirnov\"", 
            "\" test.\""}, "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{"\"based on the \"", "\"Kuiper\"", "\" test.\""}, 
           "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", 
            "\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"", 
            "\" test.\""}, "RowDefault"]},
         "RowDefault"], ",", 
        TemplateBox[{
         "\"The null hypothesis that \"",
          TemplateBox[{"\"the datasets have the same distribution \""}, 
           "RowDefault"],"\"is rejected at the \"",
          TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
          TemplateBox[{
           "\"based on the \"", 
            "\"Watson \\!\\(\\*SuperscriptBox[\\(U\\),\\(2\\)]\\)\"", 
            "\" test.\""}, "RowDefault"]},
         "RowDefault"]}], "}"}],
      TraditionalForm],
     TraditionalForm,
     Editable->True]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7954759753833876`*^9, 3.7954772452808914`*^9, 
  3.7954777532136183`*^9, 3.7954815310848274`*^9, 3.795557047588293*^9, 
  3.88303463881656*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"d3600c36-06d2-4ee7-ab5c-3faf91d4a74a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 96, "Title",ExpressionUUID->"de065120-15fa-43dd-8bb5-10415e6c5965"],
Cell[CellGroupData[{
Cell[776, 29, 166, 3, 67, "Chapter",ExpressionUUID->"7973d6c5-dd25-4b0d-8242-e3423b56cdb1"],
Cell[945, 34, 3712, 72, 304, "Input",ExpressionUUID->"c91df5a4-1630-4ed6-957c-35f9f98e65fb",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[4694, 111, 165, 3, 67, "Chapter",ExpressionUUID->"1e6d69f0-f274-44a3-a2e7-526c074dcf4c"],
Cell[4862, 116, 1554, 34, 135, "Input",ExpressionUUID->"6adda3a4-1a12-472e-9066-7e404ae19ed0",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6453, 155, 164, 3, 67, "Chapter",ExpressionUUID->"a89a7047-ce56-4831-a258-ab41f4cd8078"],
Cell[6620, 160, 2325, 63, 213, "Code",ExpressionUUID->"d7d4d34c-16d6-412b-9eef-7a563315d1af"],
Cell[8948, 225, 777, 21, 101, "Input",ExpressionUUID->"59a87de1-1006-4e22-a1b2-023b23ad10bf",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[9762, 251, 195, 3, 67, "Chapter",ExpressionUUID->"610c0db5-b484-433d-b566-656fb6a8ed02"],
Cell[9960, 256, 1095, 27, 156, "Input",ExpressionUUID->"6bac6e49-7dd0-4180-8c3b-9c7dc5bdc71d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[11080, 287, 332, 7, 105, "Section",ExpressionUUID->"83aad832-3c2a-4c70-8a68-fddc523d1d5d"],
Cell[11415, 296, 1988, 49, 267, "Input",ExpressionUUID->"54d1f456-6a35-427e-8613-d04d5f975422",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[13440, 350, 225, 5, 105, "Section",ExpressionUUID->"1d2094a7-668d-4e0b-844f-436eaf51c1bc"],
Cell[13668, 357, 331, 7, 56, "Text",ExpressionUUID->"2e5c4d4a-cba7-427f-993d-d3c759396a8a"],
Cell[14002, 366, 2675, 67, 397, "Input",ExpressionUUID->"9db116f2-956d-48ef-a629-bb0266b3195f",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[16714, 438, 280, 6, 105, "Section",ExpressionUUID->"8b90e369-4428-4247-8ac0-84c08c9dc687"],
Cell[16997, 446, 2534, 61, 343, "Input",ExpressionUUID->"b660d0da-cb09-4a04-8f18-515f95459ca6",
 InitializationCell->True],
Cell[19534, 509, 294, 6, 28, "Input",ExpressionUUID->"0080865a-de98-48b8-8ec1-17355de5f154"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19865, 520, 333, 7, 105, "Section",ExpressionUUID->"6ebdd0c2-c2e8-44d8-bcec-9575209e51de"],
Cell[20201, 529, 5424, 123, 750, "Input",ExpressionUUID->"f9a50034-3ccd-4f2a-b580-b0c5c782d9da",
 InitializationCell->True],
Cell[25628, 654, 324, 7, 34, "Text",ExpressionUUID->"7105d391-4569-4c1b-be2d-05ef6bc997e2"],
Cell[25955, 663, 440, 8, 153, "Text",ExpressionUUID->"29ea92cd-76f5-4cb2-be3f-f518ea710052"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26444, 677, 2039, 28, 117, "Subtitle",ExpressionUUID->"a7227bb1-f59c-4399-a59b-ea98a0d51251"],
Cell[28486, 707, 10089, 219, 1143, "Input",ExpressionUUID->"ff64b9bc-8d20-47ec-b28a-29e1a05dad47",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[38600, 930, 518, 14, 45, "Input",ExpressionUUID->"85a6856f-9063-4842-a7ac-698c4e49f218"],
Cell[39121, 946, 9492, 242, 144, "Output",ExpressionUUID->"2bc02f85-0163-43c0-9772-8fda00303cd9"]
}, Open  ]],
Cell[48628, 1191, 319, 7, 56, "Text",ExpressionUUID->"6e76cc18-9cd5-47a4-908d-83af16dab245"],
Cell[48950, 1200, 7964, 168, 846, "Input",ExpressionUUID->"9c9658e0-530f-4371-82eb-f18014fc6525",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56963, 1374, 254, 5, 96, "Title",ExpressionUUID->"fc8293b6-52c2-4bd5-9fa6-23154e29ac5c"],
Cell[57220, 1381, 402, 8, 131, "Subsection",ExpressionUUID->"f41a721c-68e8-4bac-95d5-887fdb0dc804"],
Cell[CellGroupData[{
Cell[57647, 1393, 400, 6, 53, "Section",ExpressionUUID->"fde31feb-1cd2-46bc-9ae0-e937defee260"],
Cell[58050, 1401, 3023, 74, 472, "Input",ExpressionUUID->"4ca392ef-fa29-4d5c-8e39-6297e4d05241",
 InitializationCell->True],
Cell[61076, 1477, 237, 6, 34, "Text",ExpressionUUID->"08e5381b-7430-49d4-834e-977c4ccb4ef7"],
Cell[CellGroupData[{
Cell[61338, 1487, 5602, 132, 603, "Input",ExpressionUUID->"4e56329a-21cc-49ce-9014-44e85c06616d",
 InitializationCell->True],
Cell[66943, 1621, 6443, 94, 149, "Message",ExpressionUUID->"45d24d6c-9aa2-4cb9-ac11-f0a3b187c93e"],
Cell[73389, 1717, 390, 9, 21, "Message",ExpressionUUID->"d861556b-d6bf-439e-9044-d4b4841ce966"],
Cell[73782, 1728, 6441, 94, 149, "Message",ExpressionUUID->"eeb91336-4d2a-47c1-83ec-4ccb9fdac898"],
Cell[80226, 1824, 369, 9, 21, "Message",ExpressionUUID->"2734c850-f0ee-470d-80e5-77d88a824eff"],
Cell[80598, 1835, 499, 11, 21, "Message",ExpressionUUID->"40ffa06f-06af-4b3b-beab-f7dafbe68ffd"],
Cell[81100, 1848, 499, 11, 21, "Message",ExpressionUUID->"4192a01d-12c3-431f-8394-83d62267e447"],
Cell[81602, 1861, 499, 11, 21, "Message",ExpressionUUID->"0b236993-5d06-4426-a408-579c57af11b3"],
Cell[82104, 1874, 460, 10, 21, "Message",ExpressionUUID->"35d85a1f-cb5b-4f3e-b396-e0f228bd88f8"],
Cell[82567, 1886, 5819, 85, 246, "Message",ExpressionUUID->"308a7f96-42c5-47f7-93cf-bfbfff957bdf"],
Cell[88389, 1973, 367, 9, 21, "Message",ExpressionUUID->"97a654a4-dabe-4ecd-8e76-85142ac4a83b"],
Cell[88759, 1984, 4235, 62, 148, "Message",ExpressionUUID->"1749556e-3f90-46b8-9ab3-be48c8f8c6a6"]
}, Open  ]],
Cell[93009, 2049, 7331, 172, 716, "Input",ExpressionUUID->"f0fb565e-d2c8-4577-99eb-769c481f6dac",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[100365, 2225, 225, 4, 53, "Subsection",ExpressionUUID->"0ba61bb2-abf2-4ae0-af1a-ccda4b8681a9"],
Cell[100593, 2231, 12119, 266, 1224, "Input",ExpressionUUID->"0342e0ba-3427-4de8-ae8c-fc84a2263588",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[112737, 2501, 450, 7, 45, "Input",ExpressionUUID->"07fa5955-5266-4bae-b7a0-07e31bc238a0"],
Cell[113190, 2510, 419948, 8058, 195, "Output",ExpressionUUID->"ccdd8e78-aeba-4568-b649-22e67904fbb6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[533199, 10575, 182, 3, 67, "Chapter",ExpressionUUID->"e69e49d7-d396-4b57-ad09-dd01ddbad99f"],
Cell[533384, 10580, 7758, 142, 683, "Input",ExpressionUUID->"004fcc83-ad3f-45af-9697-047531d8dfb5",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[541167, 10726, 479, 8, 45, "Input",ExpressionUUID->"5ea2e687-3c0c-4c35-835c-11ef05ed4a0e"],
Cell[541649, 10736, 704, 14, 42, "Message",ExpressionUUID->"dec23ad2-7e82-488f-b98f-c15ed58c00f1"],
Cell[542356, 10752, 708, 14, 23, "Message",ExpressionUUID->"f275f3fa-a96e-4a87-a3c8-35075ee1cc87"],
Cell[543067, 10768, 709, 14, 23, "Message",ExpressionUUID->"655836a3-ccd1-48d1-a3dc-adae5ce1a66d"],
Cell[543779, 10784, 674, 13, 21, "Message",ExpressionUUID->"5ebf0ac9-381d-47a9-96bf-ced22e51d34e"],
Cell[544456, 10799, 3815, 84, 353, "Output",ExpressionUUID->"470b41b8-de3b-4e59-9875-862832ca3115"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548308, 10888, 180, 3, 67, "Section",ExpressionUUID->"2f63bb0b-5efb-4450-b634-44b5138c9c44"],
Cell[548491, 10893, 6752, 159, 882, "Input",ExpressionUUID->"450a5858-5209-4749-b6f8-a9ddf5d8a51e",
 InitializationCell->True],
Cell[555246, 11054, 1359, 37, 135, "Input",ExpressionUUID->"85225eab-6790-4dc3-962a-cea2efcb6972",
 InitializationCell->True],
Cell[556608, 11093, 7205, 159, 901, "Input",ExpressionUUID->"32d96454-6fe7-4a05-bff0-46e29717f0fd",
 InitializationCell->True],
Cell[563816, 11254, 6832, 160, 957, "Input",ExpressionUUID->"b269141e-74ec-408b-b591-370c1370e3a8",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[570673, 11418, 225, 4, 53, "Subsection",ExpressionUUID->"617117f3-9539-4dde-9d70-c830a49a7290"],
Cell[570901, 11424, 14843, 324, 1761, "Input",ExpressionUUID->"8a944c01-446f-4ec4-b1bb-9f27b16f0640",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[585769, 11752, 480, 8, 45, "Input",ExpressionUUID->"680784b1-ebef-40d9-a01d-18ce879b33f1"],
Cell[586252, 11762, 220807, 4213, 185, "Output",ExpressionUUID->"8804c28e-7d40-4a94-bf48-f9e2cc5899a9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[807132, 15983, 231, 4, 67, "Chapter",ExpressionUUID->"f32db347-1789-4b23-982b-e26603d3befc"],
Cell[807366, 15989, 6910, 148, 978, "Input",ExpressionUUID->"6f8e275e-9dd5-44fc-881c-5168aad6d315",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[814301, 16141, 332, 6, 45, "Input",ExpressionUUID->"dd5d0977-6407-48a4-9dc2-ea6733355230"],
Cell[814636, 16149, 614, 13, 23, "Message",ExpressionUUID->"9306d1d8-65cc-40df-aaf2-dbc031e0085b"],
Cell[815253, 16164, 613, 13, 23, "Message",ExpressionUUID->"332f8be0-b5ef-4173-a0db-1bf9898df6c7"],
Cell[815869, 16179, 631, 13, 21, "Message",ExpressionUUID->"f222ba51-9f48-4710-a207-a0421fb99566"],
Cell[816503, 16194, 1919, 29, 58, "Message",ExpressionUUID->"65e2a116-8b4c-429e-ac10-eb83fa551494"],
Cell[818425, 16225, 4273, 93, 409, "Output",ExpressionUUID->"d3600c36-06d2-4ee7-ab5c-3faf91d4a74a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

