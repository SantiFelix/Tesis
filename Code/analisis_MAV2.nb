(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    185679,       3625]
NotebookOptionsPosition[    174790,       3465]
NotebookOutlinePosition[    175162,       3481]
CellTagsIndexPosition[    175119,       3478]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\[FilledSquare] Analisis MAV 2", "Title",
 CellChangeTimes->{{3.883799726072884*^9, 
  3.883799736124527*^9}},ExpressionUUID->"13e2989d-d334-4cde-a4c5-\
1896724270ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"\"\<AdvancedMapping`\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Extra\>\"", ",", 
       "\"\<AdvancedMapping.wl\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", 
    RowBox[{"\"\<EconomicComputations`\>\"", ",", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<EconomicComputations.wl\>\""}], "}"}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Opciones", " ", "de", " ", "estilo"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smallFontSize", " ", "=", " ", "13"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bigFontSize", " ", "=", " ", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotSize", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
      "\"\<IndianRed\>\"", "]"}], ",", "Black", ",", "Blue", ",", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", "\"\<Olive\>\"",
       "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.725813801477882*^9, 3.725813842354185*^9}, 
   3.7258145952114487`*^9, {3.725815029462809*^9, 3.725815050374353*^9}, {
   3.725822160813527*^9, 3.725822210293992*^9}, {3.725823753066257*^9, 
   3.725823758353553*^9}, {3.7258238497826433`*^9, 3.7258238546235313`*^9}, {
   3.725826159542289*^9, 3.725826159775069*^9}, {3.725886137582262*^9, 
   3.725886137825506*^9}, {3.7258912353102493`*^9, 3.725891240101152*^9}, {
   3.725908856840219*^9, 3.725908857152266*^9}, {3.7259089115580063`*^9, 
   3.725908972319603*^9}, {3.7259090027497673`*^9, 3.725909005775334*^9}, {
   3.725909180222677*^9, 3.7259091821578503`*^9}, {3.725909857689686*^9, 
   3.7259098579284143`*^9}, {3.725911306756922*^9, 3.725911361342228*^9}, {
   3.725912152652165*^9, 3.725912229638928*^9}, {3.726161944526227*^9, 
   3.726161945773011*^9}, {3.726162117625463*^9, 3.726162117919694*^9}, {
   3.7261623472179117`*^9, 3.726162354684567*^9}, {3.726240902388068*^9, 
   3.726240902728302*^9}, {3.7262409758805933`*^9, 3.7262410033188047`*^9}, {
   3.726241262768165*^9, 3.726241304212583*^9}, {3.726241408073407*^9, 
   3.7262414175265408`*^9}, 3.726323552579049*^9, {3.7263273579102097`*^9, 
   3.726327359364676*^9}, {3.726327490478724*^9, 3.726327492005521*^9}, {
   3.726328254122326*^9, 3.726328257125023*^9}, {3.726328292868544*^9, 
   3.726328302032453*^9}, {3.7263291584760113`*^9, 3.726329172180461*^9}, {
   3.726329598747867*^9, 3.7263296020649557`*^9}, {3.7263307200371113`*^9, 
   3.726330776967119*^9}, {3.726331621514995*^9, 3.726331622870336*^9}, {
   3.726347600616104*^9, 3.726347608614952*^9}, {3.7263521315766897`*^9, 
   3.726352137598084*^9}, {3.726410318377204*^9, 3.726410319653459*^9}, 
   3.7264104024623423`*^9, {3.738611169349203*^9, 3.7386111782316427`*^9}, {
   3.738611222933153*^9, 3.738611250476118*^9}, {3.7566544178947763`*^9, 
   3.75665441991775*^9}, {3.756654453745466*^9, 3.756654487319433*^9}, 
   3.7566547895902443`*^9, {3.75665485095689*^9, 3.7566548610389843`*^9}, {
   3.761332937165599*^9, 3.761332962440831*^9}, {3.761332995433766*^9, 
   3.7613330062208347`*^9}, 3.77547795015276*^9, {3.777400243950224*^9, 
   3.7774002501351957`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"84717159-2ec6-463f-a349-ce0b2d459d11"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<DJI_DAX_MXX_NIKKEI_dataset.mx\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"database", " ", "=", " ", 
   RowBox[{"Import", "[", "path", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"database", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<Name\>\""}], "]"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<DJIA\>\"", ",", "\"\<DAX\>\"", ",", "\"\<IPC\>\"", ",", 
     "\"\<Nikkei 225\>\""}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.725908928874539*^9, {3.7386112566008368`*^9, 3.7386112689098263`*^9}, {
   3.7564739455548563`*^9, 3.756473966482794*^9}, {3.756477138657824*^9, 
   3.7564771389575453`*^9}, {3.76133308942835*^9, 3.761333091876583*^9}, {
   3.771960534143981*^9, 3.771960545447304*^9}, {3.772036063276965*^9, 
   3.7720360665464077`*^9}, {3.772036241194306*^9, 3.77203625287162*^9}, {
   3.775477961165186*^9, 3.775477969288271*^9}, 3.7754780131425*^9, {
   3.777400341397171*^9, 3.777400351848933*^9}, {3.777400447901471*^9, 
   3.777400460342659*^9}, {3.777400507434965*^9, 3.777400507705071*^9}, {
   3.777400572427231*^9, 3.7774005725833693`*^9}, {3.777400609877466*^9, 
   3.777400611273203*^9}, {3.777745852325385*^9, 3.77774585359934*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"72ab9df0-cca0-4318-9d19-b1b9bd2c0751"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DaysInYear", "[", "year_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"DateDifference", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"year", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"year", ",", " ", "12", ",", " ", "31"}], "}"}]}], "]"}], 
      "]"}], " ", "+", " ", "1"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"YearPercentual", "[", "date_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"QuantityMagnitude", "[", 
        RowBox[{"DateDifference", "[", 
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"date", "[", "\"\<Year\>\"", "]"}], ",", " ", "1", ",", 
             " ", "1"}], "}"}], "]"}], ",", " ", "date"}], "]"}], "]"}], " ", 
       "/", " ", 
       RowBox[{"DaysInYear", "[", 
        RowBox[{"date", "[", "\"\<Year\>\"", "]"}], "]"}]}], "]"}], " ", "+", 
     " ", 
     RowBox[{"date", "[", "\"\<Year\>\"", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DateFromYearPercentual", "[", "yearPercentual_", "]"}], " ", ":=",
    " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"year", ",", " ", "daysEllapsed", ",", " ", "date"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"year", " ", "=", " ", 
       RowBox[{"IntegerPart", "[", "yearPercentual", "]"}]}], ";", "\n", "\t", 
      RowBox[{"daysEllapsed", " ", "=", " ", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yearPercentual", " ", "-", " ", "year"}], ")"}], " ", "*", 
         " ", 
         RowBox[{"DaysInYear", "[", "year", "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"date", " ", "=", " ", 
       RowBox[{"DatePlus", "[", 
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"year", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}], ",", 
         " ", "daysEllapsed"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "date", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellLabel->"In[22]:=",ExpressionUUID->"a99e962e-3c61-4d86-a62b-4ca82aca1915"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Obtendremos los datos del mercado 1, para una ventana \
de 50 dias.", "Subsubsection"]], "Chapter",
 CellChangeTimes->{{3.883799830398057*^9, 3.8837998696659036`*^9}, {
  3.8838011352168107`*^9, 
  3.8838011611614523`*^9}},ExpressionUUID->"0fc01ad6-d04a-4a31-aa11-\
c3263d37ece4"],

Cell["La siguiente linea devuelve fechas percentuales y precios", "Text",
 CellChangeTimes->{{3.8838002041839547`*^9, 3.8838002222519493`*^9}, {
  3.8838002566064796`*^9, 
  3.883800256743009*^9}},ExpressionUUID->"19eb24bf-d6d7-45c0-be0e-\
cfcfd0a2d8d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"percentuales", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{"YearPercentual", ",", " ", 
     RowBox[{
      RowBox[{"database", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", "]"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8837999656836443`*^9, 3.883799995828539*^9}, {
  3.8838001212243767`*^9, 3.8838001409166293`*^9}, {3.883800341723879*^9, 
  3.8838003455533867`*^9}, {3.8838004458097267`*^9, 3.8838004507090273`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"bcd7fad0-449f-4998-b6d8-aa2d58d7ad45"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "lo", " ", "anterior", " ", "tiene", " ", "un", " ", "Length", " ", 
   "6466"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8838001261000433`*^9, 3.883800136935138*^9}, {
  3.8838003503480864`*^9, 3.8838003722733727`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"fce3fbe6-ee72-4785-b2d2-6feaff7ac870"],

Cell["\<\
La siguiente linea devuelve un formato de fecha del percentual al formato de \
fecha de mathematica.\
\>", "Text",
 CellChangeTimes->{{3.8838002267203903`*^9, 3.8838002621479445`*^9}, {
  3.8838005372411203`*^9, 
  3.8838005474837914`*^9}},ExpressionUUID->"1917bd5f-6dbc-4d00-85e5-\
40249d07c0b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fechas", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DateFromYearPercentual", "[", "#", "]"}], "&"}], ",", 
     RowBox[{"percentuales", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883800267729932*^9, 3.883800277894438*^9}, {
  3.8838003151112213`*^9, 3.8838003195093975`*^9}, {3.883800474645361*^9, 
  3.8838005094901495`*^9}, {3.883800553135154*^9, 3.8838005825306764`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"cdc59797-abd7-4dad-83a1-34540d2a3f10"],

Cell["Ahora se asigna cada fecha su respectivo retorno de precio", "Text",
 CellChangeTimes->{{3.883800559631029*^9, 3.883800569002576*^9}, {
  3.883800608813771*^9, 
  3.8838006110132895`*^9}},ExpressionUUID->"09c94563-5c13-40f6-a332-\
84ba75565cb5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"precios", "=", 
   RowBox[{
    RowBox[{"database", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Returns\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8838005914035063`*^9, 3.883800627804878*^9}, {
  3.8838008747822647`*^9, 3.883800877082326*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"6f9361b1-0ac2-4a96-b717-649de58741fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<retornos.csv\>\"", ",", "datereturn"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8843360149702616`*^9, 3.8843360282210994`*^9}, {
  3.884336060242283*^9, 3.8843360627770157`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2550232b-d9e4-491d-b233-74a3706f8d32"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<retornos.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[30]:=",ExpressionUUID->"5b99d402-919a-4daa-9aba-d31fae0352a1"],

Cell["\<\
Como los retornos se comen un dato, usamos drop para descartar la primera \
fecha\
\>", "Text",
 CellChangeTimes->{{3.8838006616933584`*^9, 
  3.883800676792017*^9}},ExpressionUUID->"9f48f040-d321-4a4e-a71b-\
a84547088301"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dateMenos1", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"fechas", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838006953259015`*^9, 3.8838007690335608`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"751cb140-2e75-4b45-9d6f-2cfcd1a71d63"],

Cell["Asociar a cada fecha su retorno", "Text",
 CellChangeTimes->{{3.883800824745573*^9, 
  3.8838008320588384`*^9}},ExpressionUUID->"491095cb-6c51-45ce-8520-\
c4931e2eeb65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datereturn", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"dateMenos1", ",", "precios"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.88380084886098*^9, 3.8838008885664077`*^9}, {
  3.883800958052086*^9, 3.8838009628396745`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"fe09400a-da50-448a-a0a3-af434420a14e"],

Cell[TextData[StyleBox["Un par\[EAcute]ntesis importante. Se calcula \[Mu] y \
\[Sigma] de los retornos tal cual se tienen. Esto ser\[AAcute] de utilidad m\
\[AAcute]s adelante para simular los retornos.", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.88380090536732*^9, 3.8838009092603416`*^9}, {
  3.8838011964556427`*^9, 
  3.8838012802941585`*^9}},ExpressionUUID->"53db1fb8-d2b6-4ba8-bc58-\
65f906cca448"],

Cell["De los retornos simulados se obtiene \[Mu] y \[Sigma].", "Text",
 CellChangeTimes->{{3.883801288356642*^9, 
  3.8838012989394207`*^9}},ExpressionUUID->"cb546844-886a-49e2-9178-\
16b1de326a6a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", " ", 
   RowBox[{"Mean", "[", 
    RowBox[{"datereturn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"StandardDeviation", "[", 
    RowBox[{"datereturn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8838013023584466`*^9, 3.8838013677869234`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"311da371-e394-4cd0-8216-a2875b7410ef"],

Cell[CellGroupData[{

Cell["\<\
Cerrando ese parentesis, se continua con los retornos del mercado 1.\
\>", "Subsection",
 CellChangeTimes->{{3.8838014672343683`*^9, 3.8838014855471373`*^9}, {
  3.883801756487914*^9, 
  3.88380177580154*^9}},ExpressionUUID->"c403ed1b-4d07-46e9-b380-\
8f1ed0d09fb8"],

Cell["Se omite la estandarizaci\[OAcute]n de los retornos", "Text",
 CellChangeTimes->{{3.8838017525483437`*^9, 3.883801780989448*^9}, {
  3.8844011597435427`*^9, 
  3.8844011653556023`*^9}},ExpressionUUID->"f76b1b43-f18b-4fa5-8bf8-\
2c7dec9b75cf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"retuREstandarizado", "=", 
   RowBox[{"Standardize", "[", 
    RowBox[{"datereturn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8838017868362613`*^9, 3.883801842801095*^9}, {
   3.8838018817197065`*^9, 3.8838018860543003`*^9}, 3.88433576867373*^9, {
   3.884336282669626*^9, 3.8843362859987535`*^9}, {3.8844010780196342`*^9, 
   3.884401082917306*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"28654bd2-7048-42c0-bda2-073999867efb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"returnDate", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"dateMenos1", ",", 
      RowBox[{"datereturn", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.884336344045741*^9, 3.8843363830376005`*^9}, 
   3.8843365442881775`*^9, {3.8843365752678337`*^9, 3.8843365997117605`*^9}, 
   3.8844011107710834`*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"2a2a6897-332f-45e1-bfc9-acfc30427b56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<retornoEstandarizado.csv\>\"", ",", "returnDate"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.884336397990882*^9, 3.884336400163905*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"18a056ce-78f4-4a4f-8446-3b21190d424e"],

Cell["\<\
Se calcula la media movil para los retornos de los datos reales.\
\>", "Text",
 CellChangeTimes->{{3.8838018893492355`*^9, 3.883801893926652*^9}, {
  3.883802071228258*^9, 3.883802101358004*^9}, {3.883802133320504*^9, 
  3.883802136037179*^9}, {3.8844012926741505`*^9, 
  3.8844012969397173`*^9}},ExpressionUUID->"8ccdf216-e66e-4ddc-8d72-\
23d9d9376bd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MAVr", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"datereturn", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "50"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8838021396917887`*^9, 3.8838021736200104`*^9}, {
  3.883803253339061*^9, 3.883803266103382*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"3db006b8-fee0-4723-a4b1-7d23eeb9fc44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "[", 
   RowBox[{"datereturn", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
  RowBox[{"Length", "[", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"datereturn", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "50"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8838022102526436`*^9, 3.883802265462019*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"32a3d448-9fcb-490b-ba1d-0fadfbd4ec2f"],

Cell[BoxData["49"], "Output",
 CellChangeTimes->{3.88380226626033*^9, 3.8840462290638404`*^9, 
  3.8840760558396645`*^9, 3.8840780398883553`*^9, 3.884335685785085*^9, 
  3.8844015780183077`*^9, 3.8844455154592447`*^9, 3.8846576827234163`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"19be6ea4-cce7-4f47-a9b5-a73a57422edf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dateMenosDias", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"datereturn", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"-", "49"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838023601854296`*^9, 3.883802366033724*^9}, {
  3.883803013064706*^9, 3.88380306060646*^9}, {3.8838031018130302`*^9, 
  3.883803108183651*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"face9fe0-3a0e-4a91-99dc-e6f5d39e6166"],

Cell[TextData[{
 "Se obtiene fecha y valor del retorno ",
 StyleBox["YA CON MAV de 50 dias",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.8838031712626266`*^9, 
  3.883803195256158*^9}},ExpressionUUID->"608a73ad-ec57-4348-a85d-\
1dc0e3f0b5ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MAVretDate", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"dateMenosDias", ",", "MAVr"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838031321315236`*^9, 3.8838031346107006`*^9}, {
  3.883803271967422*^9, 3.883803288227307*^9}, {3.883803318888841*^9, 
  3.883803353433899*^9}, {3.8840853099704046`*^9, 3.8840853226837425`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"455ce953-a6c6-4b87-af0b-dba0b0ee2f23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<retornoConMAVr.csv\>\"", ",", "MAVretDate"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.88408534888083*^9, 3.884085361621834*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"428a7015-afe9-4456-b47f-97dc8ca61762"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ahora si, simulamos un mercado y calculamos su MAV", "Section",
 CellChangeTimes->{{3.8838033776853647`*^9, 
  3.883803400706674*^9}},ExpressionUUID->"83f2ce94-9c95-4582-aa6b-\
39afecbb04c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulatedReturns", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
     RowBox[{"Length", "[", "precios", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838034815884514`*^9, 3.883803486380451*^9}, {
  3.883803532917756*^9, 3.883803533826433*^9}, {3.8838035756700754`*^9, 
  3.8838036153567276`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"c7981a67-a0d7-4d89-9b0a-fd719a7e2f3a"],

Cell["Se omite la estandarizaci\[OAcute]n de los retornos simulados", "Text",
 CellChangeTimes->{{3.8838036183582916`*^9, 3.883803644575474*^9}, {
  3.8844013213017883`*^9, 
  3.884401330435613*^9}},ExpressionUUID->"747c81f1-4286-4535-8442-\
05615b9879f9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"returnSimuEstandarizado", " ", "=", " ", 
    RowBox[{"Standardize", "[", "SimulatedReturns", "]"}]}], ";"}], 
  "*)"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8838036831250887`*^9, 3.883803743873145*^9}, {
  3.8844013342415695`*^9, 3.8844013901942415`*^9}, {3.8844014220220337`*^9, 
  3.884401422221197*^9}, {3.884401461695796*^9, 3.884401497562598*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"9b2fe28e-9dfc-44ff-aa9c-b9c48c75e7e0"],

Cell["Se calcula la media movil para los retornos simulados", "Text",
 CellChangeTimes->{{3.883803784071848*^9, 3.883803800550721*^9}, {
  3.88440135479766*^9, 3.8844013721129866`*^9}, {3.8844015045379286`*^9, 
  3.884401506427046*^9}},ExpressionUUID->"95b2bc3d-d47b-41c6-bad1-\
37967c5757d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MAVs", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{"SimulatedReturns", ",", "50"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838038101934605`*^9, 3.883803847070551*^9}, {
  3.8844015167659216`*^9, 3.8844015209323444`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"9ce19600-7813-46d7-9890-77ca67869db5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MAVretDateSimul", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"dateMenosDias", ",", "MAVs"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838038749241633`*^9, 3.883803914073962*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"66bbae0b-9183-46b8-b5da-e6d9b1c91e2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ya aplicada la MAV a reales y simulados se realiza el proceso de \
discretizacion a partir de haber filtrado los datos con la ventana de 50 d\
\[IAcute]as  \
\>", "Section",
 CellChangeTimes->{{3.883803975985981*^9, 3.883804010815045*^9}, {
  3.8838041131819916`*^9, 
  3.8838041323236313`*^9}},ExpressionUUID->"b846b2cd-07df-4821-93f3-\
e00f1e8a2d3a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"QMAVr", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"MAVr", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"3", "/", "4"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QMAVs", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"MAVs", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"3", "/", "4"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8838040753493986`*^9, 3.8838040983054633`*^9}, {
  3.8838041402355905`*^9, 3.8838041714526277`*^9}, {3.8838042051628485`*^9, 
  3.8838042125149546`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"26c33254-96b8-4601-be10-3216d9336d5e"],

Cell["\<\
Se definen los intervalos de -\[Infinity] a \[Infinity] y posteriormente se \
hace una funci\[OAcute]n que facilite y designe automaticamente los intervalos\
\>", "Text",
 CellChangeTimes->{{3.8838042190702195`*^9, 3.883804318458743*^9}, 
   3.8838044746312275`*^9},ExpressionUUID->"697bc7ec-1154-45da-8c63-\
cf165d07912a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"intMAVr", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "\[Infinity]"}], "}"}], ",", "QMAVr", ",", 
       RowBox[{"{", "\[Infinity]", "}"}]}], "]"}], ",", "2", ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intMAVs", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "\[Infinity]"}], "}"}], ",", "QMAVs", ",", 
       RowBox[{"{", "\[Infinity]", "}"}]}], "]"}], ",", "2", ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reglas", "[", "intervalo_", "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "/;", 
         RowBox[{"IntervalMemberQ", "[", 
          RowBox[{
           RowBox[{"Interval", "[", "#1", "]"}], ",", "x"}], "]"}]}], ")"}], 
       "\[Rule]", "#2"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"intervalo", ",", 
       RowBox[{"Range", "[", "4", "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.883804361979683*^9, 3.88380442041413*^9}, {
  3.883804461760709*^9, 3.883804463947754*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"13a95fc8-00b1-4123-b659-85abdc0da1de"],

Cell["Ahora se aplica reglas a intMAVr y  a intMAVs", "Text",
 CellChangeTimes->{{3.88380462913873*^9, 
  3.8838046527935286`*^9}},ExpressionUUID->"87b2ad14-af9e-4fc2-8cfd-\
c2540cc2ae20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rulesToMAVr", "=", 
   RowBox[{"reglas", "[", "intMAVr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rulesToMAVs", "=", 
   RowBox[{"reglas", "[", "intMAVs", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.883804736413022*^9, 3.8838047971704683`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"07588ba2-1cd0-4a13-aa8e-153e70c3d546"],

Cell["\<\
Con la siguiente linea se etiquetan los retornos discretos tras ser filtrados \
por un MAV\
\>", "Text",
 CellChangeTimes->{{3.883804561741843*^9, 
  3.8838045917315392`*^9}},ExpressionUUID->"7bef745e-0cdf-4013-b1ca-\
7ffac0359bd9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DiscretReturnMAVr", "=", 
   RowBox[{"MAVr", "/.", "rulesToMAVr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DiscretReturnMAVs", "=", 
   RowBox[{"MAVs", "/.", "rulesToMAVs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8838045070976224`*^9, 3.883804553636617*^9}, {
  3.883804842423667*^9, 3.8838049032599063`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"4d61a3c6-0880-45e9-9c75-40a9dbab24ca"],

Cell[CellGroupData[{

Cell["no olvidar {fecha,retorno}", "Subsubsection",
 CellChangeTimes->{
  3.883804869165311*^9, {3.883804916002383*^9, 
   3.883804957504837*^9}},ExpressionUUID->"f6bcc518-c287-42c4-96ef-\
ee1c22a6d507"],

Cell["Esto nos devuelve fecha y retorno discretizado", "Text",
 CellChangeTimes->{{3.8838051052188187`*^9, 
  3.8838051170738735`*^9}},ExpressionUUID->"45d6f59d-ac8c-449b-9c4c-\
d9621a6b679e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dateDiscRetunMAVr", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"dateMenosDias", ",", "DiscretReturnMAVr"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dateDiscReturnMAVs", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"dateMenosDias", ",", "DiscretReturnMAVs"}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.883804989284233*^9, 3.8838050938469467`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"06afc6c2-51e6-4620-8d0d-ae48b32f91af"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Se procede a calcular entropias", "Section",
 CellChangeTimes->{{3.8838051260473356`*^9, 
  3.8838051344512525`*^9}},ExpressionUUID->"bcbad8af-a8ac-47ea-be02-\
66db517ccb98"],

Cell["\<\
Recordar que en este punto, la media movil ya se trabaj\[OAcute], y esta \
ventana de tiempo no tiene nada que ver con MAV, es un calculo meramente de \
la entropia.\
\>", "Text",
 CellChangeTimes->{{3.883805356509327*^9, 3.8838054038349314`*^9}, {
  3.8840452343818226`*^9, 
  3.8840452402073965`*^9}},ExpressionUUID->"46ef3519-5020-46b0-b618-\
2a65d5b9c8a9"],

Cell[TextData[StyleBox["Entropia para retornos reales", "Subsubsection"]], \
"Text",
 CellChangeTimes->{{3.8838051504293823`*^9, 
  3.883805157794918*^9}},ExpressionUUID->"d11a4639-11f5-4658-80b9-\
1de62cea51af"],

Cell["\<\
La siguiente variable es la partici\[OAcute]n de los retornos discretizados \
que ya pasaron por el filtro MAV, adem\[AAcute]s aqu\[IAcute] se trabajan los \
datos reales. \
\>", "Text",
 CellChangeTimes->{{3.8840452924106855`*^9, 
  3.8840453543511515`*^9}},ExpressionUUID->"6fe3584c-ad04-4dcf-8533-\
c6750ffe59ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"particionDiscReturMAVr", "[", "dias_", "]"}], ":=", 
   RowBox[{"Partition", "[", 
    RowBox[{"dateDiscRetunMAVr", ",", "dias", ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8838052295220904`*^9, 3.8838052695727687`*^9}, {
  3.884044327255398*^9, 3.8840443622645454`*^9}, {3.884045271448048*^9, 
  3.884045287327694*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"0d23945f-1f9d-49f2-9f84-5b9ccf5f82d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SMAVr", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Last", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"Entropy", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], "}"}], 
      "&"}], ",", 
     RowBox[{"particionDiscReturMAVr", "[", "60", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8838051676760426`*^9, 3.8838051723281035`*^9}, {
   3.8838053119575977`*^9, 3.8838053337781672`*^9}, 3.884044381583452*^9, 
   3.8840460959482975`*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"de7316a7-13c0-49f4-9c88-68764df4bdf5"],

Cell[CellGroupData[{

Cell["Entropia para retornos simulados", "Subsubsection",
 CellChangeTimes->{{3.883805341119378*^9, 
  3.8838053472252855`*^9}},ExpressionUUID->"2ba31df2-fa11-4d5b-8c7f-\
468a36773815"],

Cell["\<\
aqui se hace algo similar que arriba, en esta variable ya son los retornos \
simulados discretizados tras haberse aplicado un filtro MAV \
\>", "Text",
 CellChangeTimes->{{3.8840461204210634`*^9, 
  3.8840461753089385`*^9}},ExpressionUUID->"a1d92c15-7161-4662-9581-\
a9dcd4cd69b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"particionDiscReturMAVs", "[", "dias_", "]"}], ":=", 
   RowBox[{"Partition", "[", 
    RowBox[{"dateDiscReturnMAVs", ",", "dias", ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.883805418494671*^9, 3.88380544773564*^9}, {
  3.884044368938697*^9, 3.884044371173403*^9}, {3.884046105176854*^9, 
  3.884046106900261*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"77b10844-a55d-4aeb-8d15-a074830610df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SMAVs", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Last", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"N", "[", 
         RowBox[{"Entropy", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], "}"}], 
      "&"}], ",", 
     RowBox[{"particionDiscReturMAVs", "[", "60", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8838054084161477`*^9, 3.8838054131798573`*^9}, {
   3.8838054649479465`*^9, 3.8838054812000136`*^9}, 3.884044387910942*^9, 
   3.884046195157383*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"fa763407-6e90-4473-85d1-444ba4dc0f2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"SMAVr", ",", "SMAVs"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.6"}], ",", "1.55"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Valor de la entrop\[IAcute]a\>\"", ",", "\"\<2017\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Tiempo\>\"", ",", 
        "\"\<Entrop\[IAcute]a de retornos reales y simulados\>\""}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data real\>\"", ",", " ", "\"\<data simulada\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8838055019810514`*^9, 3.8838055321723423`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"485941c5-a666-495b-aef2-6b1d56d6ab23"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
3BRqUaXTFi3rTK2YRK3eQC3vqCZWeVu2di214Ay1ZuwZ8vtNqyxbdIpalnaG
5ueKWJLfkhOx5HrwZq6X/FksuZ6qP7HkenPRZ0l5UD4GF47Mmq7a96bUji7p
oW7OuF5YDE5bf3HV1Up8fWtqHgf9xZSz5x+E4/rPQ7Ddw/Ue/oU4n/sdLKkr
+LGg1ftSr+YKnj2R4vpF03Pw/SN9unSohPEihoGL4lL1ITdxvPMNbDek7uAq
F3G/SaPz8PfWXz+ub28qdeZTcXzIYuwvDgbHxu0OWnAVx/dB58l8rKzBBfi+
te38n0zF8bs7OPLeh26P8bwIb3G1VXufSHE8FABmzgfr9oHZ80T948n+Va0/
mDkvxzvEK0gUHoTxGfbEk/k4cSKYicdimpOglzbdtn5ybCJv0a4EMp7jzbwu
u55A/l7xLoF8viTsop7E37kKZuJJ8GbWM1TGi2T9Rlv9EnxfcfKCWnGYn5fA
bPyN3EtkP+PfNlW9DOVn6cAhTQ/g+LMHuOyugwOW+uB8efZlsr4krHyFrFfw
lrt8bjC3Mf6ermA2nsjkK+T6iG2v6sl5Lmcwe/67xMx+Z+XEq6T/p1l/le5P
6nCNrEerx18j/X3e7Hkf9TXaH/DSEAtWWbb4JDX3nFqkuE4sO27ZiqfXSXuq
/n2dtKfyozdIe6p6dIO0p7yZ9lT7k1rQ/CY9X5Jyk7bPRf8w8/2iJon0vMnQ
RHqe5Cu1RHSL9B94s+cJBt0i/RFV4C3av6l/m/R/lANu0/MPJWbjF8y7TfpX
pr30dbXrHdo/87tDPp83ex5i9x16HuLmHbp/bU4S+X3inZbNaaiVedSy7Xfp
/PsVy1YbqHXV7tH+2cV75Hppc+6R68mbud6CqvdJ+RB3pzZlUYvski1a1oVa
wSXT81MVH5D+nnYdtVKcQvp/ptUp9PzW6RTS/9ONeUj6f7zZ82Urwcz5M0lM
yevmeCUqgVbPxjMRjAIz8U7Ey8FMPBTuGJiJl6L5VfL35ngqphaPaP8mGMzE
Y1FrwUy8Ft0PamGzxxatfUAtKKIWN35i0dwQatEXalnDpxatGPiU/p75T8nv
leQ/Jfkhd3xG8kvl9ozkp2DvM5rft56R66Gsk0qul6ZfKrmeonBq2Q1qxXtq
neQ5LQ87qOXXqFVvLZvblkasvJxGyh9vpnxq9Gmk/JqE6aR8qxPSSfnnzdwf
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
pCMPECuXHiDvNz06QD5PVHyAfJ+s+UGSHvXigyS9ukgw8/x2yfcSSx+ueuOC
478mKgM5jzxURfrDgggV7S8ng5l4oUrRIQMbz1Uz6BAZz5kCwUw8WNldMBMv
VlEAZuLJ6gZEGNj4s8IAMBOfVrKPvq4yUWvrHiYW+1Nzu6mVN6lNtSKJRS6R
JH2KndRqDbUuj1rSN4pYPpNaeyWK5IfAGEXyS1z9CBkvK33AXmWaVWy8CvdT
Ko+Q6yPKBTPPO5JVPQr1Y98/vc63w/nD7mDm/LZuM5iLDHZLGYfzL/FHyXyj
3C6azDequkST+UYtF03mF8XnqLnXYCbekqbTMWLTBGrRempFBrXa+jixcDy4
qd/kfVt+Y36vATPxKeWnwczzbLXlThjY50cJ2p0g9wO3Esyc/1bGnCDjP03q
CTL+E7WOoeO/UTFk/Kc+FkPGf7onMXT89zuGjP/kHifp+C/4JBn/CR6BvRu9
+BTwEs+f/AQz8X24ZqcM0uhfPvOO9MN4MP+dIvWx6fAp0h7IisDMeSlF49PE
6iGnSXsiPEQtuU+taqgmFgSqSfskPkCtzKc2uZ2h7eE8atleasUtal2dWNoe
+lHLw2Npem/Ekt+rfU8tlp4lVu6g1lyjNr2lFtnH0fz1pdZdphYaqCXVzhHL
e1Jrt1KLc6i5Kudp+rtRa6ZQiy6A2fN0lS4YyHnPzhfI67pJF2j6N1LLM6m1
HeOJBRPiyeeJ18WT7+POgNnzf+UTDCQ+zzgwez5xNZg9/3kKzD6fLw3MnD8X
tr1oIM+bXAFm4wudoNY+A7Pn7QWXDOx5fM6TWhNNbXpMLfpFLWtxmVi9hFqo
pZb8uEzSI296hVg17Ap5v+AwtWbwVZq+IGrZPWqd+zWanvnU8jvUqs/UAjcN
sVhOrUyk1nykNtW+Tn6fbO51cn3U16l176iFDjcsWnuVWvDWssU1bhJzvalF
esuWCROJFT2odVuoJW+o5ZVv0fLa9RYpz4KQW6S8i89TK21vE5sm3ib3i2jD
bXI/yc7epvdbidnz3t53yP0qWXuH3M9y9R1yv/9t1QtqblUSsfKkZWueU4va
3CXfr1BQq49T657epelveY/8PvnIe+T3a4+CmectCx6DI8+28rNKxfnY5vcN
7PNNlDIwE+9Ps/g+Ga/IvoOt/Na/DvPC8y9NkqF9vz7XsbMe+/dDwaZ9bYND
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
Nbx83AksP9qCpaR+FjRYBvVpQpeGfa3Ntp6ZHlYvE+fHboPFlYryhp7E9VwT
eNGNRu/k87G+rbfcyMYjk/UHM/HKeDPnC4UfwU7619WCvPD8X22FkT0/K3dR
lPSvoqyiF+B82hywRFvhz55h70rNPE+Fq7mCWNmXWjNzBfl70/YV5PN5M9+v
7rUSyqvMu0x/HI/rfMDMeUVhKJh5/q7kEph9/m6Jmef/aruvMrLPBxZvATPP
D+biwcx5XmU2mIlnozi3mlj9GszGt6q4Bvobs1xDbE9/KDXbfq0HK8vvbOeJ
/W9tBljgpi7XDef3BRXWEos7/MPx/dt3rR2C6+en6esiq3Xk82Xt1pHvV3hZ
tvD5OpJ+eev1xKpR68nv1S63bO43tcZjA7EpmFp01LLVzTaS9AgXU0siqeUp
li0Yuon8fu7QJpJ/yvubSP5qvmyi+f+XZYEhxOr/6+u+w1t62ziAx17FQe0i
9iZ27cSsHbuoOlbVDmpXpbV3UNQOitqxV1VQVTtqj1ZQNKmRVu313s39u/T5
el3tf5/rpMnJyTnPvJ/7iUZbk9FSiSXp2rh+Cd4fjiVwfqpiS/H8Wy2F7+e0
eL3PL4X7V1t4Gdzveg1ZWM9rGpnqtPXvTgvr49V28oON+WM3cjynsZmB2sM3
k1Kq5HKev8WXnDKv/JStMdwfXUkW9mdyWtwPON/yBHE/X8dQsrDfr9JAFvYD
1p7C4/p4/H+r+wqweskKeL3uONr4DG3JtRKsktGGI2hzHNqRPRjPvw5aPy8Y
vo/1MR6Xsq7C81ehdX3Jwv5blv1kc0zsgH65OL9DptUJGvcp1etcH8jj3dVX
Q3lr6L0ayltz4GqoD5T3VkN9oa+yBmzqsQbqF2sAWtq1Buoj3U+ykB/T0jUk
QcyPqfAnC/kxVTtCoL8iW0KwP1puLb1/jZlrKlfg/v7UtdDf124jbyjyq2Sh
5tyfvo42fV4L8VlSx3UQP6YzroPxAOOVddC/s6SgFaXWw+vlCevh/cyX1sPn
OZLWw/ko3TYkiPn2tG02wPiGaR15SJ08TcZzfKH0nlx39J3YfMHcfy66MUET
My1JVbk3tz9akt0uLbwx8wW3P0aTO/dt3X4az98qzpP1kVkU/q14fKXQJmo/
X3nrHvPf/JyaLGeKLhYSwO2PEWQh/6QjmCzsx6C1kZt0zZrD7uDyoulmqq9n
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
XSu0g+vFNEtVw/NHlOHxmUXkOPN3r/BJ/PzXzUH3T3XNs3Pn0jzF9dlar8xc
HniTU151N/7i8SDjfHK1LMebZR7P+4fEkoM+Xql3guPl5Fo5bZpN7qVu9jrP
+Wf6kaNKDS0qWTnebg45+zF/12eZOP7rEVmM/8qcyyaOT5k8yW2+jt02ryXn
FwoimzTTcy1sz+Nf99G6DC7weqcH1SzuIRu5PNhNFuPR7pCFeDXDL7Kpd/br
z7qnWdi/11wpt01TaICfd5O5PF53ixy2Y8uYwH5cfn0nd9PmfeVXMc0+P755
blLyeF75PDZN+6Q3XpUfc7yglhxm1J7uxPtZW76QvT+6HnxbLc3CfsSKsnlt
4n7F8mTytQPzitWrwtd7C7nShQX1th3j+e6PZDE+XynZxP0/9X5o0yaysB+o
NZos7AeqLpHPJu4HahxHFso/y3qy0L9QRJGF/oXTwni8eUx+m9i/cISQxfG7
VOuUTR51duH67wJZmI/QviUL/QtpdQGbGA/jtNDeV5vJQjyczo62NHO1ifEb
qpVkYTxGPoM2vEY7GhcEK33Q+lMF4f2teQrB50sNC+H5Di4E38dpYX5K4VIY
rKqPluX0bVhIFua3tHWK2MT+j74/WWiP/W3TPLT0BK1TFQUb+5LF9txstOoh
Ws5UDGzujXYEFoP3194jC+1JvaK4TWxvmqqQxXifmWjdbXy98Sced1o4bqno
Bp9nsKDN39zg9X/bUa4EvL+yC1mMT/qMx50W/l8qUxI+T90RbTSWhOuj+FgS
r3epUjaxPW2YgDZvRDsuobVuShvkM9ehrevIQntcupi+LaNL28T+mSKELPTn
VOfJ4vhuqsX6/Q1ZzLe/qky61p4lC/1NvQ1tbVoWrF6B1oWjja/QisblwKqh
aMNJtPlFOTxf9/J4voP+YaF9IuWqAO0TdT2ykM9bN4As5PN2WujfGBeQQ9+V
zLCmN4/HeFW0ifuHmOeShXhHh4ks7D9r6lPJJs4vWmeRxfVoD8hR+bNM3vzf
euyMlW0aeYAjcct7rj96kc+vf7XbquJ4qUBy1Kcz80+P4PHmu2RhfZrhN1kc
X65cxSaOrykDyEJ+L30MOSqg/YFW57m++0G+Un7VuLqbuL6rUPX//eXdsbwt
D/H420205Wv6VpSrBlZ1Rjs+/cPC/KSydHWwtgPatBktpaDVJWuAdR5oywa0
4hJaLl4TbB6LdqxFKyPTt3WUCs93DVp9TgXXw2nx/BPJwvirKrgWWI5I34YE
tKNJbbB2OVp/Gm16iZYa1cHzH4I2nqiD98dzstB/VDWoa4P1fwPJQnylYRFZ
iK9U5qxnE+MXtXXReu968Hqnhfczza8Hn6erVR/Ox9iPLM7HplqIF7XMIQvz
8QoTWYzP8GxgE+NRnRbiVx1BZDHedR9ZiIeV9O42cfxWd8cd2kfGX2QhnsVS
qaFNjG9WzUAbbjXE+vh7Q6gPHeUbYXsi1eJ4241GWJ99aYT1V9nGUF85LdRX
6k6Nob5SfEKrlE2w/mrfBMp38ya08gNaW6IpWN8WbV2PlqLQumLNwMZW5DsH
n6/sVIzbC2vJD2xzH5r7cXzRBbIQ7+f0lyJjvHyycH9/ZHMYD1Cubg7jBVoz
WcgH77SLb/4TGc3cPraTvSpv7pE8j8crzqht4v6ITgv5aYyvyb8KJ/b9sIbv
z3wa+rx6Z9zvcv4b2UAu5Oh5odRufv5PkYV8ueZ4cuZTPZdpOV++smELuh8O
j+717QU/X4PJ+9vtM35pwOuPjpMDjiWX+xXE67+ekdtvXBEbcpH3g6jf0iaO
j+lkspAv17iQnHLtfaxuFsdnPCX7Nqs/YuNe7o/WaWXTKC64Hlh/g8fT+pP9
l2wJX8v5YM3zyOL+1KkW4kn0qtbUH68bnvcC59s19SVnHRT4rX2bNAck/7xm
bcH90dlkIf5EOtAa+q+W3m2oPTDgd+MuedN84vPDOi4OPv8gcnSrHD9mXub+
9V6ykA/YoGhL9fOqOwXWD+XxwB5kv0nTz22pyP3/mWT/TbfDCz3j/Q12kRe3
P1tT/Yiv98+2eL0retDv9zGkQJlafL39yabCJz8tuMvx4haykP/Y8o3s1m9k
9e4eHC9evp1NE7LYL3tdKc3CeIn5OlnIp+T4TBbis5Vl2v+/xfyeHdtD+0f6
iFaX6pCude3Qlo0d4P1VyWjZrSPY0KYjtLcc6zpCe0t5kRxQ4HuVlQd5fq9o
J7CpZSd4vRTSCdtv58mb2nY3PMnL9fEbshDPrhjZ2aZp8sz8PWcK12+ryDdu
hi+ppeT67SxZ2fbs5liev3Tasq9WT0U+ru9s5Ijieyu3qs7P34ouNk2F8dek
Cy25Pgsnj+jQo8ryHmn+UeRS7TMDuH57RR6f92eMlteHWyWtTeOZMq/2Jh6/
NZ4kq45/7Dc1Mc3zc8+Pn1OK95d9gVbk6WoTx4PlQeQ86+7VyTGKx7OOkXsk
rzpTfg6vH7WS89/y3x+9iu/net1ssJ5xANq0oBu8XorrBu+nq90dbPTqDp9v
mdsdzs9p4fwNNXvA9zX36QHXwzGrB1wvp8tt3Zlykn8P5X5yL/dPq04e5PZb
r570fF4bOOFCyzS/6VajyKaLfL8EotV7yAFBNxvH1eHxot9k/YAuoe3z8fx7
j150v+cNaq0Y6yzvVQG9YLxDDkObf6AdFXqDtdPR+u1o69feMP4hlfO0ifFe
TksNZ0y39eP17NfImXPUGls2N4+3fCYL80Wq0n1s4vpnp4X893IH8o8rZfVB
O3g8KKWPTVyfoS3Z1ybmD3Q6umLCsf2uHB/qQZZj23bVLeP+1XhyJb+ctlsJ
PP+eRBby4euK96P2Rdx7Swk114+t0Yp1ZCHfiCqSLOTXNxTxssH6uxZkYT9I
5RqysP5fe44s7GerT/SC/qW1eX+4PupgsmHDlQ4hTbk/GkHO3q36qitPeLwi
oT+0p5wW51OXe0N7zHDaG8cvUi2OF730xvZe3gHQHjSdGIDjQ6kWx1ueD4Dx
GCm3jONFA2UcDzoqw/srrDJ8virnQDg/g/dAHG+ZPxC+nzJ2IHx/fa1BcH1M
/QZBe9M6ZxC0L50W50dmDYb2nmrfYBh/UOqH2GC+fzdZXD9yhyzu9zhjqA32
b95JFvevTLWw/47xVurxtHw9lu9kMf9eqI8N8u/dIAv5gZwW8z9/IQv5j5Rl
h9kg395VtPTpHxbznyp9bWI+Pl178vysS7aGZ+V8ex/IQj5qucTwdG1oizaP
Q+uLjQCbWpGF/NdOC/mxrWPIQn5DaS1ZyHdk0Yy0ifkpFKPI4v5IqRb2U1Wt
Tn192vok2UwW1vsoh4+yaaacXp59yBKOn1g5CvoHTgvjT/ozZCFfhOl16vG0
fBE6w2h4/o2nyMJ8vNNFjAfqJ7/h9ZXxZK3jUsMG9Xg9Wt4xUF6bj5OF+F3H
M7IQ7+V0jww5V119zfFvLmOpfevRd0m3Ldxeq0/e615Z6lOP+/NPyUI+PXUO
Hd3ft33m/qqT/Mdhzb+HpWzh/nMd8qRde7N95PwExv7kJ/d/jrgwgtsLWcfR
9fPRu/ty/8CgIneL3TxpZIGUP75385V3Qk9uz/clC/Hj1t7jbWL8uNNCe18K
Gg/td/Xe8TAfpeg5gf6/wIQxlf04P8NMcptNy2OP9U3ztWefWkfwfLu8iyzs
12G4Tf7Vvu5+LyvPz/n7UX/ffWfefjt5/n6HH7TvnRb6PyaLH/SPrN/I/huP
GKKH8vXaNpHaQ/bzzb7zfiSW62Rh/z6nheOKLxPh/1VlJkH/wHFlEvQflB8n
YX8j1ZN2dMwaM5K/T6nJYH07tDoZrXObkq4tuilwfQxFp9rE/VDMLclVdoe4
F8n68Y9HqU11bJWddowmL73h+aA799eUIVPh97Sqp9H9Omvb+WXD+fcfSS50
bX+VFbp/Wr0KX687Ow3eT+U7HT5PXjEdzsdpob9nCJ8O/T3zq+nQ39Mv84f7
wXTSH66/08LvY33hD7+flGcG9O8sx2ZA/07xbAb075x+Ql+w80/ub+QKoPZ0
xeANthncv6hHnl398+p7nM9SGUeOLPA4Q5l1/Pxnn2nT1OjjXqpOwTQL+Sn1
tcmtzj1PiDzE62u9yEbzlPJtavP4VBY9tb9XRakLDeP1hTXJwvpXp4X9FCx9
yMJ+CorZZGG9qLlaIJTHjl6BUP/+bWVgINTH2j2BUB9LPYLA6gC0LuwfFupv
Ywxanj4L6nPD9llQn5tvzoL6/G87vuLrTVtnw/tZr82Gz5M+z8bvk2qx/VF6
DlhxBa1KQcsl56Zrgwdam4TWF58HNrVO39axaGOR+WBLC7RidPpWrUE7mi8A
K0egtcHpWx+BVg9bCNYtRxtPp2/LS7Rh6SKw+QTa8Tx9K3Mvxut5FC1Z0eqc
S9K1ri5aFYuWsy3F86+Vvs39lsL9qc+8DO5fU41leH97LoP7/29Ls9CWqgZ4
fhS9DNA+VukN0D7+2/JuA7SXld2Xg7Uz0Pqd6dt0azm0t3XTVkB72hhKFvKV
Wm6QhXymf1vxlSzsX2jeshLsuIpWfvqX09rvWmUwtN+ly8HQfld/CIb2tq7E
Kpu436HTwv4FxrZkyXfmZVde/y87yEJ+YEOx1WBzq/TtGIM2FV4DtmrQ0qj0
rV6NVjQPAauGo+WVZCHf8d82nEFrfdaC9Qa06RQ5ftuMbQP9X/2xemBwcL7F
HB8XT46M/OxV9yq375eso/o4Z9Kylp48vnKcLORzVjwnl+vV9PYb25t/WeWy
Huw4glY+RWtzbEjX+jpo9RO0LutGsFGVvi190YZMm8Dm6mhH7/StDEJbq2wG
Sz3Rqm5GsOyPNlvQ+qlbwKZt6dt6fQv8XtIXspB/22Lcmq4VV9Gqj2QhX7eh
3TabmK/bsZEs5OtWRpNdt0cEPV3D8T1uoXj/tSGH+dYcF7Wbx290eFx9kexx
cmXCwYMcj1R0O7Vfv8UG3tzH7bOWZK9Mr54krOJ8FmPI6sYJe++NTPjjH7EF
or6EcrxroR1U/rjkWNNzAvc/1eTQbj/GH+L1KcqRZMPGNicHtXn7x66xUbO1
yTzet2oHjO9JzXb+v3t0HDRkXBDPF/iSqw3zDFVH83jfCrIQD255Ra5hazzC
dzvPDwwNo/al/uv8X7w+ybCMHOIuxY7h9USOF2QhPlyZZxfMl+gHoU2Ld0H7
W3q2C+bP1Ll20/tl/DTQzuuFdfV2w3ya4shuaN+r4shCvLmcfY9NE9eyXbeH
h9KcJ+csU8ME7j/XJm+at8rRn/fT1j4mh7Q7njKrKfc/suylz38/fmVs/zRX
8j2pWTGZ+x81yaZS9g5mjre09iEvLlfoxAyODzdm3Ef3x5bPzx9s/Kct1fbB
61WB++D95D374PPMv/fB+Tgq74fz1Qbsh++jD9sP39cUsx+uh1TxAFwv3fQD
cD2N2w/A9bbcPAC/h9Pndzyb06wGz7dMMdnE/UTNW8kLd4+Iqds5zUdm9M81
luNxHNfI2efnDdL+5PX1mw9S/3GZ5+7i/+1XeOUg3I/qFLKQv9rocYjOb/iB
lYc5n4diI1n5cXubTXd5PPoSucehlueedOf1EUnkyJd7utYM5fURrQ/DccdY
tDYSbSpyBGxtcQTeTxpNdmQYVrxcTX5+Ch61ifujKNRo1Yh/OO6O6sTiafy8
BR+F91M2PQbWDvuHhedZv/wYjOebTqPVjY7jeP+Q4/D/xqXH4f0VL9Cq3CfA
hoFo8yK00kqOenbzQW7Ox6DNeRKsr4u2zicXedPsiMrEv3/sSZwvzHYK5gud
rjD/9ZXI8RxvUovslz3e/God998fpR4f22tSjjNcfmU+Tf37WEv7Tg/T7F8n
qda193y/1iCbXaZ2WKfg+SxPsvZRYveoXFx+ZQhP19aqaKkXWrcbbfmFVlQ+
A5ZnoA070eZbaGWFCLB+GtoUirbeSN/GyWfheli2nIXrpbh2Fq6n08L1Vn06
C7+HY5MZfi+nhd9TeRmt/WCG+XJT23Nwf0gbyD4VO9TO1Ibvlyiy+emyDJ2N
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
1xIxFH5/hW0o3B9yUx+4f8zLycGD6i76FMP5QE/7wHiD8pVPavuu8LknS3j8
XhpmF/PFmYaQJV2n2k/3cnztSbKwv6z6BVqX29cu5qMwNvCF/oZisS/0N2Sr
L/Q3zHWHQ3/D4T0c+xuH0aZsI8DWWiPg/yUvspBfQz2XLOwPbHyEVtQcCVb1
Qcuz0IZ9ZM/q0XdHT+H9YzKMot/z3R2l9Ijb773Iwv7Kej1ZPty/6dM6fH13
kyt99u2+uAGXx3dGwXibuvJoKq/PJ2hMnI/IOGM0jG9ZdpKFfHuKGLKQb0/1
gyzk2zNox9jFfHuO0DHQHlfeJAvrhbRfycJ6FX3ZsXYx3551MlnID6C+Rhby
Seg+kaPGZolvpOD2jlJH57fEN0hdh5+39uRuAf5TU3h/CtVm8phzlvwrOf+e
4QN5dVih/h23cHunxDi75lrm0ButT3D50JY8/3nviet5flI5nizk49BHkU9E
9Oq2hfdbtBYbD8el1uPh/9Vjx8P769aOh8+3vB0P5yePmgDn77Tw/QyrJ8D3
N5snwPVRFvSD62da6QfX12nh+lvP+MHvIyX4we+nazIRfl/F6Ynw+zu9N3fD
+HxX+f54SbbP3BadMJjLj7yT7BpT/M3Zz+O5vzeYbHm/bueGEzy++XwS9Bed
FtobepfJdP8X977r48r1X32yX5cz+XfN4fj2ReQNdRadezCd5/dyTLGL+407
LTw/ljpohTd51KTcI6tk4PWxh6bg86eaahf3+3ZayKej7DcVyhvtHLTpIVrt
OS1d64LQxr1oRYbpdjFfhGEmWcjf47RQfpp3kYV8no7b02F8R1vJH8Z/rDv8
YXzIaWH8SLpFFvKhqb+ThXxpxi4zqDyO7fjqaCdeP3CDnGIbdfvnsDd/vOHb
gaLPeL5B/kIW9m82lAmA8T3HJLIQv6//SLZezrZ+q0vSHwv7sZlKzbRDPud2
5IDj76ed4fUu6k1kIR+uxU1Pxys/2zbNPc1CvLyiLVmIp1eNI4vx+Rf1EG+g
bBVI/dcOn1elbP2ntWMC4fX6kEB4P+ubQPg83cggOB+nxfM9GwTfR2EnC+sT
zCtm2cX1C06L+ZzDycL6B+VrsrA+QptvNpUvPSINJs7/K52aDeOtTsvVrx7N
WZjHn+PJlrjmp/Zl5vHmPHOovTs2f/7rV7m+cScL60vkZ+SOr3Ycc99t+5cN
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
0Mr6S8FaGa1fmL7VdZbh+fZPx/8D7kuk+w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJx83XlYTN8bAPBBoiS3xZ6MfWeo7MudJEQMZU+uLSEaZE/GvoVByD4SQhgK
IYw9SUZIqNxSM1O2KSGE39s936c5r58n/3g+z0wzZ+6cOct73nNuo0mBw6dW
FIlEz+uIRKX/wz/xhOO50pbfk7Qtk5/1AfNVopCZTmB1TMTQNeNSSs36gMV1
5v7MGPP4X5avxZZ0OIHMjcFWrgKvN98cEW/+vMwJ9i4u5llppdacBne9+XLR
hBbppVaMPAnlqe5fK6Ham1KrFWBuf0xEcQovlP8k2L/TNMXPuW/LHObd827J
8Fzh8zwv9f26T28bdKXWLjuVK2Xy+6V5ehpKLYoCh3meUMlD84Typ4AjA80j
G5zOL3OJ5b02uTHvhM9TAtammOX/OfK+1OKj0fD+NzK6PFn+odSyx+C252Xh
7Qd+FMr/Hczb3RywscKnMpeUXG1rfVKwusnpXOn2fItnqY2MwvVMAges63Hr
e6Rg1Vew67TI5W8NgrXiM1DeOXbjzJsXlFksu/XmuI9g0SDw9g7p3hU3C9Z8
BvtcinlT8EOwscHZXGmttjcqf/UpFMo/ANxSs4npGmsy875/xJ4Kn4XPMxds
61BX/6CfYKa+Old65/Q84/AVgtl+4LZJfVdFxAqWB4LvNZxal+FNrnox2D6r
UpHwefaAW7o1uzxILJhzPQefz2H20MUugpUBYPfvgUfW9RWs2QVWS5dW2+jx
Txs1+Pnq6efR6/E7zqP3Y66fR+URTJVXcjUGfR4uNwZ9XsHU9VDWiMXXKy4W
XU9Fdiy63mqrC7nSk13Uz+2amLyd87U98Fr4flRvwCvbBV5tuIZ8vxYXc6VD
LH36L25Avl9n8PABYzcPP2ws89rvTDubxoIlvmDFhKGRHjZC/TKaX8qVmr1a
8iton1AfxR3B4erK3i/7kfo67h+mnq9Yg822j8uVWg0qnOS/THh9+Wgw7/aI
/+pI6utKsIf3HaVabrLWpYeSu0DqbzS2csRl+PsHVfZFWJH6uhyc8OV2W7Ox
pL6eACc22znH+aBg8bPSxyttqGPvJ1w/PvhKrnR/rVqXah4SzBwHt11qnTfv
mmD2CdhZ37fBRvfPZabr609wxbBPmxZUJ/Ux+WquNLnXpJPu3qQ+FoNbd34U
XG+TydlDK9ztG0PqY+P4XKmyIL/xgUeCFQ/B/Mkt76vZfBG+3y/goqvmb1xr
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
EvR7Y4Z0RO0LuwisXF0p7s140n9FgKn1Se1XbMmgTsjcfGzloU6oPRY7OiEr
5jqh5/P3sJkC/Hy2vvP/m1ovFd0Ba71q5S5/Q8a3H8HUehtXx0VHx48Emz37
7OEUKvQ/Slf8uOydC/p7Rc3O6PUF0+u1fTqj8jFhpf61deLyKMFyA5iar6ps
u6DxgbYnOGnQ0cTTTmS8sA0/zl0FtzU/O7M1T/qDGl119HqDsVtX3J9tAVPx
WEUc2FhhWv2mHch4LBs8I/nRtUM6Ep/o0g3GF6vOz69E8knkm8DhoUFVnRkh
/qK6APaI2bPryCaTmR5zGu0g8R3tG3Dy2eD+u8eR+NP67jppZt+Bw1+eJ/Gn
8+B7gZVzuouKTDbFs43pYCreLa7SQ0fHw/mzYCpeLpiKpzOvwFS8nTXrqaPj
8arRYCpeLzoNptcPXmAr2/RCz9eM6IVez7i8F3o/2bNeqDzqlr1xeYf3Rp+H
WdYbfV7B1PXQNuuDrpdI1gddT8mSPuh6C6a+Dy6yD/q+xJ4s+j4FU9+3bCGL
6oPiMIvqC/+FRfWJ9ZDq6Pi+PAhMxfdVB6Vo/CX6LEW/D0kDVzR+U85xReM7
zT5XNP4TG13xeLNeXzSeFEzHq2+Dqfg4+wFMx9tru+noeLxgKp9AJcXm8sFU
foLSvl+51vTGNvqD6fwIG3edtGtwk7Rda16bbMpn5HuAqXxGVgmm8hnlV8BJ
Vc59y6pA8ju69YfxVp/9K5xqk/H6ZvBqK92IVrWE+YDyEjj6R8aKx6fJ9c0C
B0hvzOu/hozPOg+A/mtd3LGRtiQ+tRGsWrfZtXgWGZ/Fgql8Rj4TbF+3+K7P
1Q9lpuKTqnUDYX43cfe+LweF/lJ7DhyS8sVmSldjmX/Xfjf2827SP6eDU9+N
bcx/JOMNcw8YfyVd3nGtF8nvOuOB6qtgKl9H/BJMrYfKKg3S0euh6lFgaj2U
iQZT66FsKtgtRNlRE0HWw0SDddLObs7uJ+JJ++YN9qs+MueSVrBoOThxGrPj
dyb5vT0Fpy6o3n+jXrCmhadOGiHbeHJSvmDjME/0uDjYE/29YOr1+aZD0Psz
Q4eg8rGLh6Dyy48MQZ9PMngo+vzcgqHo+gimrp9SNRRf36Kh6PrLBsrQ96OY
J0Pfn/qADH2/TKEMff+swzBcP+TDUP3R7h2G6pfk0zBU/7i6w1H9VPYdjuqv
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
cbk/yInkixtvgKnzddT+XQ30+TuCqfN5+O1g6vwe5hqYypeQ23RD1k7FFimx
JVfA9H5n6+7Imq7Y4s3YiixsdbUeyLxLD/R+f1uVia2t2hP9vcgJTOeflJre
vz2+9HFTfouxci8DHb8WS/5hKt4tGwum4uGK1WAqXs5U6m2gz3ti24Gp/VPy
UWD6fqOnsEWp2FzrPga0nu8NpvIFjFFgOt/kKZjON/kFpvNNhrEGlG9yDJvV
gqn1KPkPMJ1/Umo6P+KI1IDu1/kITN/Ps9TUepnyW+nzTetpmkauyIpEMLX+
9rfVRdi8Y19kdh626j62tgBb4u6GzMndUHmUe91Q+Y0f3dDnk/Xth6yY1Q9d
D/Xufuh6CaavJ+uOrrdqhjv6PrRh7uj7E0yfz3nDHX3/mmn9Uf0QTOd/bOuP
6pc4HlvBDEDmp2AzW7HZy9iq6gNx/b2IrbH0QDY6g6l8D/EEMJUPos4A0/fz
rTLIQOeTMJ0GocdZn0Ho70WVBxvo+31KOoCp89oEU/sluTFg6vw15SowlR8m
a+uJ2hPBVHuiGOmJ2g+1Akyf7/EcTJ+P0WqIgV4PU3mB6fMuo8D0eZEpYPo8
xhJsjWwosvgomFovkz0eiuI5iu9DUTxHMH1eSoQMxXPkSTIUb/jbqq/YWvEw
HJ948A9T43HN52FovmNsMNxAx+Nlc8HU/gT1PTC13s8bhxvo9X6mvpcB5a8F
gkPPjqo7cyvpT/Zgiz6Cqfg95+ptoPeTKQPA1Hmqml1g6v6Ugqn79Sj6jEBW
T8fmd5Rv5jq21m8ksmgbOL11t28D3N+VmTpPTHIVTJ0fxOWCDQssV+SkknzF
yaMM9P5G8RYwlU8uiwOHjp1c808xGZ9bjTbQ5+PyncHUfjV2E5jeL38BTO1X
01qMMdD7q0TO2BJfML1/7TyYPm/SfCyyuCO2bFz5ZszGIbPtwa0tQhpVlPzT
8tH4+aqV41D5uDY+qPyC6f3nI8DU/n/NcvCWE21n/RpNyv8MnO565dIrcn6U
ouV4mB+1Giufv5jslx9eama2SK4k5T8Ops8ffQKmzqeS/8SPa4f6or+XRPqi
1+eSwdT5hMpiMHXeuOCkhHkbu9uR9ZrDE+Dx3A6fj5P4uuLhBBTfV38Br52k
U+/sV1Rm6nwSviFnkO7qm+BQ8QxZn0kAKwvyGx94ZPJvD+czPjzJ5y8EMz7R
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
12e/v3pVxKOxdyBvLV2xSayIR6PtIrP4rKa75MJjii+/J9b/SEne0PdROcg3
ekq8zffnbs8nymsMJWdL0aDG5MWivLfIPpVzTt5zW5TX8BbWi+mu8LJunjkB
Yv6leNzxar32fR4i9rNfJ7P8kLpZ/B37T7SziBbD4wGZxpNZPB+bi9wsi7Xm
YBH/R/lGPtxp3KYhIr+WWvAd2DKGzOIFWTeQWbwg12e0wfd9DI8/JI8ks3yW
dge59fulJwpNjzc7X6nhhxgeP8g2jMziIykhH+L2m/t1DzPGe++D0r5rn4r7
5Rx5SraPYbV2ivgM1tgYv4HmxqeWjxD3x0oyyz+qm91/hrNkX0v7ZNVCxXjN
W3KU7eusXx3E+Mzyj/T++HzLups8LRE4PETc32fIJfsEbrREivGmbJ9gfEGx
kFvvrXv6QSsxPrqUvPr0Pz4VX4jx6FOfcL175s8wv+iqSWbxjw19P8P8tXwc
7TR+ifEL3lG2x7iVov9SDW3q9Rfz+fB0X6m9dvnrxNxfxHxnFfI0/4HDSmd7
9Z/ZentL96+wHtY67ys8b80Vv8H4sW72PJG7kh847oWO+ze/0mxysw71Go0V
4z3aQ3K26p/8suwTz49y32P8Rj6o0dp9Rjw/OpFZvmJlBjmibtN7yRKL3+d9
8oNinx+FVhW/z2Q/Yvx6N1cflegv7pf25DVrDCXPiN+vYRe5aNjsihtEfCrz
HbSc+CfVR9/qVflyTTwPbpLDL5eZ9CRGzMf+TthKsV9g6zW040fCdhX+HePX
f+edZqO+iPKNQzu/kk/WmTz/gojnoBUwuLml0WjberT6CW3MnwhsHYF2rEW7
zpODrkSWf55UPH/zJobj9qFo52oyL3+c2flqEWhlcBKwuiJhG8PRljdow/Kk
/2t+fU8nhfLK3qRwfs7ayeC4aUkyeL90MhmWP1NyN79/1BrkoTG7mno2ivL2
IbP8PtZj5O0pZq+IaCq+/wwp3H6encVn5hL76QzVyD7n5lye9Ew8v3qS2e9H
ty08mWG8v/g9pU3p9tt44XWVa2J81FSZLCeJzBU8UbQnupFZfD3dpnnbw3dm
Es+3uWS2P9VSIZWb71/VzebrrF3IbD7PMYvM1888JPP5wLKp3ZBftiOZjW85
p5PZ+JfpHpnn70maxs3H15RAtDqFzMfrbpN5fMtEaRO0eTtavoG2/0rYzqLp
3Lx9brtK5uOj38m8ff+H1ULp3RAvQ0K7vvzFfP64QAb4f/KoDFAe+zo8rn3M
AO83mYxg23Aj/D9lDZnHo4pEW/JkhNc7hmSEz3Otygj/3xCREcqnm/VnnIMy
ufn6KC2YzPozunk8gTBy8JsbJuM9sf7nNZnnX1iW2c3XR+iW06Za3maYGO93
kgNHBq/PIuYjrR4ym59y1cri9suyZfqI4SI/jnkx2ez7rV4/PzE+c4K8vf3M
K+6jor57SR5e8USVm2L+Qque1c3jU5l6k2Ovz+nX9YWo746SWXwqNX02N6w/
qUpm69ktPcjjQ/bbI3t9+M+NQhY9DD4r2m9ps9P/z/jWb0kukQ+1Ernn0huZ
V/US8aFkcvEqWzJ03BJvth/BPoesbg96lSaj2K9cPofbL+rJp3onq4r9BJ3J
AWsWPjzYId6XMw8bVGy42F8wk8z2dxsfkNevvZjqyAGRH8Cc0+1Xq121irHn
xf6CDuT1KcqUT3VL7C+YRo4ZUfpKuntif/VdPC4nyQXvd7Yjs/wD2mQyy28g
3SL3TZvi4WU/UV5Dbjffn64UJ7N8CsZJZJZvwXqdzPIxOH6SWb4G3Syfg6uI
D30/00zJRor9CnYXOVPLEtsuDBP1yzfyp8OnMuapFG9DqheZ04v5Oa1gHvq+
eg9bUHih6L80R6ufyWw/9p82+uZ18/k6SxPy+PLvyka9FfNtDrThI77enC8f
fJ59WD74/84QtHaOHD3ddXTtY1E/+pjcfP+4YiWz/eXqSjLbf248S2b703Xz
/ev/5KfnReFZ0Q2WiPs7mLymSr4rbc+I9sgZ8uqXRt/oKrH/OdvekDJPW4n7
+xU5qefwe59DYv3aUl+3361WiV/Xi4x3yXlb7s66JtaznSIf/F48xYebYj2b
G4+rNQu4/fx7fF39O6fYL7OIrLRLeelJK3F/Hyf7DE2er+xkcX+/KAD3v6F6
QXp9qq9VDf/GE+hFvjC7cM3RBj3+gP0ImcU3cD4js/gFpiqF3Dy+gdS9EBzX
zd5vTFOYnodhSkTzdCLeQUWyb+yo06++iPJ2LQy/N93l+i+rEn5VlH82meVv
tHcq4ub5Ep0zyNm6Du9SY4b4/SnkktZX0rB54vfVvigcV6eSWX5Fy52ieP0S
F3P7tQyZWvi2iJfgaos2TEbLN9H232hnseJg00S07Rpa+VEcyqMWLgHl1c3O
x3GlBJyv6yse182ul6FgSbie5mYl4XmmfSoJzzvd7Psx5S8F34/UuBR8nrK2
FPw/Y2wpKI8lb2lq321eN2hyR3G9G5BbShleDC8iyruaPH7+uuMr/s1veY68
bGu2zk3Wid9T7jJunq/bOZg8/GoG0wHx/NNWkEN7jft5cpJoP4eTja/qr1+R
KN4sPrA60Ozm8ZeNy8ksPrPlNLmwLaDShNPxZusFrF5y8lMpW6z4LsbflpR1
+3U6XnrD+pmifj5JPpxoWY7A5PHe6Dy/480cMX8VQ86SKNp27bsYP6xRzs3X
Y0oLyf6nn8aE7xX5DY6Vg/aC8pxsyWX4NrK46E9XK0/fV7HoU6Mbi/ZFT/K0
1O8W1A0U+7sOk10vWstPvGL/xFNylR/9N5XNL9YTVK7ghv253chs/5d9LtqU
uiJYqoC2dfmL2fpQZRb5RqrE7r4iX561bCVqz808vLltJlHejuQafVdmChsb
742Dk2/Ms1Osh5iONij4emdgZbefY+b8Ol/+8f7n2FHbxn9qIvYfTCGz9UGm
neQfeecN8L8p8tfbqtD165K2cjmRr9h6gxzZZX6SlnnF/odf5MC8w0oP2inm
A4tWpeej4rm7PLu4HyaQWXwd+1Xy+9+x5bvPEOOx38mR19L4Ht0vxmMLVaP7
e+35xf4P451t1DlTITFepFwmN0vdqf6YPCLeyRcyi5doLFCd+jdHa827XT/e
LB6KpSl59M295hcino/hE/nX4qLTZ3QV/TtTDTguN6oB73euqQGfb/pQA/6/
lKcmlM9WvyaUX11VE87PGFETzt+aqxZcH4d/Lbh+hhW18PqG1YLrr5t9P9qA
2vD9mZbVhu9XctaG7183uz9sntpw/1hPWOD+0t2zSd/T761ivv0l2eipd6ep
mK93ZfSj61UorE3dNOL3ZCcvOZfzeliMWJ9zlBy9YcKGbv/Gk4wmNziyOGbP
HjEfUrWOm6/fkXqQ2fyfcojM45U9IbP1O5ZKdaH/Y5XRjjlow2O0XN4fbO/s
D5/vnOkP/183K5/NXA/Kr3Qgs/Xfull8X3VaPXj+GHeTWXxfV7sAN883q7vB
sZ6FxhYUv/8pZDa/aw4lH65XpnKOeWL+11DfzfPNaq3JbD2oaRKZrReVtpHZ
/LPykxzq/TGj2GexX7JIA7r/uracenmy2B85nmz6XCPZq5/i+eAi/0qd5lhG
MT/u+kZOvHxt/Qm9xf1cqKGb7x/XXfBH1Mjs4vfgvERm+bm1z2Sez963kZvv
79LN9zc2IT9IUaLt7YbiefCRzPK9WvI1pvbvIJ+Fg8f91daGZJ5fNoTM88u+
R8s+TeD19oAm8P+0lWSeX/YsmeW/teVs6ub5cZW6ZLaewRhM5vvVzpD5frVX
ZLZ+2TCgmZvv5zMvJbP9fvIpMt8PGGe2X9Dujnt//H5CaVFzN18/YztOnrUh
wKsE/9XKC7RqlNx8v5njCJmv14kzW8/jeoY2pG8Br5e7o50H0ZraAv6fVLEl
lr8rmeX3UWaTWTwb4yMyy8drLdfKzfP1Ojq1guvrmkFm+wN1F1w0q9vecNHe
KdPazferOtu3huPa1Nbwft3s8027WsP3q7Zt44b5yTiz9S3GyWS2fsayg8z2
3zp+ow2t24LNE9HyVrTzB1or3A4sjUPbNqHVr2hjwUD4Pf9pVxTa8Bltzt8e
y/+H5cZoUyxaytsBPu9P2xqglaFoy7sO8Hyy5u4Izy9HPbRhZUd43pnDO8Lz
0J6jEzwvnXU6wfPUtLwTPG+l053geWzzdsLnde3O8Dy3LOkMz3vrSbQjBl+v
m32evLAL/D/7sS5QHt18fdpzMlv/pGXoClYO/8VsP4T6lMzynxvTyW6+fsHa
jczi0bgOkFk8LINKZvlbzam7ge1d0M5Z3eD9pofd4PNtZbuDlY7doTzq9O5Q
3j9tmNoDbN6JNtl6gqXtaNuNnnB9LBN6wfWzbukF1183u38cV8mJez8NfjVY
/L6+k1m8F/vG3tQfXl+uyYbL4v67TO7b+uia2A/xVlL7p72aSfz+v8QdZ/ux
C/Rx8/3Y6sU++Pv+1AeeT7p5/Wbq6+bxAKyNyHy9xwcy288j5+nn5vt5dLPn
qb0+me3Xdg4hs/3atlz9wYr/X8z2c6uD0MYVaJffALBhIDlYSdb6br14s/rW
vAwtO9GmfgPB0uK/mNVfthNo5SXaav8H7Dj6F7N8865ockTmcmFRXcTzK8Mg
t1/3gxvr7z8s7odD5Gbfux3sXk/cD0/I76ednBpwKN7pj/Urmi+LGF9NO9jN
80dJlci/il5LvmylGI94TJaftd3pOCfGU1NZqX21cMy+6i/jzePNlCff+l6t
bDmDmE/tTGbxaeTkQ9w8fo3dTGbrXXTv79z7fM11Yny4A/lV6IxsNy6I+dx2
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
Nb1E+3D7cWj/uH4dh/akodgJaL/IE05A+8e+hdy38eelsSL+ivMqHjcVPgnv
t409Ce0fZeNJaP+ol09C+0d38dKTlhcT+wsco065/dL7xITm/iLqh3XkiImN
dvuL/TeGKPKtru86NZ4Wb9beN3+Ke3+NPKYcIr6OtsZJ7YnyBWqsXxLvOu6y
D8f9Gx/3PJntJ5I+kNl+I6X+aahvjavJbL+SJYLM9jNZNTLLt+jyP+OGfIyD
z8DvUQ47A88f++sz8PzR/MLgeWMaGAb7E6RlYbA/Qc0SDvsTjLXRln5/MY8f
sjgc9iuYa5zF/Qe9z8L6eN18/Yf9LKyvdx5F23pE/K/ZeJ8yn8zi8xmfRkD/
2ZL2HNghn4PXu+aQ2X528+Nz0L+WU0VC/9pePhL619rMSOhfSw8iYT2KLfl5
N4/XrZjPw/o13Sw+uvXueViP4khygX7PjTdd2Fne85/ttXKUSPNTrFcrRc7R
YM/HzGHieRhIZvEKnIaLVP9lGdQilWh/62bzkVrxizAfaWpzEeYjbdsuwnyk
+vMizEcai0bB/JelZRTMrzo2R8H8q8sVhfOzhS7B/K19zCVoHzo3XIL2oXbp
Es6Px5mv7xh5Gaw6LuN8+MW/mLc/P16G/29YcwXKZ468guWPMzs/+f0VOH+7
jwtsWoWWzqJtb9Fq3atg4yC09Qza8Qpt8LsGNg9Ay0vRTjfaVOs6lrdvwrYt
ug7Xw1L9Blwvay8yi1eim/UXHAvIbD+468gNN48XaO9+E/ufcWb9U+e8m7j+
4+BNWB8ipbkFx5Wut+D96uxb8PmWR7dgfYo15W1Yv+Iodxvm9wwzb8P6F/n+
bejf2pPdgfUzzjJ3sP8aZ9a/s90hs/hFSuK70F5VS97F9mqceXu13V2oL1y/
70J9oZu3V4vfg/rC3Poe1Bf2rfegPtB+3IP6wFTkPtQHUov7UB9YCj6A+sDa
DO1a/wDqB+eIh/D819aiTRcewnyPbh6fIvYhzPcYQx7B+Kzl3CMYv9XNxnet
79CO3I/BcnjCtr9Ba3VUsOkftO00WvGijZYnYEt/tHXJEzgfV8wTOF9zzadg
uc9TuD72hU/h+ulm11eq9gzr457P4Pv600oQWj38DL5vR7douD9083xUc9GG
g2g59XOwswtam4U27UPbUrwAK2VfwP1snPEC7nfrvRfwe3AkfemG/KulX0J/
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
2gBtCUFbz6FduXuADQFosxVtD+8B5Xe+QZvq9oTzlf7pCcdty9HKabRjSS94
v+sk2uBGyzV7g50L0doxtOkFWjL2ASs90cYjaMsztDVdX7CjMtowDy2raGeF
fljeLmhpH1pJ0R+slkUbO6EtM/rj/XqvP4x/GcoMgPEvc3uyY2qq5T2OiPH5
qQNgvMS+k8zyJWuJBnp4vBipLZnl47HZBsJ8gbKdXPLQ6um+C8V+qBtkw8BC
j3J11NsLlmL/QPvCMYHM8gW5tpDTPh6R5/1K0V67Rub5D3+Q+Xy2NAisbUSb
rqClr2hbgcFgdRTaEoW2fiJvvbIltPZd0V4zWaG8rkZkeeP244HNxPjbWiu0
t+wfyGw9kjPPEA/sL6lPZvs/TEPJbL25LWIIjMepuYZ6+H4PYz0yW59oGYy2
riCz/Wuu12h54DAP35/3p+3L0E4n2pR1OFhZnLDVE2S2X8gYQ+b5D2uM8PD9
RoZjZLYf6U+bn6PlDCPBzh5o6WnCtqUdBVYqoY1zyTyfZKrRMN7wp13lR8Pr
DV3Q8l60Zh6ToE0d0dJ0tHIXbQkcm6CtU9COULQh0TiwfVLCdm5Da9fRUtHx
cD3VzePh+9bN7gfj1fFwv1i+j4f7ydF8AtzP5ssT4P7Xzfqr8pcJOD7uOxH7
qyMnQv/S9nEi9C918/H7fJOgv6U2nIT9vzWToL/m8rHB8003X19Zn8zzSQyJ
O87yL5wl83y6/pM9sB73D0uD0LZgtPoKbR0wJUG7TpH5ehgPma2XcS6a6uHr
aXTzeAzH0aaXaCnjNLDx6DT4PN18/VE02pp+OthRBS0/mQ6fp5vHn0kzwwPx
JCqita5oJeXM/zX7PLUc2tgZbZmJNphnQfl0s/KbO6DlabPg+7DvQkvtZuP9
8Idtk2fD/aTsmA33m3pzNtyPjolz4H7Vze/nrXPgfjdcn4P14885MP6gbZpL
v9eRfeYu2/PyP2+Mrjp1imhfmFzkwAyv+uxNordXpG/kCo03do5qI+YDC87z
+GWx3K2WaYpoH18iyw/rt7AuePOfWzfp3nPIFDHf/plcKabc9W8ifrcj/3yP
X+8ijcslCRD9q8Zklu/GHktm+XB0s3w5zrxBHshH1YDM8u2YhpFZPh419wKP
X09byPzjcrzrzP1lbJ1C5CsIILP8BBYrmeUnsK4kz/O+Tf4sRsyPLLdT+6JV
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
+NJi/LRmnOPzvRkWkddcf3a/YnKx3/k4ueXE8WNiu4j6zJjd69e3VqX+IaGi
PqtGPvz5bvm0muiPLiAPtCjl3cVEfXuEHLg7leu1rNv2jLw6tkDvsCAxH1c5
B/2+D1dtFLVP1MfzyGw9ivUgOXUVb8mgaNFeUOOOx6+Hse/L6fXb2/ZxxJbY
eLPjzoc54f1ailzw+YpCvpA/LHNRNd5ZSv841u+5KN89tDFZbvq9Tx56IOC+
KF97Mpv/cu0kW0LyvGl8TbRn7pCdyo2ufXeL9kxiHy9vr9jbknufrdK0RENR
XhtZfXa66bikoj1zkzz8xoWQ06K/byuWx8v760orMuuvqxPIrL/uKJzXy/vr
LonM52PHkdl8re4f1Y8Y83QV4yObyGy8RGuaz8vnf02jyWy+WPeMzIWKZBX5
HKX15AbXk4VmzSGeb1FkFi/e2Njk5fubLSPIbH+zdS2Z71/+QLa4Uvxe2Uzs
f8mbH2xfTX5l6Tzm9AdRn2poU25fL18fK9Uj8/XJK9DGN2hLjgJeWP8bZ7Y+
2VoHbfbi6+WsBRO0vTba2Q9ty1QoQSs10GpvtOUY2pGhMNhVFW0OKgznLx8u
DNfP/hStVSri5fEDpblo2wFylivvYounEfX/47+Y5dOxzirqhf0je8mRibOW
erdJ7M95UBSep7pZPGNDimJeyOezm8zzu8aZzW9qd+OOx89/mpIW9/L5UVsg
Wg0ls/38xtvFsX5LVMLLxzsdbchsPtA1qQTUv+YbJaC+ln+RWf5cZ8uSXj6/
rI0nx1Z49LZoG1Efb0ErhUp5efxPtTnZJ3kT39dmMT84ltyo8iC3fC7eAV8H
b5hZV4wPbiSP9pmavfQOMR7ZtLSXjz+aR5FrxF6+OTLZx/+8vnB4WV/xPJPX
kdl6R/tFckSxqnlSbxX1w/AydL3NaXe/Co/3G7+xbbKL9Y+2NeROlSp3Oy+e
t+p7PG7MY6bnqU+bmq6X4nk8hFyu/7Iq4VdFfbGKzNZXGjS0OVdZKI/sT07Z
uGXJPsvF8ziYzPqTptdk1h+Vspej52Fv/1bnyory+pFfZNh74ejP2P+cvqn/
usenxPX0kIv2PeK3aJToD2cpT/f7tx49vheId8qFe5N+DxPP71rkOoXyPk3a
Vjy/+5LX7/DMeHxbzGdmrEDtrftzt+cLiPfwlNHOFyvF/VKdzPLFab3IbDxU
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
PvAPW8ovwPJ2XgD3m+7/vx//D205okE=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {2.9063232*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Valor de la entrop\[IAcute]a\"", TraditionalForm], 
        FormBox["\"2017\"", TraditionalForm]}, {
        FormBox["\"Tiempo\"", TraditionalForm], 
        FormBox[
        "\"Entrop\[IAcute]a de retornos reales y simulados\"", 
         TraditionalForm]}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2.9063232*^9, 3.6990432*^9}, {-0.6, 1.55}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data real\"", "\"data simulada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.88380551470583*^9, 3.8838055334629755`*^9}, 
   3.8840462323246346`*^9, 3.8840760589787626`*^9, 3.884078041986068*^9, 
   3.8843356905547915`*^9, 3.884401581698685*^9, 3.884445519339551*^9, 
   3.884657686254318*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"9f992d69-bb42-47bc-a974-fcfe350623f4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["aqu\[IAcute] empieza el relleno", "Title",
 CellChangeTimes->{{3.884151803734686*^9, 
  3.884151809574053*^9}},ExpressionUUID->"3691e4ee-bb77-426a-ba5d-\
ca1a388f0fa2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<dataMAVr.csv\>\"", ",", "SMAVr"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<dataMAVs.csv\>\"", ",", "SMAVs"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8840780510002637`*^9, 3.8840780535440617`*^9}, {
  3.8840780840283194`*^9, 3.884078119295779*^9}, {3.8844025218951626`*^9, 
  3.884402522714693*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"20733597-e194-4bb3-8035-ab9f9498dd2e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DateListPlot", "[", "MAVretDate", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DateListPlot", "[", "MAVretDateSimul", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8838056710189543`*^9, 3.883805671832163*^9}, {
  3.8838057091312923`*^9, 3.883805747574001*^9}, {3.8840464835607657`*^9, 
  3.884046484765109*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"fa2fb42b-1ddd-4cc9-844c-739da5d7fc77"]
}, Open  ]],

Cell[CellGroupData[{

Cell["aqui termina el relleno", "Title",
 CellChangeTimes->{{3.8841518222119036`*^9, 
  3.8841518258482313`*^9}},ExpressionUUID->"27220cd9-2c5a-4ff6-ae72-\
7021174031e2"],

Cell["Puntos de entrop\[IAcute]a minima", "Title",
 CellChangeTimes->{{3.884421149059248*^9, 
  3.884421164122152*^9}},ExpressionUUID->"7b4dcc3a-c057-4893-a731-\
c334c0c511ce"],

Cell["\<\
Queremos saber cuales son los puntos en donde la entrop\[IAcute]a fue minima. \
Para ello se tiene que comparar el mercado real con el mercado simulado. 

La siguiente variable sirve para que con base en el mercado simulado se \
determine que valores tienen un comportamiento gaussiano con un 95% de \
confianza\
\>", "Text",
 CellChangeTimes->{{3.884043848381567*^9, 3.8840438511129417`*^9}, {
  3.884046394495826*^9, 3.884046406198127*^9}, {3.884046538174613*^9, 
  3.884046563840147*^9}, {3.8844027784835186`*^9, 
  3.884402824407586*^9}},ExpressionUUID->"530491c0-a354-42f3-bf6c-\
5f76b44e9dee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"umbral", " ", "=", " ", 
  RowBox[{"N", "[", 
   RowBox[{"Quantile", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Entropy", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"particionDiscReturMAVs", "[", "60", "]"}]}], "]"}], ",", 
     "0.05"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Entropy", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], "&"}], ",", 
    RowBox[{"particionDiscReturMAVs", "[", "60", "]"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8844026420417433`*^9, 3.8844026994773293`*^9}, {
   3.884402767115452*^9, 3.884402768238143*^9}, {3.8844028770228434`*^9, 
   3.8844029034335375`*^9}, {3.8844455701463346`*^9, 
   3.8844455933807087`*^9}, {3.88444569942721*^9, 3.8844457114198475`*^9}, {
   3.8844481517342863`*^9, 3.88444815334354*^9}, {3.884448277840137*^9, 
   3.88444829952693*^9}, {3.884657865807369*^9, 3.8846579027714653`*^9}, {
   3.8846579721862726`*^9, 3.8846580922760653`*^9}, {3.884658181590386*^9, 
   3.8846582037376184`*^9}, {3.884658284626113*^9, 3.884658322237301*^9}, 
   3.8846584127460413`*^9, 3.884660539747633*^9, {3.8846611485550957`*^9, 
   3.8846612114970922`*^9}, 3.88468150075521*^9, 3.8846827118558245`*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"8ed0ca6b-53dc-48ba-8f9e-52c76c2fb4b3"],

Cell[BoxData["0.28683598305616`"], "Output",
 CellChangeTimes->{{3.8846582981022215`*^9, 3.884658323189782*^9}, 
   3.8846584165268106`*^9, 3.8846605413847675`*^9, {3.884661154538265*^9, 
   3.8846612127183156`*^9}, 3.8846804153226995`*^9, 3.884682712813696*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"dd6b0a70-b788-4b6d-aa0c-82df4037826a"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.48999999999999994`], Thickness[Small]}], 
     RectangleBox[{0., 0}, {0.05, 117.},
      RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 31.},
      RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 23.},
      RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 45.},
      RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 32.},
      RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 70.},
      RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 57.},
      RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 123.},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 83.},
      RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 116.},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 150.},
      RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 164.},
      RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 203.},
      RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 288.},
      RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 224.},
      RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 355.},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 349.},
      RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 385.},
      RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 499.},
      RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 453.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 561.},
      RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 556.},
      RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 254.},
      RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 341.},
      RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 310.},
      RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 244.},
      RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 193.},
      RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 131.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.027999999999999997`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.4}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8846582981022215`*^9, 3.884658323189782*^9}, 
   3.8846584165268106`*^9, 3.8846605413847675`*^9, {3.884661154538265*^9, 
   3.8846612127183156`*^9}, 3.8846804153226995`*^9, 3.8846827131927004`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"17210fd6-ea3e-4165-b026-8a350153e8ca"]
}, Open  ]],

Cell["\<\
No se parece ni a una distribuci\[OAcute]n normal ni  a una distribuci\
\[OAcute]n de student, calcular el intervalo de confianza para la distribuci\
\[OAcute]n de estas entrop\[IAcute]as sale de este trabajo de tesis, ya que \
no se asemeja ni a una distribuci\[OAcute]n normal ni a una distribuci\
\[OAcute]n de student, por lo que se propone utilizar como umbral para hallar \
los valores m\[IAcute]nimos de entrop\[IAcute]a el valor del percentil 95 en \
vez de un \[IAcute]ntervalo de confianza. Entre el a\[NTilde]o 2000 y 2005, \
se aprecia un valor m\[IAcute]nimo en el precio, mismo que tiene impacto al \
estudiar la entrop\[IAcute]a, aunque en este trabajo no se estudian fen\
\[OAcute]menos econ\[OAcute]micos, se puede  \
\>", "Text",
 CellChangeTimes->{{3.8846827864753284`*^9, 3.8846829594328012`*^9}, {
  3.8847198246147575`*^9, 
  3.8847198252366467`*^9}},ExpressionUUID->"51890515-1f63-4508-ae8c-\
3b7f0c639478"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}]], "Input",
 CellLabel->
  "In[145]:=",ExpressionUUID->"cb8f2cd6-4c75-49b3-b12e-5f9e72ddd9a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{"Entropy", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "&"}], ",", "\[IndentingNewLine]", 
      RowBox[{"particionDiscReturMAVs", "[", "60", "]"}]}], 
     "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8846584939912195`*^9, 3.8846585845603504`*^9}, {
  3.884658671572624*^9, 3.8846586908339815`*^9}, {3.884659672912917*^9, 
  3.8846596880205154`*^9}, {3.8846597501945915`*^9, 3.884659752226778*^9}, {
  3.8846598290414867`*^9, 3.8846598328101077`*^9}, {3.884663131425769*^9, 
  3.884663143168182*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"6ecffbc7-4a2e-4ee4-94ed-c3f27f59adc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeanCI", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.884663147393443*^9, 3.8846631553510942`*^9}, {
  3.8846632560561733`*^9, 3.884663265848809*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"04e58e4a-d015-4d7f-8c5e-41c2342d3478"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8800638572225391`", ",", "0.8947246801926833`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8846632670581756`*^9, 3.8846632943964596`*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"8b1be14a-9047-4070-8540-17b9b5eae4f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"SMAVr", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8844456139677725`*^9, 3.884445620784367*^9}, {
  3.88444566524894*^9, 3.884445669268385*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"20800a7e-43b0-49c3-a7a4-77b301d15c8b"],

Cell[BoxData["1.3851824254968266`"], "Output",
 CellChangeTimes->{3.8844456220032225`*^9, 3.884445670335081*^9, 
  3.8846576885603294`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"ea786c90-a5d1-460a-9631-589f64d5bb09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"SMAVs", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.884445626824548*^9, 3.884445636116564*^9}, {
  3.884445676237505*^9, 3.8844456802993045`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"6b79c7fb-5312-4aab-a006-3f73051b4acd"],

Cell[BoxData["1.3851824254968266`"], "Output",
 CellChangeTimes->{3.8844456367072277`*^9, 3.8844456810091815`*^9, 
  3.884657688615136*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"f2d6b8e2-073a-4893-b436-1dd930962d7e"]
}, Open  ]],

Cell["\<\
en la siguiente linea, se seleccionan las fechas del mercado real (retornos \
de precios reales) en que hubo m\[IAcute]nima entropia\
\>", "Text",
 CellChangeTimes->{{3.884402885509087*^9, 3.8844029464439135`*^9}, {
  3.88440302737718*^9, 
  3.8844030536926947`*^9}},ExpressionUUID->"350fe8fc-a4fe-45a8-a906-\
0d6fd88e85f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MercadoNoGaussiano", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"SMAVr", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#", "]"}], " ", "<", " ", "umbral"}], " ", 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BuscarPrecio", "[", 
     RowBox[{"datedPrices_", ",", "date_"}], "]"}], ":=", 
    RowBox[{"FirstCase", "[", 
     RowBox[{"datedPrices", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"date", ",", "p_"}], "}"}], "\[RuleDelayed]", "p"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "La", " ", "siguiente", " ", "linea", " ", "de", " ", "codigo", " ", "nos",
     " ", "da", " ", "todas", " ", "las", " ", "fechas", " ", "en", " ", 
    "que", " ", "se", " ", "tuvo", " ", "minima", " ", "entropia", " ", "y", 
    " ", "su", " ", "precio"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rastreador", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"BuscarPrecio", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"database", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", "]"}],
           ",", "#"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"MercadoNoGaussiano", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.884402895129054*^9, 3.8844029109008713`*^9}, {
   3.884402988076893*^9, 3.88440301351418*^9}, {3.8844031092000294`*^9, 
   3.884403143468916*^9}, {3.884403179714567*^9, 3.884403184522971*^9}, 
   3.884403678363988*^9, 3.8844041401793733`*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"74508320-db3d-420d-a0b9-bd08844a81eb"],

Cell["\<\
De las fechas que arrojan m\[IAcute]nima entropia se calculan los retornos de \
los precios, se discretizan, se realiza un histograma para estudiar funciones \
de distribuci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.88440335202868*^9, 
  3.8844034158609123`*^9}},ExpressionUUID->"2822fc48-8183-47d4-84cd-\
a1e9bb7d859d"],

Cell["Primero se aplican los retornos ", "Text",
 CellChangeTimes->{{3.884403456327477*^9, 
  3.8844034656304417`*^9}},ExpressionUUID->"cd572561-634e-4a51-8e16-\
513dc85505e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"minEntropy", "=", 
   RowBox[{"Rastreador", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minEntropyReturns", "=", 
   RowBox[{
    RowBox[{"DeleteMissing", "[", "minEntropy", "]"}], "//", "Returns"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8844034717072983`*^9, 3.884403508303667*^9}, {
   3.8844036199617305`*^9, 3.884403671388625*^9}, {3.8844041602806206`*^9, 
   3.8844042057442636`*^9}, {3.884404255255661*^9, 3.884404257027347*^9}, {
   3.8844042980995607`*^9, 3.8844043530957613`*^9}, 3.8844044085229316`*^9, {
   3.8844044388757*^9, 3.8844044969264555`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"efc684d4-1fde-42c6-ba4c-756622028245"],

Cell["Ahora se discretizan", "Text",
 CellChangeTimes->{{3.884403521010992*^9, 
  3.8844035252446146`*^9}},ExpressionUUID->"ec25cca3-0419-427e-9c7a-\
279aea28d74a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QminEntropy", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"minEntropyReturns", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"3", "/", "4"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8844036022434225`*^9, 3.884403603418334*^9}, {
  3.884404504078209*^9, 3.8844045048693905`*^9}, {3.8844045593271475`*^9, 
  3.884404575398867*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"d3d8afec-b673-4aca-833a-b056dfb8202c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"intMinEntropy", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "\[Infinity]"}], "}"}], ",", "QminEntropy", ",", 
       RowBox[{"{", "\[Infinity]", "}"}]}], "]"}], ",", "2", ",", "1"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.884404549366289*^9, 3.884404605988269*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"37d1fa5b-0669-4c3f-98d3-6b4e57caf1a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rulesToMinEntropy", "=", 
   RowBox[{"reglas", "[", "intMinEntropy", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.884404654682539*^9, 3.884404700030528*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"215b2aa3-4e7b-40bc-9032-de3ad8ca85dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"discretMinReturn", "=", 
   RowBox[{"minEntropyReturns", "/.", "rulesToMinEntropy"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8844047347952127`*^9, 3.884404804088719*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"9255a4b7-6a68-4ac4-8735-60320ca199b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<fechas1.tsv\>\"", ",", 
   RowBox[{
    RowBox[{"database", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Dates\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.884078850101307*^9, 3.8840789132466297`*^9}, {
  3.8840796925676093`*^9, 3.8840796929783573`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"a1169ed2-4fcd-46e1-b4b2-25103fe8fd90"],

Cell[BoxData["\<\"fechas1.tsv\"\>"], "Output",
 CellChangeTimes->{
  3.8840788647535*^9, 3.8840789160825715`*^9, {3.8840796963658257`*^9, 
   3.884079697820342*^9}, 3.884335697300102*^9, 3.8844015887062616`*^9, 
   3.884445522580781*^9, 3.884657689144668*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"80545d45-4260-43bc-9524-21e0d807e2e4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\<fechas1.tsv\>\"", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[80]:=",ExpressionUUID->"ba8f0fc8-112f-40dd-88c2-8d21ff89a838"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\<fechas1.csv\>\"", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[81]:=",ExpressionUUID->"48839ed5-71cd-4f39-b7f4-a7cbe22ee509"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateString", "[", 
  TemplateBox[{RowBox[{
      StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain],
       "\"Fri 8 Nov 1991\""}],RowBox[{"DateObject", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{"1991", ",", "11", ",", "8"}], "}"}], ",", "\"Day\"", ",", 
        "\"Gregorian\"", ",", 
        RowBox[{"-", "6.`"}]}], "]"}]},
   "DateObject",
   Editable->False], "]"}]], "Input",
 CellChangeTimes->{{3.8840801471692595`*^9, 3.884080185730986*^9}, {
  3.8840805237634277`*^9, 3.8840805265540996`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"fa1adcd7-6873-4088-8dd3-325cdb5f29f7"],

Cell[BoxData["\<\"Fri 8 Nov 1991\"\>"], "Output",
 CellChangeTimes->{3.8840801555385666`*^9, 3.884080186169156*^9, 
  3.8843356974519053`*^9, 3.884401588828639*^9, 3.8844455229249845`*^9, 
  3.884657689283486*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"04218dbc-38ae-44df-aab1-72941273f5fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalendarDate", "[", 
  TemplateBox[{RowBox[{
      StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain],
       "\"Fri 8 Nov 1991\""}],RowBox[{"DateObject", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{"1991", ",", "11", ",", "8"}], "}"}], ",", "\"Day\"", ",", 
        "\"Gregorian\"", ",", 
        RowBox[{"-", "6.`"}]}], "]"}]},
   "DateObject",
   Editable->False], "]"}]], "Input",
 CellChangeTimes->{{3.8840805321856008`*^9, 3.8840805640102186`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"54cf1c94-8e10-4c47-aee1-9c493a1020a4"],

Cell[BoxData[
 RowBox[{"CalendarDate", "[", 
  TemplateBox[{RowBox[{
      StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain],
       "\"Fri 8 Nov 1991\""}],RowBox[{"DateObject", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{"1991", ",", "11", ",", "8"}], "}"}], ",", "\"Day\"", ",", 
        "\"Gregorian\"", ",", 
        RowBox[{"-", "6.`"}]}], "]"}]},
   "DateObject",
   Editable->False], "]"}]], "Output",
 CellChangeTimes->{{3.884080543282568*^9, 3.8840805643224125`*^9}, 
   3.884335697535392*^9, 3.8844015889054327`*^9, 3.8844455229933243`*^9, 
   3.8846576893408446`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"3ebf326d-3a4e-492c-9412-3dd73149263e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fechaString", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateString", ",", 
     RowBox[{
      RowBox[{"database", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Dates\>\"", "]"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.884080215210579*^9, 3.884080271481336*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"0e7a87dd-c971-474d-8fcb-230fe48828f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<fechaString1.tsv\>\"", ",", "fechaString"}], "]"}]], "Input",
 CellChangeTimes->{{3.8840802860603333`*^9, 3.8840803024809475`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"0393318f-0b8b-4064-90da-973c3019376d"],

Cell[BoxData["\<\"fechaString1.tsv\"\>"], "Output",
 CellChangeTimes->{3.884080303288414*^9, 3.884335701355138*^9, 
  3.884401593828563*^9, 3.8844455264533925`*^9, 3.884657692078632*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"d260ca41-ee56-4bfd-bad9-a964f3b99a36"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<fechaString1.tsv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[86]:=",ExpressionUUID->"63a0b40a-1199-481a-9669-2dd3769ae82b"]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{Automatic, -6}, {Automatic, 1}},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 173, 3, 87, "Title",ExpressionUUID->"13e2989d-d334-4cde-a4c5-1896724270ee"],
Cell[756, 27, 3708, 71, 286, "Input",ExpressionUUID->"84717159-2ec6-463f-a349-ce0b2d459d11",
 InitializationCell->True],
Cell[4467, 100, 1550, 33, 126, "Input",ExpressionUUID->"72ab9df0-cca0-4318-9d19-b1b9bd2c0751",
 InitializationCell->True],
Cell[6020, 135, 2321, 62, 199, "Code",ExpressionUUID->"a99e962e-3c61-4d86-a62b-4ca82aca1915"],
Cell[CellGroupData[{
Cell[8366, 201, 304, 5, 45, "Chapter",ExpressionUUID->"0fc01ad6-d04a-4a31-aa11-c3263d37ece4"],
Cell[8673, 208, 254, 4, 31, "Text",ExpressionUUID->"19eb24bf-d6d7-45c0-be0e-cfcfd0a2d8d6"],
Cell[8930, 214, 647, 14, 42, "Input",ExpressionUUID->"bcd7fad0-449f-4998-b6d8-aa2d58d7ad45"],
Cell[9580, 230, 342, 7, 26, "Input",ExpressionUUID->"fce3fbe6-ee72-4785-b2d2-6feaff7ac870"],
Cell[9925, 239, 307, 7, 31, "Text",ExpressionUUID->"1917bd5f-6dbc-4d00-85e5-40249d07c0b3"],
Cell[10235, 248, 598, 13, 42, "Input",ExpressionUUID->"cdc59797-abd7-4dad-83a1-34540d2a3f10"],
Cell[10836, 263, 251, 4, 31, "Text",ExpressionUUID->"09c94563-5c13-40f6-a332-84ba75565cb5"],
Cell[11090, 269, 380, 9, 26, "Input",ExpressionUUID->"6f9361b1-0ac2-4a96-b717-649de58741fe"],
Cell[11473, 280, 329, 6, 42, "Input",ExpressionUUID->"2550232b-d9e4-491d-b233-74a3706f8d32"],
Cell[11805, 288, 269, 6, 42, "Input",ExpressionUUID->"5b99d402-919a-4daa-9aba-d31fae0352a1"],
Cell[12077, 296, 233, 6, 31, "Text",ExpressionUUID->"9f48f040-d321-4a4e-a71b-a84547088301"],
Cell[12313, 304, 308, 7, 42, "Input",ExpressionUUID->"751cb140-2e75-4b45-9d6f-2cfcd1a71d63"],
Cell[12624, 313, 175, 3, 31, "Text",ExpressionUUID->"491095cb-6c51-45ce-8520-c4931e2eeb65"],
Cell[12802, 318, 376, 8, 42, "Input",ExpressionUUID->"fe09400a-da50-448a-a0a3-af434420a14e"],
Cell[13181, 328, 412, 6, 60, "Text",ExpressionUUID->"53db1fb8-d2b6-4ba8-bc58-65f906cca448"],
Cell[13596, 336, 198, 3, 31, "Text",ExpressionUUID->"cb546844-886a-49e2-9178-16b1de326a6a"],
Cell[13797, 341, 570, 15, 77, "Input",ExpressionUUID->"311da371-e394-4cd0-8216-a2875b7410ef"],
Cell[CellGroupData[{
Cell[14392, 360, 276, 6, 48, "Subsection",ExpressionUUID->"c403ed1b-4d07-46e9-b380-8f1ed0d09fb8"],
Cell[14671, 368, 248, 4, 31, "Text",ExpressionUUID->"f76b1b43-f18b-4fa5-8bf8-2c7dec9b75cf"],
Cell[14922, 374, 550, 11, 26, "Input",ExpressionUUID->"28654bd2-7048-42c0-bda2-073999867efb"],
Cell[15475, 387, 529, 13, 42, "Input",ExpressionUUID->"2a2a6897-332f-45e1-bfc9-acfc30427b56"],
Cell[16007, 402, 289, 6, 42, "Input",ExpressionUUID->"18a056ce-78f4-4a4f-8446-3b21190d424e"],
Cell[16299, 410, 364, 7, 31, "Text",ExpressionUUID->"8ccdf216-e66e-4ddc-8d72-23d9d9376bd7"],
Cell[16666, 419, 435, 11, 42, "Input",ExpressionUUID->"3db006b8-fee0-4723-a4b1-7d23eeb9fc44"],
Cell[CellGroupData[{
Cell[17126, 434, 521, 14, 42, "Input",ExpressionUUID->"32a3d448-9fcb-490b-ba1d-0fadfbd4ec2f"],
Cell[17650, 450, 321, 4, 30, "Output",ExpressionUUID->"19be6ea4-cce7-4f47-a9b5-a73a57422edf"]
}, Open  ]],
Cell[17986, 457, 501, 12, 42, "Input",ExpressionUUID->"face9fe0-3a0e-4a91-99dc-e6f5d39e6166"],
Cell[18490, 471, 254, 7, 31, "Text",ExpressionUUID->"608a73ad-ec57-4348-a85d-1dc0e3f0b5ff"],
Cell[18747, 480, 476, 9, 42, "Input",ExpressionUUID->"455ce953-a6c6-4b87-af0b-dba0b0ee2f23"],
Cell[19226, 491, 282, 6, 42, "Input",ExpressionUUID->"428a7015-afe9-4456-b47f-97dc8ca61762"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19545, 502, 197, 3, 60, "Section",ExpressionUUID->"83f2ce94-9c95-4582-aa6b-39afecbb04c5"],
Cell[19745, 507, 525, 11, 42, "Input",ExpressionUUID->"c7981a67-a0d7-4d89-9b0a-fd719a7e2f3a"],
Cell[20273, 520, 256, 4, 31, "Text",ExpressionUUID->"747c81f1-4286-4535-8442-05615b9879f9"],
Cell[20532, 526, 507, 10, 31, "Code",ExpressionUUID->"9b2fe28e-9dfc-44ff-aa9c-b9c48c75e7e0",
 InitializationCell->False],
Cell[21042, 538, 293, 4, 31, "Text",ExpressionUUID->"95b2bc3d-d47b-41c6-bad1-37967c5757d5"],
Cell[21338, 544, 352, 7, 42, "Input",ExpressionUUID->"9ce19600-7813-46d7-9890-77ca67869db5"],
Cell[21693, 553, 331, 7, 42, "Input",ExpressionUUID->"66bbae0b-9183-46b8-b5da-e6d9b1c91e2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22061, 565, 362, 8, 128, "Section",ExpressionUUID->"b846b2cd-07df-4821-93f3-e00f1e8a2d3a"],
Cell[22426, 575, 825, 23, 77, "Input",ExpressionUUID->"26c33254-96b8-4601-be10-3216d9336d5e"],
Cell[23254, 600, 333, 6, 52, "Text",ExpressionUUID->"697bc7ec-1154-45da-8c63-cf165d07912a"],
Cell[23590, 608, 1365, 39, 147, "Input",ExpressionUUID->"13a95fc8-00b1-4123-b659-85abdc0da1de"],
Cell[24958, 649, 188, 3, 31, "Text",ExpressionUUID->"87b2ad14-af9e-4fc2-8cfd-c2540cc2ae20"],
Cell[25149, 654, 410, 9, 63, "Input",ExpressionUUID->"07588ba2-1cd0-4a13-aa8e-153e70c3d546"],
Cell[25562, 665, 242, 6, 31, "Text",ExpressionUUID->"7bef745e-0cdf-4013-b1ca-7ffac0359bd9"],
Cell[25807, 673, 443, 9, 45, "Input",ExpressionUUID->"4d61a3c6-0880-45e9-9c75-40a9dbab24ca"],
Cell[CellGroupData[{
Cell[26275, 686, 203, 4, 40, "Subsubsection",ExpressionUUID->"f6bcc518-c287-42c4-96ef-ee1c22a6d507"],
Cell[26481, 692, 192, 3, 31, "Text",ExpressionUUID->"45d6f59d-ac8c-449b-9c4c-d9621a6b679e"],
Cell[26676, 697, 555, 14, 77, "Input",ExpressionUUID->"06afc6c2-51e6-4620-8d0d-ae48b32f91af"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27280, 717, 180, 3, 60, "Section",ExpressionUUID->"bcbad8af-a8ac-47ea-be02-66db517ccb98"],
Cell[27463, 722, 370, 8, 52, "Text",ExpressionUUID->"46ef3519-5020-46b0-b618-2a65d5b9c8a9"],
Cell[27836, 732, 212, 4, 35, "Text",ExpressionUUID->"d11a4639-11f5-4658-80b9-1de62cea51af"],
Cell[28051, 738, 326, 7, 52, "Text",ExpressionUUID->"6fe3584c-ad04-4dcf-8533-c6750ffe59ef"],
Cell[28380, 747, 465, 10, 42, "Input",ExpressionUUID->"0d23945f-1f9d-49f2-9f84-5b9ccf5f82d6"],
Cell[28848, 759, 834, 23, 42, "Input",ExpressionUUID->"de7316a7-13c0-49f4-9c88-68764df4bdf5"],
Cell[CellGroupData[{
Cell[29707, 786, 185, 3, 40, "Subsubsection",ExpressionUUID->"2ba31df2-fa11-4d5b-8c7f-468a36773815"],
Cell[29895, 791, 291, 6, 52, "Text",ExpressionUUID->"a1d92c15-7161-4662-9581-a9dcd4cd69b5"],
Cell[30189, 799, 459, 10, 42, "Input",ExpressionUUID->"77b10844-a55d-4aeb-8d15-a074830610df"],
Cell[30651, 811, 832, 23, 42, "Input",ExpressionUUID->"fa763407-6e90-4473-85d1-444ba4dc0f2f"],
Cell[CellGroupData[{
Cell[31508, 838, 959, 26, 130, "Input",ExpressionUUID->"485941c5-a666-495b-aef2-6b1d56d6ab23"],
Cell[32470, 866, 121006, 2057, 232, "Output",ExpressionUUID->"9f992d69-bb42-47bc-a974-fcfe350623f4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153561, 2932, 174, 3, 87, "Title",ExpressionUUID->"3691e4ee-bb77-426a-ba5d-ca1a388f0fa2"],
Cell[153738, 2937, 505, 11, 77, "Input",ExpressionUUID->"20733597-e194-4bb3-8035-ab9f9498dd2e"],
Cell[154246, 2950, 444, 9, 77, "Input",ExpressionUUID->"fa2fb42b-1ddd-4cc9-844c-739da5d7fc77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154727, 2964, 170, 3, 87, "Title",ExpressionUUID->"27220cd9-2c5a-4ff6-ae72-7021174031e2"],
Cell[154900, 2969, 176, 3, 87, "Title",ExpressionUUID->"7b4dcc3a-c057-4893-a731-c334c0c511ce"],
Cell[155079, 2974, 609, 12, 114, "Text",ExpressionUUID->"530491c0-a354-42f3-bf6c-5f76b44e9dee"],
Cell[CellGroupData[{
Cell[155713, 2990, 1642, 37, 77, "Input",ExpressionUUID->"8ed0ca6b-53dc-48ba-8f9e-52c76c2fb4b3"],
Cell[157358, 3029, 345, 5, 30, "Output",ExpressionUUID->"dd6b0a70-b788-4b6d-aa0c-82df4037826a"],
Cell[157706, 3036, 3029, 57, 217, "Output",ExpressionUUID->"17210fd6-ea3e-4165-b026-8a350153e8ca"]
}, Open  ]],
Cell[160750, 3096, 940, 15, 135, "Text",ExpressionUUID->"51890515-1f63-4508-ae8c-3b7f0c639478"],
Cell[161693, 3113, 166, 3, 42, "Input",ExpressionUUID->"cb8f2cd6-4c75-49b3-b12e-5f9e72ddd9a0"],
Cell[161862, 3118, 1232, 30, 201, "Input",ExpressionUUID->"6ecffbc7-4a2e-4ee4-94ed-c3f27f59adc4"],
Cell[CellGroupData[{
Cell[163119, 3152, 261, 5, 26, "Input",ExpressionUUID->"04e58e4a-d015-4d7f-8c5e-41c2342d3478"],
Cell[163383, 3159, 265, 6, 30, "Output",ExpressionUUID->"8b1be14a-9047-4070-8540-17b9b5eae4f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163685, 3170, 334, 7, 42, "Input",ExpressionUUID->"20800a7e-43b0-49c3-a7a4-77b301d15c8b"],
Cell[164022, 3179, 218, 3, 30, "Output",ExpressionUUID->"ea786c90-a5d1-460a-9631-589f64d5bb09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164277, 3187, 335, 7, 42, "Input",ExpressionUUID->"6b79c7fb-5312-4aab-a006-3f73051b4acd"],
Cell[164615, 3196, 218, 3, 30, "Output",ExpressionUUID->"f2d6b8e2-073a-4893-b436-1dd930962d7e"]
}, Open  ]],
Cell[164848, 3202, 334, 7, 52, "Text",ExpressionUUID->"350fe8fc-a4fe-45a8-a906-0d6fd88e85f0"],
Cell[165185, 3211, 1825, 46, 183, "Input",ExpressionUUID->"74508320-db3d-420d-a0b9-bd08844a81eb"],
Cell[167013, 3259, 335, 7, 52, "Text",ExpressionUUID->"2822fc48-8183-47d4-84cd-a1e9bb7d859d"],
Cell[167351, 3268, 176, 3, 31, "Text",ExpressionUUID->"cd572561-634e-4a51-8e16-513dc85505e4"],
Cell[167530, 3273, 765, 16, 77, "Input",ExpressionUUID->"efc684d4-1fde-42c6-ba4c-756622028245"],
Cell[168298, 3291, 164, 3, 31, "Text",ExpressionUUID->"ec25cca3-0419-427e-9c7a-279aea28d74a"],
Cell[168465, 3296, 550, 13, 42, "Input",ExpressionUUID->"d3d8afec-b673-4aca-833a-b056dfb8202c"],
Cell[169018, 3311, 482, 12, 42, "Input",ExpressionUUID->"37d1fa5b-0669-4c3f-98d3-6b4e57caf1a0"],
Cell[169503, 3325, 274, 5, 26, "Input",ExpressionUUID->"215b2aa3-4e7b-40bc-9032-de3ad8ca85dc"],
Cell[169780, 3332, 286, 5, 26, "Input",ExpressionUUID->"9255a4b7-6a68-4ac4-8735-60320ca199b1"],
Cell[CellGroupData[{
Cell[170091, 3341, 407, 9, 42, "Input",ExpressionUUID->"a1169ed2-4fcd-46e1-b4b2-25103fe8fd90"],
Cell[170501, 3352, 338, 5, 30, "Output",ExpressionUUID->"80545d45-4260-43bc-9524-21e0d807e2e4"]
}, Open  ]],
Cell[170854, 3360, 181, 3, 42, "Input",ExpressionUUID->"ba8f0fc8-112f-40dd-88c2-8d21ff89a838"],
Cell[171038, 3365, 181, 3, 42, "Input",ExpressionUUID->"48839ed5-71cd-4f39-b7f4-a7cbe22ee509"],
Cell[CellGroupData[{
Cell[171244, 3372, 644, 14, 54, "Input",ExpressionUUID->"fa1adcd7-6873-4088-8dd3-325cdb5f29f7"],
Cell[171891, 3388, 292, 4, 30, "Output",ExpressionUUID->"04218dbc-38ae-44df-aab1-72941273f5fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172220, 3397, 595, 13, 39, "Input",ExpressionUUID->"54cf1c94-8e10-4c47-aee1-9c493a1020a4"],
Cell[172818, 3412, 696, 15, 42, "Output",ExpressionUUID->"3ebf326d-3a4e-492c-9412-3dd73149263e"]
}, Open  ]],
Cell[173529, 3430, 400, 10, 42, "Input",ExpressionUUID->"0e7a87dd-c971-474d-8fcb-230fe48828f2"],
Cell[CellGroupData[{
Cell[173954, 3444, 264, 4, 42, "Input",ExpressionUUID->"0393318f-0b8b-4064-90da-973c3019376d"],
Cell[174221, 3450, 265, 3, 30, "Output",ExpressionUUID->"d260ca41-ee56-4bfd-bad9-a964f3b99a36"]
}, Open  ]],
Cell[174501, 3456, 273, 6, 42, "Input",ExpressionUUID->"63a0b40a-1199-481a-9669-2dd3769ae82b"]
}, Open  ]]
}
]
*)

